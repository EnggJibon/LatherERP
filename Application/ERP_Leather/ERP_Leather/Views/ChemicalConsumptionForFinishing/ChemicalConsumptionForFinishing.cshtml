@{
    ViewBag.Title = "Chemical Consumption";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">

    <div class="FormHeader">
        <fieldset id="FormHeaderFieldSet">

            <div id="FormTitlePannel" class="col-lg-4">
                <div id="FormTitle" style="font-size:larger; font-weight:bold;">@ViewBag.formTiltle</div>
            </div>
            <div id="MessageText" class="col-lg-6">

            </div>
            <div id="ButtonPanel" class="col-lg-2">
                <input type="button" id="btnReset" class="Button" value="Reset" style="position:absolute; right:20px;" />
                <input type="button" id="btnDelete" class="Button" value="Delete" style="position:absolute; right:75px;" />
                <input type="button" id="btnSearch" class="Button" value="Search" style="position:absolute; right:135px;" />
                <input type="button" id="btnSave" class="Button" value="Save" onclick="Save()" style="position:absolute; right:200px;" />
            </div>
        </fieldset>
    </div>

</div>

<div class="row">
    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Production For</label>
            </div>
            <div class="col-lg-3">
                <input type="hidden" id="CLProductionID" class="txtBox" />
                <input type="text" id="" class="" style="width:200px;" value="Finished Good Production" readonly="readonly" />
            </div>
            <div class="col-lg-2">
                <label>Production Floor</label>
            </div>
            <div class="col-lg-3">
                <input type="hidden" id="ProductionFloor" class="txtBox" style="width:150px;" readonly="readonly" />
                <input type="text" id="ProductionFloorName" class="txtBox" style="width:200px;" readonly="readonly" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Schedule Year</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ScheduleYear" class="txtBox" placeholder="Press F9" style="width:200px;" readonly="readonly" />
                <input type="hidden" id="YearMonID" class="txtBox" />
            </div>
            <div class="col-lg-2">
                <label>Schedule Month</label>
            </div>
            <div class="col-lg-3">
                <input type="hidden" id="ScheduleMonth" class="txtBox" style="width:150px;" readonly="readonly" />
                <input type="text" id="ScheduleMonthName" class="txtBox" style="width:200px;" readonly="readonly" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Schedule Code</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ScheduleNo" class="txtBox" readonly="readonly" style="width:200px;" />
                <input type="hidden" id="ScheduleID" class="txtBox" readonly="readonly" />
            </div>
            <div class="col-lg-2">
                <label>Production Process</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ProductionProcessName" class="txtBox" readonly="readonly" style="width:200px;" />
                <input type="hidden" id="ProductionProcessID" class="txtBox" readonly="readonly" />
            </div>
        </div>
    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Production No</label>
            </div>
            <div class="col-lg-3">
                <input type="hidden" id="ScheduleDateID" class="txtBox" />
                <input type="text" id="ProductionNo" class="txtBox" placeholder="Press F9" readonly="readonly" style="width: 200px;" />
            </div>

            <div class="col-lg-2">
                <label>Production Status</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ProductionStatus" readonly="readonly" class="txtBox" style="width:200px;" />

            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <label>Production Start Date</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ScheduleStartDate" class="txtBox datePicker" readonly="readonly" style="width:200px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>Production End Date</label>
            </div>
            <div class="col-lg-3">
                <input type="text" id="ScheduleEndDate" class="txtBox datePicker" readonly="readonly" style="width:200px; margin-left:2px;" />
            </div>
        </div>
    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>SD Production No</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleProductionNo" readonly="readonly" placeholder="Press F9" class="txtBox" style="width:150px;" />
                <input id="ScheduleItemID" type="hidden" class="txtBox" />
                <input id="CLProductionItemID" type="hidden" class="txtBox" />
            </div>
            <div class="col-lg-2">
                <label>Article Challan No</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ProductionArticleChallanID" class="txtBox" readonly="readonly" style="width:150px; margin-left:2px;" />
                <input type="text" id="ProductionArticleChallanNo" class="txtBox" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>PCS</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="SchedulePcs" class="txtBox" style="width:150px;" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Party</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="BuyerID" class="txtBox" />
                <input type="text" id="BuyerName" readonly="readonly" class="txtBox" style="width:150px;" />
            </div>
            <div class="col-lg-2">
                <label>Item Type</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ItemTypeID" class="txtBox" />
                <input type="text" id="ItemTypeName" readonly="readonly" class="txtBox" name="" tabindex="" style="width:150px;" />
            </div>
            <div class="col-lg-2">
                <label>Side</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleSide" class="txtBox" style="width:150px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <label>Order</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="BuyerOrderID" class="txtBox" />
                <input type="text" id="BuyerOrderNo" readonly="readonly" class="txtBox" style="width:150px;" />
            </div>
            <div class="col-lg-2">
                <label>Leather Status</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="LeatherStatusID" class="txtBox" />
                <input type="text" id="LeatherStatusName" class="txtBox" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>Weight</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleWeight" class="txtBox" style="width:60px;" />
                <input type="hidden" id="ScheduleWeightUnit" class="txtBox" />
                <input type="text" id="ScheduleWeightUnitName" readonly="readonly" class="txtBox" style="width:85px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <label>Article</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ProductionArticleID" class="txtBox" />
                <input type="hidden" id="ProductionArticleNo" class="txtBox" />
                <input type="text" id="ProductionArticleName" class="txtBox" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label></label>
            </div>
            <div class="col-lg-2">

            </div>
            <div class="col-lg-2">
                <label>Area</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleArea" class="txtBox" style="width:60px;" />
                <input type="hidden" id="ScheduleAreaUnit" class="txtBox" />
                <input type="text" id="ScheduleAreaUnitName" readonly="readonly" class="txtBox" style="width:85px;" />
            </div>
        </div>


    </div>



    <div class="FormBody">
        <div class="row">


            <div class="col-lg-2">
                <label>Color</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="CLProductionColorID" class="txtBox" />
                <input type="hidden" id="SdulItemColorID" class="txtBox" />
                <input type="hidden" id="ColorID" class="txtBox" />
                <input type="text" id="ColorName" readonly="readonly" class="txtBox" style="width:150px;" placeholder="Press F9" />

            </div>
            <div class="col-lg-2">
                <label>Area</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ColorArea" class="txtBox" style="width:50px;" />
                <input type="hidden" id="AreaUnit" class="txtBox" />
                <input type="text" id="AreaUnitName" readonly="readonly" class="txtBox" style="width:90px;" />
            </div>
            <div class="col-lg-2">
                <label>PCS</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ColorPCS" class="txtBox" style="width:150px;" />
            </div>

        </div>
        <div class="row">


            <div class="col-lg-2">
                <label>Side</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ColorSide" class="txtBox" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Weight</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ColorWeight" class="txtBox" style="width:50px;" />
                <input type="hidden" id="WeightUnit" class="txtBox" />
                <input type="text" id="WeightUnitName" readonly="readonly" class="txtBox" style="width:90px;" />
            </div>
            <div class="col-lg-2">
                <label>Remarks</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="Remarks" readonly="readonly" class="txtBox" style="width:150px;" />
            </div>

        </div>

    </div>

    <div class="FormBody">
        <div id="ProductionGrid"></div>
        <input type="hidden" class="txtBox" id="ParentID" />
        <input type="hidden" class="txtBox" id="CLProductionDrumID" />
    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Production Category</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ProductionCategory" class="" value="Crusting" readonly="readonly" style="width: 150px;" />
            </div>

            <div class="col-lg-2">
                <label>Recipe Challan No</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="RecipeChallanNo" class="txtBox" readonly="readonly" name="" tabindex="" style="width:150px; margin-left:2px;" />

            </div>
            <div class="col-lg-2">
                <label>Color</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ArticleColorName" class="txtBox" readonly="readonly" name="" tabindex="" style="width:150px; margin-left:2px;" />
            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label></label>
            </div>
            <div class="col-lg-2">

            </div>
            <div class="col-lg-2">
                <label>Article No</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ArticleID" class="txtBox" />
                <input type="text" id="ArticleNo" class="txtBox ReadOnlyTextbox" name="" tabindex="" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Base Quantity</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="BaseQuantity" class="txtBox RequiredTextBox " name="" tabindex="" readonly="readonly" style="width: 50px;" />
                <input type="hidden" id="BaseUnit" class="txtBox" />
                <input type="text" id="BaseUnitName" class="txtBox RequiredTextBox " name="" tabindex="" readonly="readonly" style="width: 90px;" />

            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Recipe No</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="RecipeID" class="txtBox Recipe" readonly="readonly" style="width:150px;" placeholder="Press F9" />
            </div>
            <div class="col-lg-2">
                <label>Article Name</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ArticleName" class="txtBox ReadOnlyTextbox" name="" tabindex="" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Requirement On</label>
            </div>
            <div class="col-lg-2">
                <select id="RequirementOn" style="width:150px;" class="txtBox">
                    <option value="">--Select--</option>
                    <option value="PR">Production</option>
                    <option value="DR">Drum</option>
                    <option value="CL">Color</option>
                </select>
            </div>
        </div>
    </div>

    <div class="FormBody">
        <div id="ProductionItemGrid"></div>
    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Confirm Comment</label>
            </div>
            <div class="col-lg-4">
                <textarea id="ConfirmComment" class="txtBox" name="" tabindex=""></textarea>
                <input type="button" id="btnCheck" value="Check" />
                <input type="button" id="btnConfirm" value="Confirm" />
            </div>
        </div>
    </div>

</div>



<div id="YearMonthWindow" style="display: none;">
    <div id="YearMonthWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnYearMonthWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnYearMonthWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="RequisitionWindow" style="display: none;">
    <div id="RequisitionWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnRequisitionWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnRequisitionWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="RequisitionDateWindow" style="display: none;">
    <div id="RequisitionDateWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnRequisitionDateWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnRequisitionDateWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="ItemWindow" style="display: none;">
    <div id="ItemWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnItemWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnItemWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="ColorWindow" style="display: none;">
    <div id="ColorWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnColorWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnColorWindowOK" class="PopUpButton" value="OK" />
</div>



<div id="RecipeWindow" style="display: none;">
    <div id="RecipeWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnRecipeWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnRecipeWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="ChemicalItemWindow" style="display: none;">
    <div id="ChemicalItemWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnChemicalItemWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnChemicalItemWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="SearchWindow" style="display: none;">
    <div id="SearchWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnSearchWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnSearchWindowOK" class="PopUpButton" value="OK" />

</div>

<div id="SaveChangeWindow" style="display: none;">
    <p><h5>Data will be lost if you continue.</h5></p>
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
</div>

<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>

<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 42%; color: White;">
        Please wait... <img src="../../images/ajax-loading.gif">
    </p>
</div>

<script type="text/javascript">
    var ItemGridchangeStatus = 0;
    var changeStatus = 0; // any change textbox/Dropdown/Grid
    var resetEditStatus = 0;
    var dataitem = {};
    var checkUnsavedData = 0;
    var PageStatus = "";
    var PopUpWindowOPen = 1;

    $(document).ready(function () {

        //-------------------------------------To Make Some Form field read only & vice Versa...................................
        function MakeFormFieldNonEditable()
        {
            $("#SchedulePcs").attr("disabled", "disabled");
            $("#ScheduleSide").attr("disabled", "disabled");
            $("#ScheduleWeight").attr("disabled", "disabled");
            $("#ScheduleArea").attr("disabled", "disabled");
            $("#ColorArea").attr("disabled", "disabled");
            $("#ColorPCS").attr("disabled", "disabled");
            $("#ColorSide").attr("disabled", "disabled");
            $("#ColorWeight").attr("disabled", "disabled");
            $("#RequirementOn").attr("disabled", "disabled");
            //$("#ProductionProcess").attr("disabled", "disabled");
        }

        function MakeFormFieldEditable() {
            $("#SchedulePcs").removeAttr("disabled");
            $("#ScheduleSide").removeAttr("disabled");
            $("#ScheduleWeight").removeAttr("disabled");
            $("#ScheduleArea").removeAttr("disabled");
            $("#ColorArea").removeAttr("disabled");
            $("#ColorPCS").removeAttr("disabled");
            $("#ColorSide").removeAttr("disabled");
            $("#ColorWeight").removeAttr("disabled");
            $("#RequirementOn").removeAttr("disabled");
            //$("#ProductionProcess").removeAttr("disabled");
        };
        //-------------------------------------To Make Some Form field read only & vice Versa...................................

        //--------------------------------------Start of Defining Datasource & Dropdown-----------------------------------------------------------------
        var ddlSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "SizeID",
                    fields: {
                        SizeID: { editable: false },
                        SizeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllPackSizeForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlSize(container, options) {
            $('<input name="SizeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "SizeName",
                        dataValueField: "SizeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlSizeDataSource
                    });
        };

        var ddlUnitForChemicalPackSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemicalPackSize", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemicalPackSize(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalPackSizeDataSource
                    });
        };


        var ddlUnitForChemicalDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemical(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalDataSource
                    });
        };


        var ddlItemTypeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemTypeID",
                    fields: {
                        ItemTypeID: { editable: false },
                        ItemTypeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllItemType", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlItemType(container, options) {
            $('<input name="ItemTypeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "ItemTypeName",
                        dataValueField: "ItemTypeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlItemTypeDataSource
                    });
        };

        var ddlUnitForLeatherDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnit", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForLeather(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlUnitForLeatherDataSource
                    });
        };


        var ddlUnitDataSourceForThickness = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetCategoryWiseUnit", "WBRequisitionForCrusting")',
                    type: "GET",
                    dataType: "JSON",
                    data: { "_UnitCategory": "Thickness" }
                }
            }
        });

        function ddlUnitForThickness(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlUnitDataSourceForThickness
                    });
        };

        var ddlItemTypeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemTypeID",
                    fields: {
                        ItemTypeID: { editable: false },
                        ItemTypeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllItemType", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlItemType(container, options) {
            $('<input name="ItemTypeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "ItemTypeName",
                        dataValueField: "ItemTypeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlItemTypeDataSource
                    });
        };



        var ddlLeatherStatusDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "LeatherStatusID",
                    fields: {
                        LeatherStatusID: { editable: false },
                        LeatherStatusName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllLeatherStatus", "WBRequisitionForCrusting")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlLeatherStatus(container, options) {
            $('<input name="LeatherStatusID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "LeatherStatusName",
                        dataValueField: "LeatherStatusName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlLeatherStatusDataSource
                    });
        };


        var ddlThicknessAtDataSource = [{ text: "After Shaving", value: "After Shaving" }, { text: "After Finishing", value: "After Finishing" }];

        function ddlChallanCategory(container, options) {
            $('<input id="ThicknessAt" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "text",
                        dataValueField: "value",
                        optionLabel: "Select",
                        change: function (e) {
                            changeStatus = 1;
                        },
                        dataSource: ddlThicknessAtDataSource
                    });
        };

        var ddlUnitDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnit", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnit(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlUnitDataSource
                    });
        };
        //--------------------------------------Start of Defining Datasource & Dropdown-----------------------------------------------------------------

        //--------------------------------------Start of defining Datagrid----------------------------------------------------------------
        var YearMonthGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "YearMonID",
                    fields: {
                        YearMonID: { editable: false },
                        ScheduleMonth: { editable: false },
                        ScheduleMonthName: { editable: false },
                        ScheduleYear: { editable: false },
                        ProductionFloor: { editable: false },
                        ProductionFloorName: { editable: false },
                        ScheduleID: { editable: false },
                        ScheduleNo: { editable: false },
                        ProductionProcessID: { editable: false },
                        ProductionProcessName: { editable: false }
                    }
                }
            },
            transport: {
                read: {
                    url: '@Url.Action("GetAllYearMonthCombinationForConsumption", "ChemicalConsumptionForCrusting")',
                    type: "GET",
                    dataType: "JSON",
                    data: { "_ScheduleFor": "FNP" }
                }
            },
            pageSize: 50

        });

        var YearMonthGrid = $("#YearMonthWindowGrid").kendoGrid({
            dataSource: YearMonthGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            autoBind: false,
            columns: [
                  { field: "ProductionFloorName", title: "Production Floor", width: "60px" },
                  { field: "ScheduleYear", title: "Requisition Year", width: "60px" },
                  { field: "ScheduleMonthName", title: "Requisition Month", width: "60px" },
                  { field: "ScheduleNo", title: "Schedule Code", width: "60px", filterable: false, sortable: false },
                  { field: "ProductionProcessName", title: "Production Process", width: "60px" }
            ]
        });


        var RequisitionGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ScheduleID",
                    fields: {
                        ScheduleID: { editable: false },
                        ScheduleNo: { editable: false },
                        ProductionProcessID: { editable: false },
                        ProductionProcessName: { editable: false }
                    }
                }
            },
            pageSize: 50

        });

        var RequisitionGrid = $("#RequisitionWindowGrid").kendoGrid({
            dataSource: RequisitionGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            columns: [
                  { field: "ScheduleNo", title: "Schedule Code", width: "60px", filterable: false, sortable: false },
                  { field: "ProductionProcessName", title: "Production Process", width: "60px" }
            ]

        });

        var RequisitionDateGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ScheduleDateID",
                    fields: {
                        ScheduleDateID: { editable: false },
                        ProductionNo: { editable: false },
                        ProductionStatus: { editable: false },
                        ScheduleStartDate: { editable: false },
                        ScheduleEndDate: { editable: false }
                    }
                }
            },
            pageSize: 50

        });

        var RequisitionDateGrid = $("#RequisitionDateWindowGrid").kendoGrid({
            dataSource: RequisitionDateGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            columns: [
                  { field: "ProductionNo", title: "Production No", width: "60px", filterable: false, sortable: false },
                  { field: "ProductionStatus", title: "Production Status", width: "60px" },
                  { field: "ScheduleStartDate", title: "Schedule Start Date", width: "60px" },
                  { field: "ScheduleEndDate", title: "Schedule End Date", width: "60px" }
            ]

        });


        var ItemWindowGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "RequisitionItemID",
                    fields: {
                        RequisitionItemID: { editable: false },
                        ScheduleItemID: { editable: false },
                        ScheduleProductionNo: { editable: false },
                        BuyerID: { editable: false },
                        BuyerName: { editable: false },
                        BuyerOrderID: { editable: false },
                        BuyerOrderNo: { editable: false },
                        ItemTypeID: { editable: false },
                        ItemTypeName: { editable: false },
                        LeatherStatusID: { editable: false },
                        LeatherStatusName: { editable: false },
                        ProductionArticleID: { editable: false },
                        ProductionArticleNo: { editable: false },
                        ProductionArticleName: { editable: false },
                        ProductionArticleChallanNo: { editable: false }
                    }
                }
            },
            pageSize: 50
        });

        var ItemWindowGrid = $("#ItemWindowGrid").kendoGrid({
            dataSource: ItemWindowGridDataSource,
            pageable: true,
            editable: true,
            edit: function (e) {
                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 200,
            toolbar: [{
                text: "Add New Item",
                className: "btnItemGrid",
                imageClass: "k-icon k-add"
            }],
            columns: [
                    //{ field: "RequisitionItemID", title: "Item ID", width: "60px", sortable: false, filterable: false },
                    { field: "ScheduleProductionNo", title: "S.P. No", width: "60px" },
                    { field: "BuyerName", title: "Party", width: "60px" },
                    { field: "BuyerOrderNo", title: "Order", width: "60px" },
                    { field: "ItemTypeName", title: "Item Type", width: "60px" },
                    { field: "LeatherStatusName", title: "Leather Status", width: "60px" },
                    { field: "ProductionArticleName", title: "Article", width: "60px" },
                    { field: "ProductionArticleChallanNo", title: "Article Challan No", width: "60px" },
            ]

        }).data('kendoGrid');



        var ColorWindowGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "SdulItemColorID",
                    fields: {
                        SdulItemColorID: { editable: false },
                        ColorID: { editable: false },
                        ColorName: { editable: false },
                        ColorArea: { editable: false },
                        AreaUnit: { editable: false },
                        AreaUnitName: { editable: false },
                        ColorPCS: { editable: false },
                        ColorSide: { editable: false },
                        ColorWeight: { editable: false },
                        WeightUnit: { editable: false },
                        WeightUnitName: { editable: false },
                        Remarks: { editable: false }
                    }
                }
            },
            pageSize: 50
        });

        var ColorWindowGrid = $("#ColorWindowGrid").kendoGrid({
            dataSource: ColorWindowGridDataSource,
            pageable: true,
            editable: true,
            edit: function (e) {
                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 200,
            toolbar: [{
                text: "Add New Item",
                className: "btnItemGrid",
                imageClass: "k-icon k-add"
            }],
            columns: [
                    //{ field: "RequisitionItemID", title: "Item ID", width: "60px", sortable: false, filterable: false },
                    { field: "ColorName", title: "Color", width: "60px" },
                    { field: "ColorPCS", title: "PCS", width: "60px" },
                    { field: "ColorSide", title: "Side", width: "60px" },
                    { field: "ColorArea", title: "Area", width: "60px" },
                    { field: "AreaUnitName", title: "Unit", width: "60px" },
                    { field: "ColorWeight", title: "Area", width: "60px" },
                    { field: "WeightUnitName", title: "Unit", width: "60px" },
                    { field: "Remarks", title: "Remarks", width: "60px" },
            ]

        }).data('kendoGrid');


        var ProductionGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "CLProductionDrumID",
                    fields: {
                        CLProductionDrumID: { editable: false },
                        CrustSdulDrumID: { editable: false },
                        SdulItemColorID: { editable: false },
                        ScheduleDateID: { editable: false },
                        ScheduleItemID: { editable: false },
                        MachineID: { editable: false },
                        MachineNo: { editable: false },
                        ColorID: { editable: false },
                        GradeRange: { editable: false },
                        DrumPcs: { editable: false },
                        DrumSide: { editable: false },
                        DrumArea: { editable: false },
                        AreaUnit: { editable: false },
                        AreaUnitName: { editable: false },
                        DrumWeight: { editable: false },
                        WeightUnit: { editable: false },
                        WeightUnitName: { editable: false },
                        Remarks: { editable: false }
                    }
                }
            },
            pageSize: 50
        });

        var ProductionGrid = $("#ProductionGrid").kendoGrid({
            dataSource: ProductionGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            edit: function (e) {
                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            height: 170,
            //toolbar: [{
            //    text: "Add New Leather",
            //    className: "btnProduction",
            //    imageClass: "k-icon k-add"
            //}],
            columns: [
                  //{ field: "CLProductionDrumID", title: "Production Drum ID", width: "60px", sortable: false, filterable: false  },
                  //{ field: "CrustSdulDrumID", title: "Schedule Drum ID", width: "60px", sortable: false, filterable: false },
                  { field: "MachineNo", title: "Drum No", width: "60px", sortable: false, filterable: false, attributes: { "class": "" } },
                  { field: "GradeRange", title: "Grade Range", width: "60px", sortable: false, filterable: false },
                  { field: "DrumPcs", title: "PCS", width: "50px" },
                  { field: "DrumSide", title: "Side", width: "60px" },
                  { field: "DrumArea", title: "Area", width: "50px" },
                  { field: "AreaUnitName", title: "Unit", width: "60px" },
                  { field: "DrumWeight", title: "Weight", width: "50px" },
                  { field: "WeightUnitName", title: "Unit", width: "60px" },
                  { field: "Remarks", title: "Remarks", width: "60px" },
                  //{ command: [{ name: "btnDeleteProduction", text: "Delete", click: DeleteRequisition }], title: "Delete", width: 50 },
            ]
        }).data('kendoGrid');

        

        var ProductionItemGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "CLProdChemicalID",
                    fields: {
                        CLProdChemicalID: { editable: false },
                        CLProductionDrumID: { editable: false },
                        RecipeItemID: { editable: false },
                        RecipeID: { editable: false },
                        ItemID: { editable: true },
                        ItemName: { editable: true, defaultValue: 'Press F9' },
                        RequiredQty: { editable: false, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequiredUnit: { editable: false },
                        RequiredUnitName: { editable: false },
                        StockQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        PackSize: { editable: true },
                        PackSizeName: { editable: true },
                        SizeUnit: { editable: true },
                        SizeUnitName: { editable: true },
                        PackQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequsitionQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequisitionUnit: { editable: true },
                        RequisitionUnitName: { editable: true, defaultValue: 'KG' },
                        SupplierID: { editable: true },
                        SupplierName: { editable: true }

                    }
                }
            },
            pageSize: 50
        });

        var ProductionItemGrid = $("#ProductionItemGrid").kendoGrid({
            dataSource: ProductionItemGridDataSource,
            pageable: true,
            editable: true,
            edit: function (e) {
                $("[name='PackQty']", e.container).blur(function (e) {
                    var RequisitionQuantity = 0;
                    var grid = $("#ProductionItemGrid").data("kendoGrid");
                    var row = $(this).closest("tr");

                    if (grid.dataItem(row).PackSizeName != "") {
                        if (grid.dataItem(row).PackQty != "") {
                            RequisitionQuantity = grid.dataItem(row).PackSizeName * grid.dataItem(row).PackQty;
                        }
                    }

                    var item = grid.dataItem(row);
                    item.RequsitionQty = RequisitionQuantity;
                });




                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 400,
            toolbar: [{
                text: "Add New Chemical",
                className: "btnProductionItemGrid",
                imageClass: "k-icon k-add"
            }],
            columns: [
                    //{ field: "CLProdChemicalID", title: "CLProdChemicalID", width: "100px" },
                    //{ field: "CLProductionDrumID", title: "CLProductionDrumID", width: "100px" },
                    { field: "ItemName", title: "Chemical<span style='color:red'>*</span>", width: "100px", attributes: { "class": "ChemicalItemName" } },
                    { field: "SupplierName", title: "Supplier", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "StockQty", format: "{0:n2}", title: "Consumable Stock Qty", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "StockUnitName", title: "Stock Unit", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "RequiredQty", format: "{0:n2}", title: "Required Qty", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "RequiredUnitName", title: "Unit", width: "75px", attributes: { style: "background-color: silver" } },
                    { field: "RequsitionQty", format: "{0:n2}", title: "Use Qty<span style='color:red'>*</span>", width: "80px" },
                    { field: "RequisitionUnitName", title: "Unit<span style='color:red'>*</span>", width: "60px", editor: ddlUnitForChemical },
                    { command: [{ name: "DeltedRow", text: "Delete", click: DeleteItem }], title: "Action", width: 70 }
            ]
        }).data('kendoGrid');

        var SearchGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "CLProductionID",
                    fields: {
                        CLProductionID: { editable: false },
                        ScheduleProductionNo: { editable: false },
                        BuyerName: { editable: false },
                        BuyerOrderNo: { editable: false },
                        ItemTypeName: { editable: false },
                        LeatherStatusName: { editable: false },
                        ArticleName: { editable: false },
                        ColorName: { editable: false },
                        ColorArea: { editable: false },
                        AreaUnitName: { editable: false },
                        ProductionArticleChallanNo: { editable: false },
                        RecordStatus: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetSearchInformaiton", "ChemicalConsumptionForFinishing")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        var searchGrid = $("#SearchWindowGrid").kendoGrid({
            dataSource: SearchGridDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            autoBind: false,
            columns: [
                    { field: "ScheduleProductionNo", title: "SD Production No", width: "60px" },
                    { field: "BuyerName", title: "Party", width: "60px" },
                    { field: "BuyerOrderNo", title: "Order", width: "60px" },
                    { field: "ArticleName", title: "Article", width: "60px" },
                    { field: "ProductionArticleChallanNo", title: "Challan", width: "60px" },
                    { field: "ItemTypeName", title: "Item Type", width: "60px" },

                    { field: "LeatherStatusName", title: "Leather Status", width: "60px" },
                    { field: "ColorName", title: "Color", width: "60px" },
                    { field: "ColorArea", title: "Area", width: "60px" },
                    { field: "AreaUnitName", title: "Unit", width: "60px" },

                    { field: "RecordStatus", title: "Record Status", width: "60px" }
            ]
        });

        var RecipeGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "RecipeID",
                    fields: {
                        RecipeID: { editable: false },
                        ArticleID: { editable: false },
                        ArticleNo: { editable: false },
                        ArticleName: { editable: false },
                        ArticleColor: { editable: false },
                        ArticleColorName: { editable: false },
                        ArticleChallanNo: { editable: false },
                        BaseQuantity: { editable: false },
                        BaseUnit: { editable: false },
                        BaseUnitName: { editable: false },
                    }
                }
            },
            pageSize: 50
        });

        var RecipeGrid = $("#RecipeWindowGrid").kendoGrid({
            dataSource: RecipeGridDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            //autoBind: false,
            columns: [
                  { field: "RecipeID", title: "Recipe ID", width: "60px" },
                  { field: "ArticleNo", title: "Article No.", width: "60px" },
                  { field: "ArticleName", title: "Article Name", width: "60px" },
                  { field: "ArticleColorName", title: "Article Color", width: "80px" },
                  { field: "ArticleChallanNo", title: "Article Challan No", width: "60px" },
                  { field: "BaseQuantity", title: "Base Quantity", width: "80px" },
                  { field: "BaseUnitName", title: "Base Unit", width: "60px" }
            ]
        });

        var ChemicalItemDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemID",
                    fields: {
                        ItemID: { editable: false },
                        ItemName: { editable: false },
                        SupplierID: { editable: false },
                        SupplierName: { editable: false },
                        StockQty: { editable: false },
                        StockUnit: { editable: false },
                        StockUnitName: { editable: false }
                    }
                }
            },
            pageSize: 50

        });

        var ChemicalItemGrid = $("#ChemicalItemWindowGrid").kendoGrid({
            dataSource: ChemicalItemDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            columns: [
                  //{ field: "ItemID", title: "Item ID", width: "60px", filterable: false, sortable: false },
                  { field: "ItemName", title: "Item Name", width: "60px" },
                  { field: "SupplierName", title: "Supplier", width: "60px", filterable: false, sortable: false },
                  { field: "StockQty", title: "Consumable Stock Qty", width: "60px" },
                  { field: "StockUnitName", title: "Unit", width: "60px", filterable: false, sortable: false }
            ]

        });

        //--------------------------------------End of defining Datagrid----------------------------------------------------------------


        //----------------------------------------To open all the pop up windows--------------------------------------------------------------------
        function LoadChemicalItemWindowGrid() {
            $.ajax({
                url: '@Url.Action("GetChemicalItemListInProductionFloor", "ChemicalConsumption")',
                data: ({ "_ProductionFloor": $("#ProductionFloor").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ChemicalItemWindowGrid").data("kendoGrid").dataSource.data(response);
                }
            });
        }

        $(document).on('keyup', '.ChemicalItemName', function (e) {

            if (e.which == 120) {
                LoadChemicalItemWindowGrid();
                SelectedItemOfListOfValue('ChemicalItemWindowGrid');
                ChemicalItemWindow.open(); //Open Popup
                ChemicalItemWindow.center();
            }
        });

        

        function LoadProductionWindowGrid() {
            $.ajax({
                url: '@Url.Action("GetProductionInformation", "ChemicalConsumption")',
                data: ({ "_ScheduleID": $("#ScheduleID").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ProductionWindowGrid").data("kendoGrid").dataSource.data(response);
                }
            });
        }

        function GetRecipeForFixedProcess() {
            $.ajax({
                url: '@Url.Action("GetRecipeForFixedProcess", "ChemicalConsumption")',
                type: 'GET',
                data: { "_RecipeFor": $("#ProductionProcessID").val() },
                success: function (response) {

                    $("#RecipeWindowGrid").data('kendoGrid').dataSource.data(response);
                } //End of success call
            });
        };

        $(document.body).keyup(function (e) {
            //if (PopUpWindowOPen == 1) {
            if ($("#ScheduleYear").is(":focus")) {
                if (e.keyCode == 120 && PopUpWindowOPen == 1) {
                    SelectedItemOfListOfValue('YearMonthWindowGrid');
                    YearMonthWindow.open();
                    YearMonthWindow.center();
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            }

            if ($("#ScheduleNo").is(":focus")) {
                if (e.keyCode == 120 && PopUpWindowOPen == 1) {
                    if ($("#YearMonID").val() != "") {
                        $.ajax({
                            url: '@Url.Action("GetAllRequisition", "WBRequisitionForCrusting")',
                            type: 'GET',
                            data: { "_YearMonID": $("#YearMonID").val() },
                            success: function (response) {
                                $("#RequisitionWindowGrid").data("kendoGrid").dataSource.data(response);
                            } //End of success call
                        });
                        SelectedItemOfListOfValue('RequisitionWindowGrid');
                        RequisitionWindow.open();
                        RequisitionWindow.center();
                    }
                    else {
                        $('#MessageText').html("Please Select Requisition Information First");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        e.stopImmediatePropagation();
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            };

            if ($("#ProductionNo").is(":focus")) {
                if (e.keyCode == 120 && PopUpWindowOPen == 1) {
                    if ($("#ScheduleID").val() != "") {
                        $.ajax({
                            url: '@Url.Action("GetAllScheduleDate", "ChemicalConsumptionForCrusting")',
                            type: 'GET',
                            data: { "_ScheduleID": $("#ScheduleID").val() },
                            success: function (response) {
                                $("#RequisitionDateWindowGrid").data("kendoGrid").dataSource.data(response);
                            } //End of success call
                        });
                        SelectedItemOfListOfValue('RequisitionDateWindowGrid');
                        RequisitionDateWindow.open();
                        RequisitionDateWindow.center();
                    }
                    else {
                        $('#MessageText').html("Please Select Schedule Code First");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        e.stopImmediatePropagation();
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            };

            if ($("#ScheduleProductionNo").is(":focus")) {
                if (e.keyCode == 120 && PopUpWindowOPen == 1) {
                    if ($("#ScheduleDateID").val() != "") {
                        $.ajax({
                            url: '@Url.Action("GetAllScheduleItem", "ChemicalConsumptionForFinishing")',
                            type: 'GET',
                            data: { "_ScheduleDateID": $("#ScheduleDateID").val() },
                            success: function (response) {
                                $("#ItemWindowGrid").data("kendoGrid").dataSource.data(response);
                            } //End of success call
                        });
                        SelectedItemOfListOfValue('ItemWindowGrid');
                        ItemWindow.open();
                        ItemWindow.center();
                    }
                    else {
                        $('#MessageText').html("Please Select Production No First");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        e.stopImmediatePropagation();
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            };
            if ($("#ColorName").is(":focus")) {
                if (e.keyCode == 120 && PopUpWindowOPen == 1) {
                    if ($("#ScheduleItemID").val() != "") {
                        $.ajax({
                            url: '@Url.Action("GetColorListForScheduleItem", "CLRequisitionForFinishing")',
                            type: 'GET',
                            data: { "_ScheduleItemID": $("#ScheduleItemID").val() },
                            success: function (response) {
                                $("#ColorWindowGrid").data("kendoGrid").dataSource.data(response);
                            } //End of success call
                        });
                        SelectedItemOfListOfValue('ColorWindowGrid');
                        ColorWindow.open();
                        ColorWindow.center();
                    }
                    else {
                        $('#MessageText').html("Please Select SD Production No First");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        e.stopImmediatePropagation();
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            };
            if ($(".Recipe").is(":focus")) {
                if (e.which == 120 && PopUpWindowOPen == 1) {
                    if ($("#ProductionProcessID").val() != "" && $("#ProductionFloor").val() != "") {
                        GetRecipeForFixedProcess();
                        SelectedItemOfListOfValue('RecipeWindowGrid');
                        RecipeWindow.open();
                        RecipeWindow.center();
                    }
                    else {
                        $('#MessageText').html("Please Select Production Process & Production Floor");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            };
        });
        //----------------------------------------End of opening all the pop up windows--------------------------------------------------------------------

        //---------------------------------------------Start of defining popup Window-----------------------------------------------
        var searchWindow = $('#SearchWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "Search List",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var YearMonthWindow = $('#YearMonthWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Year Month",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var RequisitionWindow = $('#RequisitionWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "700px",
            height: "auto",
            title: "List Of Requisition",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var RequisitionDateWindow = $('#RequisitionDateWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "700px",
            height: "auto",
            title: "List Of Production No.",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ItemWindow = $('#ItemWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Items",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ColorWindow = $('#ColorWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Colors",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');


        var ScheduleWindow = $('#ScheduleWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "700px",
            height: "auto",
            title: "List Of Schedule",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ChemicalItemWindow = $('#ChemicalItemWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "700px",
            height: "auto",
            title: "List Of Chemical",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ProductionWindow = $('#ProductionWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Porduction",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var RecipeWindow = $('#RecipeWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "Recipe List",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //---------------------------------------------End of defining popup Window-----------------------------------------------


        //-------------------------------------------------Common Function--------------------------------------------------------

        //To select the first row as default & to clear the filter while loading the grid
        function SelectedItemOfListOfValue(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            //Reload Grid
            grid.dataSource.read();
            //Clear Filter
            $('#' + GridName).data("kendoGrid").dataSource.filter([]);
            //Select First Row
            $('#' + GridName).data().kendoGrid.bind('dataBound', function (e) {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
        }

        //To Bring Data from List of Value Grid to Main Page
        function ListOfValueGridEvent(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row
            changeStatus = 1;
            $.each(selectedItem, function (key, value) {
                if (value != null && value != 0)
                    $('#' + key).val(value);
            });
        }



        ClearOperationalMessage();
        ClearRequiredTextBoxRedColor();
        CheckUnSavedOnlyMasterData();


        // create DatePicker from input HTML element
        $(".datePicker").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: new Date(),
            max: new Date()
        });

        // Display Date into kendo Grid Row
        function dateTimeEditor(container, options) {
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        value: new Date(),
                        max: new Date()
                        //change: function () {
                        //    alert("test");
                        //}
                    });
        }

        //-------------------------------------------------Common Function--------------------------------------------------------



        //-----------------------------------------------Handling all the pop up window events------------------------------------------
        // Handling button click for YearMonth window grid
        $('#btnYearMonthWindowOK').click(function () {
            ListOfValueGridEvent('YearMonthWindowGrid');
            YearMonthWindow.close();
        });
        $('#btnYearMonthWindowCancel').click(function () {
            YearMonthWindow.close();
        });
        $("#YearMonthWindowGrid").dblclick(function () {
            ListOfValueGridEvent('YearMonthWindowGrid');
            YearMonthWindow.close();
        });
        $("#YearMonthWindowGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueGridEvent('YearMonthWindowGrid');
                YearMonthWindow.close();

            }
                // Close Window with escape key
            else if (keycode == '27') {
                YearMonthWindow.close();
            }
            event.stopPropagation();
        });

        //Handling button click for Requisition window grid
        $('#btnRequisitionWindowOK').click(function () {
            ListOfValueGridEvent('RequisitionWindowGrid');
            RequisitionWindow.close();
        });
        $('#btnRequisitionWindowCancel').click(function () {
            RequisitionWindow.close();
        });
        $("#RequisitionWindow").dblclick(function () {
            ListOfValueGridEvent('RequisitionWindowGrid');
            RequisitionWindow.close();
        });
        $("#RequisitionWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueGridEvent('RequisitionWindowGrid');
                RequisitionWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                RequisitionWindow.close();
            }
            event.stopPropagation();
        });

        $('#btnRequisitionDateWindowOK').click(function () {
            ListOfValueGridEvent('RequisitionDateWindowGrid');
            RequisitionDateWindow.close();
        });
        $('#btnRequisitionDateWindowCancel').click(function () {
            RequisitionDateWindow.close();
        });
        $("#RequisitionDateWindow").dblclick(function () {
            ListOfValueGridEvent('RequisitionDateWindowGrid');
            RequisitionDateWindow.close();
        });
        $("#RequisitionDateWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueGridEvent('RequisitionDateWindowGrid');
                RequisitionDateWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                RequisitionDateWindow.close();
            }
            event.stopPropagation();
        });

        $('#btnItemWindowOK').click(function () {
            ListOfValueGridEvent('ItemWindowGrid');
            ItemWindow.close();
        });
        $('#btnItemWindowCancel').click(function () {
            ItemWindow.close();
        });
        $("#ItemWindow").dblclick(function () {
            ListOfValueGridEvent('ItemWindowGrid');
            ItemWindow.close();
        });
        $("#ItemWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueGridEvent('ItemWindowGrid');
                ItemWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ItemWindow.close();
            }
            event.stopPropagation();
        });

        function LoadProductionGrid() {
            $.ajax({
                url: '@Url.Action("GetAllDrumList", "ChemicalConsumptionForFinishing")',
                data: ({ "_SdulItemColorID": $("#SdulItemColorID").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ProductionGrid").data("kendoGrid").dataSource.data(response);
                }
            });
        };
        $('#btnColorWindowOK').click(function () {
            ListOfValueGridEvent('ColorWindowGrid');
            LoadProductionGrid();
            ColorWindow.close();
        });
        $('#btnColorWindowCancel').click(function () {
            ColorWindow.close();
        });
        $("#ColorWindow").dblclick(function () {
            ListOfValueGridEvent('ColorWindowGrid');
            LoadProductionGrid();
            ColorWindow.close();
        });
        $("#ColorWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ListOfValueGridEvent('ColorWindowGrid');
                LoadProductionGrid();
                ColorWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ColorWindow.close();
            }
            event.stopPropagation();
        });

        //To bring data from search window to main page
        function SearchWindowEvents() {
            var grid = $("#SearchWindowGrid").data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row

            $.ajax({
                url: '@Url.Action("GetDetailsSearchInformaiton", "ChemicalConsumptionForFinishing")',
                data: ({ "_CLProductionID": selectedItem.CLProductionID }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    if (response.FormInfo != null) {
                        $.each(response.FormInfo, function (key, value) {
                            if (value != null && value != 0)
                                $('#' + key).val(value);
                        });
                    }
                    PopUpWindowOPen = 0;
                    MakeFormFieldNonEditable();
                    PageStatus = response.FormInfo.RecordStatus;
                    CheckRecordStatusForButton(PageStatus);
                    $("#ProductionGrid").data("kendoGrid").dataSource.data(response.LeatherList);
                    if (response.FormInfo.RequirementOn != "DR")
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response.ChemicalListForShow);
                }
            });
        }
        $('#btnSearchWindowOK').click(function () {
            SearchWindowEvents();

            searchWindow.close();
            MakeRequisitionGridNonEditable();
        });
        $('#btnSearchWindowCancel').click(function () {
            searchWindow.close();
        });
        $("#SearchWindow").dblclick(function () {
            SearchWindowEvents();

            searchWindow.close();
            MakeRequisitionGridNonEditable();
        });
        $("#SearchWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                SearchWindowEvents();

                searchWindow.close();
                MakeRequisitionGridNonEditable();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                searchWindow.close();
            }
            event.stopPropagation();
        });

        $("#RequirementOn").change(function () {
            if ($("#RequirementOn").val() == "PR") {
                $.ajax({
                    url: '@Url.Action("GetRecipeItemListForFixedRecipe", "ChemicalConsumption")',
                    data: ({ "_RecipeID": $("#RecipeID").val(), "_StoreID": $("#ProductionFloor").val(), "_Weight": $("#ScheduleWeight").val(), "_Area": $("#ScheduleArea").val() }),
                    type: 'GET',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                        ItemGridchangeStatus = 1;
                    }
                });
                //var Factor = $("#ScheduleArea").val() / $("#BaseQuantity").val()
            }
            else if ($("#RequirementOn").val() == "DR") {
                var Grid = $("#ProductionGrid").data("kendoGrid");
                var GridRow = Grid.select();
                var GridItem = Grid.dataItem(GridRow);
                //var Factor = GridItem.DrumArea / $("#BaseQuantity").val();
                $.ajax({
                    url: '@Url.Action("GetRecipeItemListForFixedRecipe", "ChemicalConsumption")',
                    data: ({ "_RecipeID": $("#RecipeID").val(), "_StoreID": $("#ProductionFloor").val(), "_Weight": GridItem.DrumWeight, "_Area": GridItem.DrumArea }),
                    type: 'GET',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                        ItemGridchangeStatus = 1;
                    }
                });
            }
            else if ($("#RequirementOn").val() == "CL") {
                //var Factor = $("#ColorArea").val() / $("#BaseQuantity").val()
                $.ajax({
                    url: '@Url.Action("GetRecipeItemListForFixedRecipe", "ChemicalConsumption")',
                    data: ({ "_RecipeID": $("#RecipeID").val(), "_StoreID": $("#ProductionFloor").val(), "_Weight": $("#ColorWeight").val(), "_Area": $("#ColorArea").val() }),
                    type: 'GET',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                        ItemGridchangeStatus = 1;
                    }
                });
            }
        });

        function RecipeWindowEvent() {
            var WindowGrid = $("#RecipeWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            //var dataRows = PageGrid.items();
            //var rowIndex = dataRows.index(PageGrid.select());

            $("#RecipeID").val(WindowGridItem.RecipeID);
            $("#ArticleID").val(WindowGridItem.ArticleID);
            $("#ArticleNo").val(WindowGridItem.ArticleNo);
            $("#ArticleName").val(WindowGridItem.ArticleName);
            $("#ArticleColor").val(WindowGridItem.ArticleColor);
            $("#ArticleColorName").val(WindowGridItem.ArticleColorName);
            $("#RecipeChallanNo").val(WindowGridItem.ArticleChallanNo);

            $("#BaseQuantity").val(WindowGridItem.BaseQuantity);
            $("#BaseUnit").val(WindowGridItem.BaseUnit);
            $("#BaseUnitName").val(WindowGridItem.BaseUnitName);

            changeStatus = 1;


            //PageGrid.editCell($("#RequisitionGrid tr:eq(" + (rowIndex + 1) + ") td:eq(1)"));

            //$("#RequisitionGrid tr:eq(" + (rowIndex + 1) + ")").addClass('k-state-selected');
            //if (rowIndex > 0)
            //    $("#RequisitionGrid tr:eq(1)").removeClass('k-state-selected');


        };

        $('#btnRecipeWindowOK').click(function () {
            RecipeWindowEvent();
            RecipeWindow.close();
        });
        $('#btnRecipeWindowCancel').click(function () {
            RecipeWindow.close();
        });
        $("#RecipeWindow").dblclick(function () {
            RecipeWindowEvent();
            RecipeWindow.close();
        });
        $("#RecipeWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                RecipeWindowEvent();
                RecipeWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                RecipeWindow.close();
            }
            event.stopPropagation();
        });


        //Handling button click for Source window grid
        function ChemicalItemWindowEvent() {
            var test = 1;


            var WindowGrid = $("#ChemicalItemWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            var ChemicalGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
            var ChemicalGridData = ChemicalGridDataSource.data();

            for (i = ChemicalGridData.length - 1; i >= 0; i--) {
                if (ChemicalGridData[i].ItemID == WindowGridItem.ItemID && ChemicalGridData[i].SupplierID == WindowGridItem.SupplierID && ChemicalGridData[i].UnitID == WindowGridItem.UnitID)
                    test = 0;
            }
            if (test == 1) {
                var PageGrid = $("#ProductionItemGrid").data("kendoGrid");
                var PageGridItem = PageGrid.dataItem(PageGrid.select());

                PageGridItem.set("ItemID", WindowGridItem.ItemID);
                PageGridItem.set("ItemName", WindowGridItem.ItemName);
                PageGridItem.set("SupplierID", WindowGridItem.SupplierID);
                PageGridItem.set("SupplierName", WindowGridItem.SupplierName);
                PageGridItem.set("StockQty", WindowGridItem.StockQty);
                PageGridItem.set("StockUnitID", WindowGridItem.StockUnitID);
                PageGridItem.set("StockUnitName", WindowGridItem.StockUnitName);
            }
            else {
                $('#MessageText').html("Same Item Can't be Added Twice");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
            }

            changeStatus = 1;
            checkUnsavedData = 1;
            ItemGridchangeStatus = 1;

        };
        $('#btnChemicalItemWindowOK').click(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $('#btnChemicalItemWindowCancel').click(function () {
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").dblclick(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ChemicalItemWindowEvent();
                ChemicalItemWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ChemicalItemWindow.close();
            }
            event.stopPropagation();
        });
        //-----------------------------------------------End of Handling all the pop up window events------------------------------------------

        //------------------------------------Start of Handling of all the button event----------------------------------------
        $("#btnReset").click(function () {
            resetEditStatus = 1; // 1 for reset

            if (changeStatus == 0) {
                PageStatus = "NCF";
                CheckRecordStatusForButton(PageStatus);
                ClearOperationalMessage();
                ResetOnlyMasterPageData();
                $(".RequiredTextBox").css("border-color", "white");
                ItemGridchangeStatus = 0;
                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                ItemGridchangeStatus = 0;
                checkUnsavedData = 0;
                PopUpWindowOPen = 1;
                MakeFormFieldEditable();
            }
            else {
                OpenSaveChangesDialog();
            }
        });

        $("#btnSearch").click(function () {
            resetEditStatus = 2; // 2 for Search

            if (changeStatus == 0) {
                SelectedItemOfListOfValue('SearchWindowGrid');
                searchWindow.open();
            }
            else {
                OpenSaveChangesDialog();
            }
        });

        $("#btnSaveChangeWindowOk").click(function () {
            if (resetEditStatus == 1) //For reset
            {
                PageStatus = "NCF";
                CheckRecordStatusForButton(PageStatus);
                ClearOperationalMessage();
                ResetOnlyMasterPageData();
                $(".RequiredTextBox").css("border-color", "white");
                ItemGridchangeStatus = 0;
                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                CloseSaveChangesDialog();
                changeStatus = 0;
                ItemGridchangeStatus = 0;
                checkUnsavedData = 0;
                PopUpWindowOPen = 1;
                MakeFormFieldEditable();
            }
            else if (resetEditStatus == 2) // For Search
            {
                CloseSaveChangesDialog();
                SelectedItemOfListOfValue('SearchWindowGrid');
                searchWindow.open();
            }
            else if (resetEditStatus == 3) // For Requisition Item Delete
            {
                DeleteFrom = 1;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }
            else if (resetEditStatus == 5) // For Purchase Delete
            {
                DeleteFrom = 3;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }
        });

        $("#btnSaveChangeWindowCancel").click(function () {
            CloseSaveChangesDialog();
        });

        $("#btnCheck").click(function () {

            $.ajax({
                url: '@Url.Action("CheckChemicalConsumtion", "ChemicalConsumptionForFinishing")',
                type: 'GET',
                data: { "_CLProductionID": $("#CLProductionID").val(), "_ConfirmComment": $("#ConfirmComment").val() },
                success: function (response) {

                    if (response.Msg == "Success") {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html("Checked Successfully");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CHK";
                        CheckRecordStatusForButton(PageStatus);


                    } else if (response.Msg == "Fail") {
                        $('#MessageText').html("Confirmation Failed");
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });

        $("#btnConfirm").click(function () {

            $.ajax({
                url: '@Url.Action("ConfirmChemicalConsumption", "ChemicalConsumptionForFinishing")',
                type: 'GET',
                data: { "_CLProductionID": $("#CLProductionID").val(), "_ConfirmComment": $("#ConfirmComment").val() },
                success: function (response) {

                    if (response.ReturnId == 1) {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CNF";
                        CheckRecordStatusForButton(PageStatus);
                    } else if (response.ReturnId == 0) {
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });


        @*function ConcealRequisition(event) {

            var CurrentRequisition = RequisitionGrid.dataItem($(event.currentTarget).closest("tr"));



            $.ajax({
                url: '@Url.Action("ConsealRequisition", "ChemicalForeignPurchaseOrder")',
                type: 'GET',
                data: { "RequisitionID": CurrentRequisition.RequisitionID },
                success: function (response) {
                    if (response.Msg == "Success") {
                        $('#MessageText').html("Consealed Successfully");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        //$("#RequisitionGrid").data("kendoGrid").dataSource.remove(dataitem);
                    }
                    else if (response.Msg == "Fail") {
                        $('#MessageText').html("Failed To Conseal");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                    }

                } //End of success call
            });
        };*@
        //------------------------------------End of Handling of all the button event----------------------------------------


        //------------------------------To Add new row to any grid----------------------------------------------------
        $("#ProductionItemGrid").on('input', function () {
            ItemGridchangeStatus = 1;
            changeStatus = 1;
            checkUnsavedData = 1;
        });
        $("#ProductionGrid").on('input', function () {
            changeStatus = 1;
        });

        function MakeProductionItemGridEditable() {
            var grid = $("#ProductionItemGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["ItemID"].editable = true;
            grid.dataSource.at(0).fields["ItemName"].editable = true;

            //grid.dataSource.at(0).fields["SupplierID"].editable = true;
            //grid.dataSource.at(0).fields["SupplierName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackSize"].editable = true;
            //grid.dataSource.at(0).fields["IssuePackSizeName"].editable = true;

            //grid.dataSource.at(0).fields["IssueSizeUnit"].editable = true;
            //grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackQty"].editable = true;
        };
        function MakeProductionItemGridNonEditable() {
            var grid = $("#ProductionItemGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["ItemID"].editable = false;
            grid.dataSource.at(0).fields["ItemName"].editable = false;

            //grid.dataSource.at(0).fields["SupplierID"].editable = true;
            //grid.dataSource.at(0).fields["SupplierName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackSize"].editable = true;
            //grid.dataSource.at(0).fields["IssuePackSizeName"].editable = true;

            //grid.dataSource.at(0).fields["IssueSizeUnit"].editable = true;
            //grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackQty"].editable = true;
        };

        $("#ProductionItemGrid").keyup(function (e) {

            if (e.keyCode == 13) {
                var ChildGrid = $("#ProductionItemGrid").data("kendoGrid");
                $("#ProductionItemGrid").data().kendoGrid.bind('dataBound', function () {
                    this.element.find('tbody tr:first').addClass('k-state-selected');
                });
                ChildGrid.addRow();
                MakeProductionItemGridEditable();
            }
        });

        $(".btnProductionItemGrid").click(function (e) {
            var ChildGrid = $("#ProductionItemGrid").data("kendoGrid");
            $("#ProductionItemGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            ChildGrid.addRow();
            MakeProductionItemGridEditable();
            e.preventDefault();
        });
        //------------------------------End of Adding new row to any grid----------------------------------------------------

        //To face child data into another grid for a grid row on click
        $("#ProductionGrid").on("click", "tr", function (e) {
            if (checkUnsavedData == 0)
            {
                var parentGrid = $("#ProductionGrid").data("kendoGrid");
                var parentGridRow = parentGrid.select();
                var parentGridItem = parentGrid.dataItem(parentGridRow);
                $("#ParentID").val(parentGridItem.CrustSdulDrumID);
                $("#CLProductionDrumID").val(parentGridItem.CLProductionDrumID);
            }


            if ($("#RequirementOn").val() == "DR")
            {
                if (checkUnsavedData == 0) {
                    var parentGrid = $("#ProductionGrid").data("kendoGrid");
                    var parentGridRow = parentGrid.select();
                    var parentGridItem = parentGrid.dataItem(parentGridRow);

                    if (parentGridItem.WBProductionPurchaseID != "") {
                        $.ajax({
                            url: '@Url.Action("GetChemicalItemListForFixedLeather", "ChemicalConsumptionForFinishing")',
                            type: 'GET',
                            data: { "_CLProductionDrumID": parentGridItem.CLProductionDrumID, "_CLProductionID": $("#CLProductionID").val(), "_StoreID": $("#ProductionFloor").val() },
                            success: function (response) {

                                if (response != null) {

                                    $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                                    //changeStatus = 0;
                                }

                            } //End of Success Call
                        });
                    }
                    else {
                        $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                    }
                }
                else if (checkUnsavedData == 1) {
                    alert("You have unsaved Data");
                    $('#MessageText').html("You have unsaved Data");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            }


        });
        //End of facing child data into another grid for a grid row on click

        //--------------------------------Handling Delete Event-------------------------------------------------------------

        var DeleteFrom = 0;

        function DeleteItem(event) {
            if (changeStatus == 0) {
                dataitem = ProductionItemGrid.dataItem($(event.currentTarget).closest("tr"));
                DeleteFrom = 1;
                OpenConfirmationDialog();
            }
            else {
                dataitem = ProductionItemGrid.dataItem($(event.currentTarget).closest("tr"));
                resetEditStatus = 3;
                OpenSaveChangesDialog();
            }

        };

        $("#btnDelete").click(function () {
            if (changeStatus == 0) {
                //dataitem = itemGrid.dataItem($(event.currentTarget).closest("tr"));
                DeleteFrom = 3;
                OpenConfirmationDialog();
            }
            else {
                //dataitem = itemGrid.dataItem($(event.currentTarget).closest("tr"));
                resetEditStatus = 5;
                OpenSaveChangesDialog();
            }
        });



        $('#btnConfirmationOK').click(function () {
            if (DeleteFrom == 1) // Item Delete
            {
                if (dataitem.CLProdChemicalID == 0) {
                    $("#ProductionItemGrid").data("kendoGrid").dataSource.remove(dataitem);
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteProductionItem", "ChemicalConsumptionForFinishing")',
                        type: 'GET',
                        data: { "_CLProdChemicalID": dataitem.CLProdChemicalID, "_PageStatus": PageStatus },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                                $("#ProductionItemGrid").data("kendoGrid").dataSource.remove(dataitem);
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }

            else if (DeleteFrom == 3) //Order Delete
            {
                var ProductionItemGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
                var ProductionItemGridData = ProductionItemGridDataSource.data();
                if (ProductionItemGridData.length > 0) {
                    $('#MessageText').html("Chemical Item Found");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteChemicalConsumption", "ChemicalConsumptionForFinishing")',
                        type: 'GET',
                        data: { "_CLProductionID": $("#CLProductionID").val(), "_PageStatus": PageStatus },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                ResetOnlyMasterPageData();
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }
            CloseConfirmationDialog();
        });


        //Handling No button click for grid row deletion
        $('#btnConfirmationCancel').click(function () {
            dataitem = {};
            CloseConfirmationDialog();
        });
        //---------------------------------End of handling Delete Event-----------------------------------------------------

    });//End of Document.Ready()


    //-----------------------------------To Save Data------------------------------------------------------------------------------------
    var LeatherList = {
        "CLProductionDrumID": "", "CLProductionColorID": "", "CrustSdulDrumID": "", "MachineID": "", "MachineNo": "",
        "SdulItemColorID": "", "ScheduleDateID": "", "ScheduleItemID": "", "ColorID": "", "GradeRange": "", "DrumPcs": "", "DrumSide": "",
        "DrumWeight": "", "AreaUnit": "", "WeightUnit": "", "DrumArea": "", "Remarks": ""
    };

    var ChemicalList = {
        "CLProdChemicalID": "", "CLProductionDrumID": "", "RecipeID": "", "ItemID": "",
        "CalculationBase": "", "RequiredQty": "", "RequiredUnitName": "", "UsePackSizeName": "", "UseSizeUnitName": "", "UsePackQty": "", "UseQty": "", "UseUnitName": "", "SupplierID": "", "ItemSource": ""
    };
    var FinalObject = {
        "CLProductionID": "", "CLProductionItemID": "", "CLProductionColorID": "", "ProductionFloor": "", "ScheduleYear": "", "YearMonID": "", "ScheduleMonth": "", "ScheduleID": "", "ScheduleNo": "",
        "ProductionProcessID": "", "ScheduleDateID": "", "ProductionNo": "", "ProductionStatus": "",
        "ScheduleStartDate": "", "ScheduleEndDate": "", "ScheduleProductionNo": "", "ScheduleItemID": "", "ProductionArticleChallanID": "", "ProductionArticleChallanNo": "", "SchedulePcs": "", "BuyerID": "",
        "ItemTypeID": "", "ScheduleSide": "", "BuyerOrderID": "", "BuyerOrderNo": "", "LeatherStatusID": "", "ScheduleWeight": "",
        "ScheduleWeightUnit": "", "ProductionArticleID": "", "ProductionArticleNo": "", "ScheduleArea": "",
        "ScheduleAreaUnit": "", "SdulItemColorID": "", "ColorID": "", "ArticleColorNo": "", "ColorArea": "", "AreaUnit": "", "ColorPCS": "", "ColorSide": "", "ColorWeight": "",
        "WeightUnit": "", "Remarks": "", "ProductionCategory": "", "RecipeChallanNo": "", "ProductionProcess": "", "ArticleID": "",
        "ArticleNo": "", "BaseQuantity": "", "BaseUnit": "", "RecipeID": "", "ParentID": "", "CLProductionDrumID": "",
        "CalculationBase": "", "LeatherList": [], "ChemicalList": []
    };

    var saveStatus = 1;
    function Save() {
        saveStatus = 1;
        CheckRequiredTextBoxMaxLength('ScheduleNo', 50);
        CheckRequiredTextBoxMaxLength('ProductionNo', 50);
        CheckRequiredTextBoxMaxLength('ScheduleYear', 50);
        CheckRequiredTextBoxMaxLength('ScheduleProductionNo', 50);
        //CheckRequiredTextBoxMaxLength('ColorName', 50);
        //CheckRequiredTextBoxMaxLength('RecipeID', 10);


        var ProductionGridDataSource = $("#ProductionGrid").data("kendoGrid").dataSource;
        var ProductionGridData = ProductionGridDataSource.data();


        var ProductionItemGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
        var ProductionItemGridData = ProductionItemGridDataSource.data();


        if (ProductionGridData.length == 0)
            saveStatus = 0;

        if (ProductionItemGridData.length == 0)
            saveStatus = 0;

        if (saveStatus == 1) {
            FinalObject.CLProductionID = $("#CLProductionID").val();

            FinalObject.CLProductionItemID = $("#CLProductionItemID").val();
            FinalObject.CLProductionColorID = $("#CLProductionColorID").val();

            FinalObject.ProductionFloor = $("#ProductionFloor").val();
            FinalObject.ScheduleYear = $("#ScheduleYear").val();
            FinalObject.YearMonID = $("#YearMonID").val();
            FinalObject.ScheduleMonth = $("#ScheduleMonth").val();
            FinalObject.ScheduleID = $("#ScheduleID").val();
            FinalObject.ScheduleNo = $("#ScheduleNo").val();
            FinalObject.ProductionProcessID = $("#ProductionProcessID").val();
            FinalObject.ScheduleDateID = $("#ScheduleDateID").val();
            FinalObject.ProductionNo = $("#ProductionNo").val();
            FinalObject.ProductionStatus = $("#ProductionStatus").val();
            FinalObject.ScheduleStartDate = $("#ScheduleStartDate").val();
            FinalObject.ScheduleEndDate = $("#ScheduleEndDate").val();
            FinalObject.ScheduleProductionNo = $("#ScheduleProductionNo").val();
            FinalObject.ScheduleItemID = $("#ScheduleItemID").val();
            FinalObject.ProductionArticleChallanID = $("#ProductionArticleChallanID").val();
            FinalObject.ProductionArticleChallanNo = $("#ProductionArticleChallanNo").val();
            FinalObject.SchedulePcs = $("#SchedulePcs").val();
            FinalObject.BuyerID = $("#BuyerID").val();

            FinalObject.ItemTypeID = $("#ItemTypeID").val();
            FinalObject.ScheduleSide = $("#ScheduleSide").val();
            FinalObject.BuyerOrderID = $("#BuyerOrderID").val();
            FinalObject.BuyerOrderNo = $("#BuyerOrderNo").val();
            FinalObject.LeatherStatusID = $("#LeatherStatusID").val();
            FinalObject.ScheduleWeight = $("#ScheduleWeight").val();
            FinalObject.ScheduleWeightUnit = $("#ScheduleWeightUnit").val();
            FinalObject.ProductionArticleID = $("#ProductionArticleID").val();
            FinalObject.ProductionArticleNo = $("#ProductionArticleNo").val();
            FinalObject.ScheduleArea = $("#ScheduleArea").val();
            FinalObject.ScheduleAreaUnit = $("#ScheduleAreaUnit").val();
            FinalObject.SdulItemColorID = $("#SdulItemColorID").val();
            FinalObject.ColorID = $("#ColorID").val();
            FinalObject.ArticleColorNo = $("#ArticleColorNo").val();
            FinalObject.ColorArea = $("#ColorArea").val();
            FinalObject.AreaUnit = $("#AreaUnit").val();
            FinalObject.ColorPCS = $("#ColorPCS").val();
            FinalObject.ColorSide = $("#ColorSide").val();
            FinalObject.ColorWeight = $("#ColorWeight").val();
            FinalObject.WeightUnit = $("#WeightUnit").val();
            FinalObject.Remarks = $("#Remarks").val();
            //FinalObject.ProductionCategory = $("#ProductionCategory").val();
            FinalObject.RecipeChallanNo = $("#RecipeChallanNo").val();
            //FinalObject.ProductionProcess = $("#ProductionProcess").val();
            FinalObject.ArticleID = $("#ArticleID").val();
            FinalObject.ArticleNo = $("#ArticleNo").val();
            FinalObject.BaseQuantity = $("#BaseQuantity").val();
            FinalObject.BaseUnit = $("#BaseUnit").val();
            FinalObject.RecipeID = $("#RecipeID").val();
            FinalObject.CalculationBase = $("#RequirementOn").val();
            FinalObject.ParentID = $("#ParentID").val();
            FinalObject.CLProductionDrumID = $("#CLProductionDrumID").val();

            for (i = ProductionGridData.length - 1; i >= 0; i--) {
                //if (ProductionGridData[i].dirty) {
                LeatherList.CLProductionDrumID = ProductionGridData[i].CLProductionDrumID;
                LeatherList.CrustSdulDrumID = ProductionGridData[i].CrustSdulDrumID;
                LeatherList.MachineID = ProductionGridData[i].MachineID;
                LeatherList.MachineNo = ProductionGridData[i].MachineNo;
                LeatherList.SdulItemColorID = ProductionGridData[i].SdulItemColorID;
                LeatherList.ScheduleDateID = ProductionGridData[i].ScheduleDateID;
                LeatherList.ScheduleItemID = ProductionGridData[i].ScheduleItemID;
                LeatherList.ColorID = ProductionGridData[i].ColorID;
                LeatherList.GradeRange = ProductionGridData[i].GradeRange;
                LeatherList.DrumPcs = ProductionGridData[i].DrumPcs;
                LeatherList.DrumSide = ProductionGridData[i].DrumSide;
                LeatherList.DrumWeight = ProductionGridData[i].DrumWeight;
                LeatherList.AreaUnit = ProductionGridData[i].AreaUnit;
                LeatherList.WeightUnit = ProductionGridData[i].WeightUnit;
                LeatherList.DrumArea = ProductionGridData[i].DrumArea;
                LeatherList.Remarks = ProductionGridData[i].Remarks;
                LeatherList.CLProductionColorID = ProductionGridData[i].CLProductionColorID;
                    FinalObject.LeatherList.push(LeatherList);
                    LeatherList = {
                        "CLProductionDrumID": "", "CLProductionColorID": "", "CrustSdulDrumID": "", "MachineID": "", "MachineNo": "",
                        "SdulItemColorID": "", "ScheduleDateID": "", "ScheduleItemID": "", "ColorID": "", "GradeRange": "", "DrumPcs": "", "DrumSide": "",
                        "DrumWeight": "", "AreaUnit": "", "WeightUnit": "", "DrumArea": "", "Remarks": ""
                    };
                //}
            }



            for (var i = ProductionItemGridData.length - 1; i >= 0; i--) {
                ChemicalList.CLProdChemicalID = ProductionItemGridData[i].CLProdChemicalID
                ChemicalList.CLProductionDrumID = $("#ParentID").val();
                ChemicalList.RecipeID = $("#RecipeID").val();
                ChemicalList.ItemID = ProductionItemGridData[i].ItemID;
                ChemicalList.CalculationBase = $("#RequirementOn").val();
                ChemicalList.RequiredQty = ProductionItemGridData[i].RequiredQty;
                ChemicalList.RequiredUnitName = ProductionItemGridData[i].RequiredUnitName;


                ChemicalList.UsePackSizeName = ProductionItemGridData[i].PackSizeName;
                ChemicalList.UseSizeUnitName = ProductionItemGridData[i].SizeUnitName;


                ChemicalList.UsePackQty = ProductionItemGridData[i].PackQty;
                ChemicalList.UseQty = ProductionItemGridData[i].RequsitionQty;

                ChemicalList.UseUnitName = ProductionItemGridData[i].RequisitionUnitName;
                ChemicalList.SupplierID = ProductionItemGridData[i].SupplierID;
                ChemicalList.ItemSource = ProductionItemGridData[i].ItemSource;

                FinalObject.ChemicalList.push(ChemicalList);
                ChemicalList = {
                    "CLProdChemicalID": "", "CLProductionDrumID": "", "RecipeID": "", "ItemID": "",
                    "CalculationBase": "", "RequiredQty": "", "RequiredUnitName": "", "UsePackSizeName": "", "UseSizeUnitName": "", "UsePackQty": "", "UseQty": "", "UseUnitName": "", "SupplierID": "", "ItemSource": ""
                };
            }
            if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("ChemicalConsumptionForFinishing", "ChemicalConsumptionForFinishing")',
                    data: JSON.stringify(FinalObject),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        ItemGridchangeStatus = 0;
                        if (response.Msg.Type == 2) {

                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            $("#CLProductionID").val(response.CLProductionID);
                            $("#CLProductionItemID").val(response.CLProductionItemID);
                            $("#CLProductionColorID").val(response.CLProductionColorID);
                            if (response.ChemicalList == null)
                                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                            else
                                $("#ProductionItemGrid").data('kendoGrid').dataSource.data(response.ChemicalList);
                            $("#ProductionGrid").data('kendoGrid').dataSource.data(response.LeatherList);
                            changeStatus = 0;
                            PageStatus = "NCF";
                            checkUnsavedData = 0;

                            $("#SchedulePcs").attr("disabled", "disabled");
                            $("#ScheduleSide").attr("disabled", "disabled");
                            $("#ScheduleWeight").attr("disabled", "disabled");
                            $("#ScheduleArea").attr("disabled", "disabled");
                            $("#ColorArea").attr("disabled", "disabled");
                            $("#ColorPCS").attr("disabled", "disabled");
                            $("#ColorSide").attr("disabled", "disabled");
                            $("#ColorWeight").attr("disabled", "disabled");
                            $("#RequirementOn").attr("disabled", "disabled");
                            //$("#ProductionProcess").attr("disabled", "disabled");
                            PopUpWindowOPen = 0;
                        }
                        else if (response.Msg.Type == 3) {
                            ItemGridchangeStatus = 0;
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                            if (response.ChemicalList == null)
                                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                            else
                                $("#ProductionItemGrid").data('kendoGrid').dataSource.data(response.ChemicalList);

                            $("#ProductionGrid").data('kendoGrid').dataSource.data(response.LeatherList);
                            changeStatus = 0;
                            PageStatus = "NCF";
                            checkUnsavedData = 0;

                        }
                        else {
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        }
                    } //End of success call
                }); //End of ajax call
            }
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
            }

        }
        else {
            $("#MessageText").html("Please Enter the Required Data Properly.");
            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
        }

        FinalObject = {
            "CLProductionID": "", "CLProductionItemID": "", "CLProductionColorID": "", "ProductionFloor": "", "ScheduleYear": "", "YearMonID": "", "ScheduleMonth": "", "ScheduleID": "", "ScheduleNo": "",
            "ProductionProcessID": "", "ScheduleDateID": "", "ProductionNo": "", "ProductionStatus": "",
            "ScheduleStartDate": "", "ScheduleEndDate": "", "ScheduleProductionNo": "", "ScheduleItemID": "", "ProductionArticleChallanID": "", "ProductionArticleChallanNo": "", "SchedulePcs": "", "BuyerID": "",
            "ItemTypeID": "", "ScheduleSide": "", "BuyerOrderID": "", "BuyerOrderNo": "", "LeatherStatusID": "", "ScheduleWeight": "",
            "ScheduleWeightUnit": "", "ProductionArticleID": "", "ProductionArticleNo": "", "ScheduleArea": "",
            "ScheduleAreaUnit": "", "SdulItemColorID": "", "ColorID": "", "ArticleColorNo": "", "ColorArea": "", "AreaUnit": "", "ColorPCS": "", "ColorSide": "", "ColorWeight": "",
            "WeightUnit": "", "Remarks": "", "ProductionCategory": "", "RecipeChallanNo": "", "ProductionProcess": "", "ArticleID": "",
            "ArticleNo": "", "BaseQuantity": "", "BaseUnit": "", "RecipeID": "", "ParentID": "", "CLProductionDrumID": "",
            "CalculationBase": "", "LeatherList": [], "ChemicalList": []
        };
    };
    //-----------------------------------End of Saving Data------------------------------------------------------------------------------------
</script>