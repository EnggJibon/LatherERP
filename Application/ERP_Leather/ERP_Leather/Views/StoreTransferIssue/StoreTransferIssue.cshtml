@{
    ViewBag.Title = "Store Transfer  Issue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">

    <div class="FormHeader">
        <fieldset id="FormHeaderFieldSet">

            <div id="FormTitlePannel" class="col-lg-4">
                <div id="FormTitle" style="font-size:larger; font-weight:bold;">@ViewBag.formTiltle</div>
            </div>
            <div id="MessageText" class="col-lg-6">

            </div>
            <div id="ButtonPanel" class="col-lg-2">
                <input type="button" id="btnReset" class="Button" value="Reset" style="position:absolute; right:20px;" />
                <input type="button" id="btnDelete" class="Button" value="Delete" style="position:absolute; right:75px;" />
                <input type="button" id="btnSearch" class="Button" value="Search" style="position:absolute; right:135px;" />
                <input type="button" id="btnSave" class="Button" value="Save" onclick="Save()" style="position:absolute; right:200px;" />
            </div>
        </fieldset>
    </div>

</div>

<div class="row">
    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Transaction Of</label>
            </div>
            <div class="col-lg-4">
                <input type="text" id="" readonly="readonly" value="Store Transafer Issue" class="ReadOnlyTextbox" name="" tabindex="" style="width:200px;" />
            </div>



            <div class="col-lg-2">
                <label>Transaction No.</label>
            </div>
            <div class="col-lg-4">
                <input type="text" id="TransactionNo" readonly="readonly" class="txtBox ReadOnlyTextbox" name="" tabindex="" style="width:200px;" />
                <input type="hidden" id="TransactionID" class="txtBox" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Issue From</label>
            </div>
            <div class="col-lg-4">
               @Html.DropDownList("IssueFrom", new SelectList(ViewBag.RequisitionTo, "StoreID", "StoreName"), "--Select--", new { @class = "txtBox Dropdown RequiredTextBox", @style = "width: 200px; margin-left: 0px;" })
            </div>


            <div class="col-lg-2">
                <label>Transaction Date</label>
            </div>
            <div class="col-lg-4">
                <input type="text" id="TransactionDate" class="datePicker" name="" tabindex="" style="width:200px; margin-left:2px;" />
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <label>Issue To</label>
            </div>
            <div class="col-lg-4">
                @Html.DropDownList("IssueTo", new SelectList(ViewBag.RequisitionTo, "StoreID", "StoreName"), "--Select--", new { @class = "txtBox Dropdown RequiredTextBox", @style = "width: 200px; margin-left: 0px;" })
            </div>



            <div class="col-lg-2">
                <label>Remarks</label>
            </div>
            <div class="col-lg-4">
                <input type="text" id="Remark" class="txtBox" name="" tabindex="" style="width:200px; margin-left:2px;" />

            </div>
        </div>

    </div>

   

    <div class="FormBody">
        <div id="StoreTransferIssueGrid"></div>
    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Check Note</label>
            </div>
            <div class="col-lg-4">
                <textarea id="CheckComment" class="txtBox" name="" tabindex=""></textarea>
                @*<input type="button" id="btnCheck" value="Check" />*@
                <input type="button" id="btnConfirm" value="Confirm" />
            </div>
        </div>
    </div>

</div>

<div id="ChemicalItemWindow" style="display: none;">
    <div id="ChemicalItemWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnChemicalItemWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnChemicalItemWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="GradeWindow" style="display: none;">
    <div id="GradeWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnGradeWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnGradeWindowOK" class="PopUpButton" value="OK" />
</div>



<div id="SearchWindow" style="display: none;">
    <div id="SearchWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnSearchWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnSearchWindowOK" class="PopUpButton" value="OK" />

</div>

<div id="SaveChangeWindow" style="display: none;">
    <p><h5>Data will be lost if you continue.</h5></p>
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
</div>

<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>

<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 42%; color: White;">
        Please wait... <img src="../../images/ajax-loading.gif">
    </p>
</div>


<script type="text/javascript">
    //var ItemGridchangeStatus = 0;
    var changeStatus = 0; // any change textbox/Dropdown/Grid
    var resetEditStatus = 0;
    var dataitem = {};
    var PageStatus = "";

    $(document).ready(function () {

        //--------------------------------------Start of Defining Datasource & Dropdown-----------------------------------------------------------------
        var ddlSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "SizeID",
                    fields: {
                        SizeID: { editable: false },
                        SizeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllPackSizeForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlSize(container, options) {
            $('<input name="SizeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "SizeName",
                        dataValueField: "SizeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlSizeDataSource
                    });
        };

        var ddlUnitForChemicalPackSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemicalPackSize", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemicalPackSize(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalPackSizeDataSource
                    });
        };


        var ddlUnitForChemicalDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemical(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalDataSource
                    });
        };
        //--------------------------------------End of Defining Datasource & Dropdown-----------------------------------------------------------------

        //--------------------------------------Start of defining Datagrid----------------------------------------------------------------

        var StoreTransferIssueGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "TransItemID",
                    fields: {
                        TransItemID: { editable: true },
                        ItemID: { editable: true },
                        ItemName: { editable: true, defaultValue: 'Press F9' },
                        SupplierID: { editable: true },
                        SupplierName: { editable: true },

                        PackSize: { editable: true },
                        PackSizeName: { editable: true },
                        SizeUnit: { editable: true },
                        SizeUnitName: { editable: true },

                        PackQty: { editable: true, type: "number", validation: { required: false, min: 1, max: 999999999999 } },
                        StockQty: { editable: true, type: "number", validation: { required: false, min: 1, max: 999999999999 } },
                        StockUnit: { editable: true },
                        StockUnitName: { editable: true },

                        IssuePackSize: { editable: true },
                        IssuePackSizeName: { editable: true },
                        IssueSizeUnit: { editable: true },
                        IssueSizeUnitName: { editable: true },

                        IssuePackQty: { editable: true, type: "number", validation: { required: false, min: 1, max: 999999999999 } },
                        IssueQty: { editable: true, type: "number", validation: { required: false, min: 1, max: 999999999999 } },
                        IssueUnit: { editable: true },
                        IssueUnitName: { editable: true, defaultValue: 'KG' }
                    }
                }
            },
            pageSize: 50
        });

        var StoreTransferIssueGrid = $("#StoreTransferIssueGrid").kendoGrid({
            dataSource: StoreTransferIssueGridDataSource,
            pageable: true,
            editable: true,
            edit: function (e) {
                $(".CalculationNeeded").unbind().change(function () {
                    var grid = $("#StoreTransferIssueGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    e.model.set("IssueQty", (grid.dataItem(row).IssuePackSizeName * grid.dataItem(row).IssuePackQty));
                });

                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            toolbar: [{
                text: "Add New Item",
                className: "btnStoreTransferIssueGrid",
                imageClass: "k-icon k-add"
            }],
            columns: [
                      { field: "ItemName", title: "Item Name<span style='color:red'>*</span>", width: "60px", attributes: { "class": "ChemicalItemName" } },
                      { field: "SupplierName", title: "Supplier", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "PackSizeName", title: "Stock Pack Size", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "SizeUnitName", title: "Stock Size Unit", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "PackQty", format: "{0:n2}", title: "Stock Pack Qty", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "StockQty", format: "{0:n2}", title: "Stock Qty", width: "60px", attributes: { style: "background-color: silver" } },
                      //{ field: "StockUnitName", title: "Stock Unit", width: "60px", attributes: { style: "background-color: silver" } },


                      { field: "IssuePackSizeName", attributes: { "class": "CalculationNeeded" }, title: "Issue Pack Size<span style='color:red'>*</span>", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "IssueSizeUnitName", title: "Issue Size Unit<span style='color:red'>*</span>", width: "60px", attributes: { style: "background-color: silver" } },
                      { field: "IssuePackQty", attributes: { "class": "CalculationNeeded" }, format: "{0:n2}", title: "Issue Pack Qty<span style='color:red'>*</span>", width: "60px" },
                      { field: "IssueQty", format: "{0:n2}", title: "Issue Qty<span style='color:red'>*</span>", width: "60px" },
                      { field: "IssueUnitName", title: "Issue Unit<span style='color:red'>*</span>", width: "60px", editor: ddlUnitForChemical },
                      { command: [{ name: "DeltedRow", text: "Delete", click: DeleteItem }], title: "Action", width: 60 }
            ]
        }).data('kendoGrid');



        var SearchGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "TransactionID",
                    fields: {
                        TransactionID: { editable: false },
                        TransactionNo: { editable: false },
                        TransactionDate: { editable: false },
                        TransactionFrom: { editable: false },
                        TransactionTo: { editable: false },
                        RecordStatus: { editable: false }

                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetTransactionInfoForSearch", "StoreTransferIssue")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        var SearchGrid = $("#SearchWindowGrid").kendoGrid({
            dataSource: SearchGridDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            columns: [
                  { field: "TransactionNo", title: "Transaction No", width: "60px" },
                  { field: "TransactionDate", title: "Transaction Date", width: "60px" },
                  { field: "TransactionFrom", title: "Transaction From", width: "80px" },
                  { field: "TransactionTo", title: "Transaction To", width: "60px" },
                  { field: "RecordStatus", title: "Record Status", width: "60px" }
            ]
        });

        var ChemicalItemDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemID",
                    fields: {
                        ItemID: { editable: false },
                        ItemName: { editable: false },
                        SupplierID: { editable: false },
                        SupplierName: { editable: false },

                        PackSize: { editable: false },
                        PackSizeName: { editable: false },
                        SizeUnit: { editable: false },
                        SizeUnitName: { editable: false },

                        PackQty: { editable: false },
                        StockQty: { editable: false },
                        StockUnit: { editable: false },
                        StockUnitName: { editable: false }
                    }
                }
            },
            @*transport: {
                read: {
                    url: '@Url.Action("GetStoreWiseChemicalItemStock", "StoreTransferIssue")',
                    type: "GET",
                    dataType: "JSON",
                    data: { "_IssueFrom": $("#IssueFrom").val() }
                }
            },*@
            pageSize: 50

        });

        var ChemicalItemGrid = $("#ChemicalItemWindowGrid").kendoGrid({
            dataSource: ChemicalItemDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            autoBind: false,
            columns: [
                  //{ field: "ItemID", title: "Item ID", width: "60px", filterable: false, sortable: false },
                  { field: "ItemName", title: "Item Name", width: "60px" },
                  { field: "SupplierName", title: "Supplier", width: "60px" },
                  { field: "PackSizeName", title: "Stock Pack Size", width: "60px" },
                  { field: "SizeUnitName", title: "Stock Size Unit", width: "60px" },
                  { field: "PackQty", title: "Stock Pack Qty", width: "60px" },
                  { field: "StockQty", title: "Stock Qty", width: "60px" },
                  { field: "StockUnitName", title: "Stock Unit", width: "60px" },
                  //{ field: "ItemName", title: "Item Name", width: "60px" },
            ]

        });

        //--------------------------------------End of defining Datagrid----------------------------------------------------------------


        //----------------------------------------To open all the pop up windows--------------------------------------------------------------------
        function GetStoreWiseChemicalItemStock() {
            $.ajax({
                url: '@Url.Action("GetStoreWiseChemicalItemStock", "StoreTransferIssue")',
                type: 'GET',
                data: { "_IssueFrom": $("#IssueFrom").val() },
                success: function (response) {
                    $("#ChemicalItemWindowGrid").data('kendoGrid').dataSource.data(response);
                } //End of success call
            });
        }

        $(document).on('keyup', '.ChemicalItemName', function (e) {
            if ($("#IssueFrom").val() != "") {
                GetStoreWiseChemicalItemStock();
                SelectedItemOfListOfValue('ChemicalItemWindowGrid');
                ChemicalItemWindow.open(); //Open Popup
                ChemicalItemWindow.center();
                MakeStoreTransferIssueGridEditable();
            }
            else {
                $('#MessageText').html("Please Select Issue From");
                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
            }
        });

        

        //----------------------------------------End of opening all the pop up windows--------------------------------------------------------------------

        //---------------------------------------------Start of defining popup Window-----------------------------------------------

        var SearchWindow = $('#SearchWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "Store Transfer Issue",
            position: { top: 5, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');


        var ChemicalItemWindow = $('#ChemicalItemWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Source",
            position: { top: 5, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        

        //---------------------------------------------End of defining popup Window-----------------------------------------------


        //-------------------------------------------------Common Function--------------------------------------------------------

        //To select the first row as default & to clear the filter while loading the grid
        function SelectedItemOfListOfValue(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            //Reload Grid
            grid.dataSource.read();
            //Clear Filter
            $('#' + GridName).data("kendoGrid").dataSource.filter([]);
            //Select First Row
            $('#' + GridName).data().kendoGrid.bind('dataBound', function (e) {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
        }

        //To Bring Data from List of Value Grid to Main Page
        function ListOfValueGridEvent(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row
            changeStatus = 1;
            $.each(selectedItem, function (key, value) {
                if (value != null && value != 0)
                    $('#' + key).val(value);
            });
        }

        ClearOperationalMessage();
        ClearRequiredTextBoxRedColor();
        CheckUnSavedOnlyMasterData();

        // create DatePicker from input HTML element
        $(".datePicker").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: new Date(),
            max: new Date()
        });

        // Display Date into kendo Grid Row
        function dateTimeEditor(container, options) {
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        value: new Date(),
                        max: new Date()
                        //change: function () {
                        //    alert("test");
                        //}
                    });
        }

        $("#StoreTransferIssueGrid").on('input', function () {
            changeStatus = 1;
        });


        //-------------------------------------------------Common Function--------------------------------------------------------



        //-----------------------------------------------Handling all the pop up window events------------------------------------------
        function MakeIssueFromDisabled() {
            $("#IssueFrom").attr("disabled", "disabled");

        };

        function MakeIssueFromEnabled() {
            $("#IssueFrom").removeAttr("disabled");

        };


        //To bring data from search window to main page
        function SearchWindowEvents() {
            var grid = $("#SearchWindowGrid").data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row

            $.ajax({
                url: '@Url.Action("GetTransactionDetailsAfterSearch", "StoreTransferIssue")',
                data: ({ "_TransactionID": selectedItem.TransactionID }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    //ResetData();
                    if (response.TransactionInfo != null) {
                        $.each(response.TransactionInfo, function (key, value) {
                            //if (value != null && value != 0)
                            $('#' + key).val(value);
                        });
                    }
                    //SelectedItemOfListOfValue('ChallanGrid');
                    $("#StoreTransferIssueGrid").data("kendoGrid").dataSource.data(response.TransactionItemList);

                    PageStatus = response.TransactionInfo.RecordStatus;
                    CheckRecordStatusForButton(PageStatus);
                }
            });

            MakeIssueFromDisabled();

        }
        $('#btnSearchWindowOK').click(function () {
            SearchWindowEvents();
            SearchWindow.close();
        });
        $('#btnSearchWindowCancel').click(function () {
            SearchWindow.close();
        });
        $("#SearchWindow").dblclick(function () {
            SearchWindowEvents();
            SearchWindow.close();
        });
        $("#SearchWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                SearchWindowEvents();
                SearchWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                SearchWindow.close();
            }
            event.stopPropagation();
        });






        function MakeStoreTransferIssueGridEditable() {
            var grid = $("#StoreTransferIssueGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["SupplierID"].editable = true;
            grid.dataSource.at(0).fields["SupplierName"].editable = true;
            grid.dataSource.at(0).fields["PackSize"].editable = true;
            grid.dataSource.at(0).fields["PackSizeName"].editable = true;
            grid.dataSource.at(0).fields["SizeUnit"].editable = true;
            grid.dataSource.at(0).fields["SizeUnitName"].editable = true;

            grid.dataSource.at(0).fields["PackQty"].editable = true;
            grid.dataSource.at(0).fields["StockQty"].editable = true;
            grid.dataSource.at(0).fields["StockUnit"].editable = true;
            grid.dataSource.at(0).fields["StockUnitName"].editable = true;

            grid.dataSource.at(0).fields["IssuePackSize"].editable = true;
            grid.dataSource.at(0).fields["IssuePackSizeName"].editable = true;

            grid.dataSource.at(0).fields["IssueSizeUnit"].editable = true;
            grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = true;
        };

        function MakeStoreTransferIssueGridNonEditable() {
            var grid = $("#StoreTransferIssueGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["SupplierID"].editable = false;
            grid.dataSource.at(0).fields["SupplierName"].editable = false;
            grid.dataSource.at(0).fields["PackSize"].editable = false;
            grid.dataSource.at(0).fields["PackSizeName"].editable = false;
            grid.dataSource.at(0).fields["SizeUnit"].editable = false;
            grid.dataSource.at(0).fields["SizeUnitName"].editable = false;

            grid.dataSource.at(0).fields["PackQty"].editable = false;
            grid.dataSource.at(0).fields["StockQty"].editable = false;
            grid.dataSource.at(0).fields["StockUnit"].editable = false;
            grid.dataSource.at(0).fields["StockUnitName"].editable = false;

            grid.dataSource.at(0).fields["IssuePackSize"].editable = false;
            grid.dataSource.at(0).fields["IssuePackSizeName"].editable = false;

            grid.dataSource.at(0).fields["IssueSizeUnit"].editable = false;
            grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = false;
        };


        function ChemicalItemWindowEvent() {
            var WindowGrid = $("#ChemicalItemWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            var PageGrid = $("#StoreTransferIssueGrid").data("kendoGrid");
            var PageGridItem = PageGrid.dataItem(PageGrid.select());


            //var dataRows = PageGrid.items();
            //var rowIndex = dataRows.index(PageGrid.select());


            PageGridItem.set("ItemID", WindowGridItem.ItemID);
            PageGridItem.set("ItemName", WindowGridItem.ItemName);
            PageGridItem.set("SupplierID", WindowGridItem.SupplierID);
            PageGridItem.set("SupplierName", WindowGridItem.SupplierName);
            PageGridItem.set("PackSize", WindowGridItem.PackSize);
            PageGridItem.set("PackSizeName", WindowGridItem.PackSizeName);
            PageGridItem.set("SizeUnit", WindowGridItem.SizeUnit);
            PageGridItem.set("SizeUnitName", WindowGridItem.SizeUnitName);
            PageGridItem.set("PackQty", WindowGridItem.PackQty);
            PageGridItem.set("StockQty", WindowGridItem.StockQty);
            PageGridItem.set("StockUnit", WindowGridItem.StockUnit);
            PageGridItem.set("StockUnitName", WindowGridItem.StockUnitName);


            PageGridItem.set("IssuePackSize", WindowGridItem.PackSize);
            PageGridItem.set("IssuePackSizeName", WindowGridItem.PackSizeName);
            PageGridItem.set("IssueSizeUnit", WindowGridItem.SizeUnit);
            PageGridItem.set("IssueSizeUnitName", WindowGridItem.SizeUnitName);
            PageGridItem.set("IssuePackQty", WindowGridItem.PackQty);
            PageGridItem.set("IssueQty", WindowGridItem.StockQty);
            PageGridItem.set("IssueUnit", WindowGridItem.StockUnit);
            PageGridItem.set("IssueUnitName", WindowGridItem.StockUnitName);

            //PageGrid.editCell($("#RecipeItemGrid tr:eq(" + (rowIndex + 1) + ") td:eq(7)"));
            changeStatus = 1;


            //$("#RecipeItem tr:eq(" + (rowIndex + 1) + ")").addClass('k-state-selected');
            //if (rowIndex > 0)
            //    $("#RecipeItem tr:eq(1)").removeClass('k-state-selected');

            MakeStoreTransferIssueGridNonEditable();
            MakeIssueFromDisabled();
        };
        $('#btnChemicalItemWindowOK').click(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $('#btnChemicalItemWindowCancel').click(function () {
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").dblclick(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ChemicalItemWindowEvent();
                ChemicalItemWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ChemicalItemWindow.close();
            }
            event.stopPropagation();
        });

        //-----------------------------------------------End of Handling all the pop up window events------------------------------------------

        //------------------------------------Start of Handling of all the button event----------------------------------------

        $("#btnReset").click(function () {
            resetEditStatus = 1; // 1 for reset

            if (changeStatus == 0) {
                PageStatus = "NCF";
                CheckRecordStatusForButton(PageStatus);
                ClearOperationalMessage();
                ResetOnlyMasterPageData();
                $(".RequiredTextBox").css("border-color", "white");
                $("#StoreTransferIssueGrid").data('kendoGrid').dataSource.data([]);
                MakeIssueFromEnabled();
            }
            else {
                OpenSaveChangesDialog(); // Probelm opening window!
            }
        });

        $("#btnSearch").click(function () {
            resetEditStatus = 2; // 2 for Search

            if (changeStatus == 0) {
                SelectedItemOfListOfValue('SearchWindowGrid');
                SearchWindow.open();
            }
            else {
                OpenSaveChangesDialog(); // Probelm opening window!
            }
        });

        $("#btnSaveChangeWindowOk").click(function () {
            if (resetEditStatus == 1) //For reset
            {
                ResetOnlyMasterPageData();
                $("#StoreTransferIssueGrid").data('kendoGrid').dataSource.data([]);
                CloseSaveChangesDialog();
                changeStatus = 0;
                MakeIssueFromEnabled();
            }
            else if (resetEditStatus == 2) // For Search
            {
                CloseSaveChangesDialog();
                SelectedItemOfListOfValue('SearchWindowGrid');
                SearchWindow.open();
            }
            else if (resetEditStatus == 3) // For Requisition Item Delete from Grid
            {
                DeleteFrom = 1;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }

            else if (resetEditStatus == 5) // For Requisition Delete
            {
                DeleteFrom = 3;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }
        });

        $("#btnSaveChangeWindowCancel").click(function () {
            CloseSaveChangesDialog();
        });

        @*$("#btnCheck").click(function () {

            $.ajax({
                url: '@Url.Action("CheckStoreTranserIssueTransaction", "StoreTransferIssue")',
                type: 'GET',
                data: { "_TransactionID": $("#TransactionID").val(), "_CheckComment": $("#CheckComment").val() },
                success: function (response) {

                    if (response.Msg == "Success") {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html("Checked Successfully");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CHK";
                        CheckRecordStatusForButton(PageStatus);


                    } else if (response.Msg == "Fail") {
                        $('#MessageText').html("Confirmation Failed");
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });*@


        $("#btnConfirm").click(function () {

            $.ajax({
                url: '@Url.Action("ConfirmIssueToProductionTransaction", "StoreTransferIssue")',
                type: 'GET',
                data: { "_TransactionID": $("#TransactionID").val(), "_CheckComment": $("#CheckComment").val() },
                beforeSend: function () {
                    $("#divLoading").show();
                },
                complete: function () {
                    $("#divLoading").hide();
                },
                success: function (response) {

                    if (response.ReturnId == 1) {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CNF";
                        CheckRecordStatusForButton(PageStatus);
                    } else if (response.ReturnId == 0) {
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });
        //------------------------------------End of Handling of all the button event----------------------------------------



        //------------------------------To Add new row to any grid----------------------------------------------------

        $("#StoreTransferIssueGrid").keyup(function (e) {

            if (e.keyCode == 13) {
                var grid = $("#StoreTransferIssueGrid").data("kendoGrid");
                grid.addRow();
                MakeStoreTransferIssueGridEditable();
            }
        });

        $(".btnStoreTransferIssueGrid").click(function (e) {

            var grid = $("#StoreTransferIssueGrid").data("kendoGrid");
            $("#StoreTransferIssueGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            grid.addRow();
            MakeStoreTransferIssueGridEditable();
            e.preventDefault();

        });

        //------------------------------End of Adding new row to any grid----------------------------------------------------

        //--------------------------------Handling Delete Event-------------------------------------------------------------

        var DeleteFrom = 0;

        function DeleteItem(event) {
            if (changeStatus == 0) {
                DeleteFrom = 1;
                dataitem = StoreTransferIssueGrid.dataItem($(event.currentTarget).closest("tr"));
                OpenConfirmationDialog();
            }
            else {
                dataitem = StoreTransferIssueGrid.dataItem($(event.currentTarget).closest("tr"));
                resetEditStatus = 3;
                OpenSaveChangesDialog();
            }
        };

        $("#btnDelete").click(function () {
            if (changeStatus == 0) {
                DeleteFrom = 3;
                OpenConfirmationDialog();
            }
            else {
                resetEditStatus = 5;
                OpenSaveChangesDialog();
            }
        });


        //Handling Yes button click for grid row deletion
        $('#btnConfirmationOK').click(function () {
            if (DeleteFrom == 1) // Issue Item Delete
            {
                if (dataitem.TransItemID == 0) {
                    $("#StoreTransferIssueGrid").data("kendoGrid").dataSource.remove(dataitem);
                    $('#MessageText').html("Delete Successful");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteTransactionItem", "StoreTransferIssue")',
                        type: 'GET',
                        data: { "_TransItemID": dataitem.TransItemID, "_PageStatus": PageStatus },
                        beforeSend: function () {
                            $("#divLoading").show();
                        },
                        complete: function () {
                            $("#divLoading").hide();
                        },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                                $("#StoreTransferIssueGrid").data("kendoGrid").dataSource.remove(dataitem);
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }

            else if (DeleteFrom == 3) //PI Delete
            {
                var PageGridDataSource = $("#StoreTransferIssueGrid").data("kendoGrid").dataSource;
                var PageGridData = PageGridDataSource.data();
                if (PageGridData.length > 0) {
                    $('#MessageText').html("Issue Item Found.");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteTransaction", "StoreTransferIssue")',
                        type: 'GET',
                        data: { "_TransactionID": $("#TransactionID").val(), "_PageStatus": PageStatus },
                        beforeSend: function () {
                            $("#divLoading").show();
                        },
                        complete: function () {
                            $("#divLoading").hide();
                        },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                ResetOnlyMasterPageData();
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }
            CloseConfirmationDialog();
        });


        //Handling No button click for grid row deletion
        $('#btnConfirmationCancel').click(function () {
            dataitem = {};
            CloseConfirmationDialog();
        });
        //---------------------------------End of handling Delete Event-----------------------------------------------------


    });//End of Document.Ready()


    //-----------------------------------To Save Data------------------------------------------------------------------------------------

    var TransactionItemList = {
        "TransItemID": "", "TransactionID": "", "ItemID": "", "SupplierID": "", "IssuePackSizeName": "", "IssueSizeUnitName": "",
        "IssuePackQty": "", "IssueQty": "", "IssueUnitName": ""
    };

    var FinalObject = {
        "TransactionID": "", "TransactionNo": "", "TransactionDate": "", "Remark": "", "IssueFrom": "", "IssueTo": "", "TransactionItemList": []
    };
    var saveStatus = 1;
    function Save() {
        saveStatus = 1;
        CheckRequiredTextBoxMaxLength('IssueFrom', 50);
        CheckRequiredTextBoxMaxLength('IssueTo', 50);


        var StoreTransferIssueGridDataSource = $("#StoreTransferIssueGrid").data("kendoGrid").dataSource;
        var StoreTransferIssueGridData = StoreTransferIssueGridDataSource.data();
        //for (var i = RecipeItemGridData.length - 1; i >= 0; i--) {
        //    if (RecipeItemGridData[i].PackSize == "" || RecipeItemGridData[i].SizeUnit == "" || RecipeItemGridData[i].PackQty == "" ||
        //        RecipeItemGridData[i].RequsitionQty == "" || RecipeItemGridData[i].RequisitionUnit == "" || RecipeItemGridData[i].ApproveQty == "" ||
        //        RecipeItemGridData[i].ApproveUnit == "") {
        //        saveStatus = 0;
        //        break;
        //    }
        //}
        if (saveStatus == 1) {
            FinalObject.TransactionID = $("#TransactionID").val();
            FinalObject.TransactionNo = $("#TransactionNo").val();
            FinalObject.TransactionDate = $("#TransactionDate").val();
            FinalObject.Remark = $("#Remark").val();

            FinalObject.IssueFrom = $("#IssueFrom").val();
            FinalObject.IssueTo = $("#IssueTo").val();

            for (var i = StoreTransferIssueGridData.length - 1; i >= 0; i--) {
                //if (PIGridData[i].dirty) {
                TransactionItemList.TransItemID = StoreTransferIssueGridData[i].TransItemID;
                TransactionItemList.TransactionID = StoreTransferIssueGridData[i].TransactionID;
                TransactionItemList.ItemID = StoreTransferIssueGridData[i].ItemID;
                TransactionItemList.SupplierID = StoreTransferIssueGridData[i].SupplierID;
                TransactionItemList.IssuePackSizeName = StoreTransferIssueGridData[i].IssuePackSizeName;
                TransactionItemList.IssueSizeUnitName = StoreTransferIssueGridData[i].IssueSizeUnitName;

                TransactionItemList.IssuePackQty = StoreTransferIssueGridData[i].IssuePackQty;
                TransactionItemList.IssueQty = StoreTransferIssueGridData[i].IssueQty;
                TransactionItemList.IssueUnitName = StoreTransferIssueGridData[i].IssueUnitName;

                FinalObject.TransactionItemList.push(TransactionItemList);
                TransactionItemList = {
                    "TransItemID": "", "TransactionID": "", "ItemID": "", "SupplierID": "", "IssuePackSizeName": "", "IssueSizeUnitName": "",
                    "IssuePackQty": "", "IssueQty": "", "IssueUnitName": ""
                };
                //}
            }

            if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("StoreTransferIssue", "StoreTransferIssue")',
                    data: JSON.stringify(FinalObject),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#divLoading").hide();
                        //ItemGridchangeStatus = 0;
                        if (response.Msg.Type == 2) {

                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                            $("#TransactionID").val(response.TransactionID);
                            $("#TransactionNo").val(response.TransactionNo);

                            $("#StoreTransferIssueGrid").data('kendoGrid').dataSource.data(response.TransactionItemList);
                            changeStatus = 0;
                            PageStatus = "NCF";
                            MakeIssueFromDisabled();

                        }
                        else if (response.Msg.Type == 3) {
                            //ItemGridchangeStatus = 0;
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                            $("#StoreTransferIssueGrid").data('kendoGrid').dataSource.data(response.TransactionItemList);
                            changeStatus = 0;
                            PageStatus = "NCF";

                        }
                        else {
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        }
                    } //End of success call
                }); //End of ajax call
            }
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
            }

        }
        else {
            $("#MessageText").html("Please Enter the Required Data Properly.");
            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
        }

        FinalObject = {
            "TransactionID": "", "TransactionNo": "", "TransactionDate": "", "Remark": "", "IssueFrom": "", "IssueTo": "", "TransactionItemList": []
        };
    };

    //-----------------------------------End of Saving Data------------------------------------------------------------------------------------
</script>

