@model ERP.EntitiesModel.AppSetupModel.SysGrade

@{
    ViewBag.Title = @ViewBag.formTiltle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@ViewBag.formTiltle</title>
<div class="row">
    <div class="FormHeader">
        <fieldset id="FormHeaderFieldSet">
            <div id="FormTitlePannel" class="col-lg-4">
                <div id="FormTitle" style="font-size:larger; font-weight:bold;">@ViewBag.formTiltle</div>
            </div>
            <div id="MessageText" class="col-lg-6">
            </div>
            <div id="ButtonPanel" class="col-lg-2">
                <input type="button" id="btnReset" class="Button" value="Reset" style="position:absolute; right:20px;" />
                <input type="button" id="btnSubmit" class="Button" value="Save" onclick="Save()" style="position: absolute; right: 75px;" />
            </div>
        </fieldset>
    </div>
</div>


<div class="row">
    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Grade Code</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="GradeID" readonly="readonly" class="txtBox ReadOnlyTextbox" name="SourceID" />
            </div>
            <div class="col-lg-2">
                <label>Grade Name</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="GradeName" class="txtBox RequiredTextBox SetFocus" name="SourceName" tabindex="1" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Grade Description</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="Description" class="txtBox RequiredTextBox SetFocus" name="SourceName" tabindex="1" />
            </div>

            <div class="col-lg-2">
                <label>Is Active</label>
            </div>
            <div class="col-lg-2">
                <select id="IsActive" class="txtBox">
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="FormBody">
        <div id="PageDetailGrid" class="MainGrid" tabindex="5"></div>
    </div>
</div>


    <div id="DeleteConfirmWindow" style="display: none;">
        <p><h5>Are you sure to delete?</h5></p>
        <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
        <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
    </div>


    <div id="SaveChangeWindow" style="display: none;">
        <p><h5>Data will be lost if you continue.</h5></p>
        <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
        <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
    </div>



    <script type="text/javascript">
        // To Declare Global Variable
        var changeStatus = 0;
        var resetEditDeleteStatus = 0;
        var dataitem = {};
        //// Start  $(document).ready(function ()
        $(document).ready(function () {
            //To Define Data Source for Kendo Grid
            var dataSource = new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "GradeID",
                        fields: {
                            GradeID: { editable: false },
                            GradeName: { editable: false },
                            Description: { editable: false },
                            IsActive: { editable: false }
                        }
                    }
                },
                pageSize: 10,
                transport: {
                    read: {
                        url: "@Url.Action("GetGradeList", "Grade")", // at first data show
                        type: "GET"
                    }
                }
            });

            //To Define Columns for Source Kendo Grid
            var grid = $('#PageDetailGrid').kendoGrid({
                dataSource: dataSource,
                width: 430,
                pageable: true,
                editable: true,
                selectable: "row",
                navigatable: true,
                filterable: true,
                sortable: true,
                columns: [
                    { field: "GradeID", title: "Grade Code", width: 100, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                    { field: "GradeName", title: "Grade Name", width: 200, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                    { field: "Description", title: "Grade Description", width: 200, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                    { field: "IsActive", title: "Active Status", width: 110, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                    { command: [{ name: "Edit", text: "Edit", imageClass: "k-icon k-edit", click: handleEdit }], title: "Edit", width: "65px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                    { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: handleDelete }], title: "Delete", width: "100px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
                ]
            }).data('kendoGrid');

            //Handling Delete event for PageDeailsGrid row
            function handleDelete(event) {
                dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                if (changeStatus == 0) {
                    OpenConfirmationDialog();
                }
                else {
                    resetEditDeleteStatus = 3; //Delete Button
                    OpenSaveChangesDialog();
                }
            };

            //Handling Yes button click for grid row deletion
            $('#btnConfirmationOK').click(function () {
                $.ajax({
                    url: '@Url.Action("Delete", "Grade")',
                    type: 'POST',
                    data: JSON.stringify({ "GradeID": dataitem.GradeID }),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (respnse) {
                        if (respnse.msg.Type == 2) {
                            $('#MessageText').html(respnse.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                            $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        }
                        else {
                            $("#MessageText").html(respnse.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    }
                });
                $(".RequiredTextBox").css("border-color", "white");
                CloseConfirmationDialog();
            });

            //Handling No button click for grid row deletion
            $('#btnConfirmationCancel').click(function () {
                dataitem = {};
                CloseConfirmationDialog();
            });

            //To clear operational/error message
            ClearOperationalMessage();

            //For removing operational & required message after triggering other event
            ClearRequiredTextBoxRedColor();

            // To check unsaved data in master or details
            CheckUnSavedMasterData();

            // Focus SourceName textbox
            $(".SetFocus").focus();
            //// Declare Numeric Class in SlNo Textbox
            //$(".numaric").numeric();

            // Edit Button in Grid
            function handleEdit(event) {
                // For Grid Edit Button
                resetEditDeleteStatus = 2;
                // When Changes Data
                if (changeStatus == 1) {
                    dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                    OpenSaveChangesDialog();
                }
                    // When No Changes Data
                else {
                    //ClearRequiredTextBoxRedColor();
                    $(".RequiredTextBox").css("border-color", "white");
                    dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                    SetMasterData(dataitem);
                    //$(".RequiredTextBox").css("border-color", "white");
                    //changeStatus = 0;
                }
            };

            // Click Save Chages Popup No Button
            $("#btnSaveChangeWindowOk").click(function () {
                if (resetEditDeleteStatus == 1) { // Reset
                    ResetOnlyMasterPageData();
                    //ClearDetailGridFilterAndPaging('PageDetailGrid');
                    $(".RequiredTextBox").css("border-color", "white");
                    GridReload('PageDetailGrid');
                    $("#IsActive").val("Active");
                    changeStatus = 0;
                    CloseSaveChangesDialog();
                }
                else if (resetEditDeleteStatus == 2) { // Edit
                    $(".RequiredTextBox").css("border-color", "white");
                    SetMasterData(dataitem);
                    changeStatus = 0;
                    CloseSaveChangesDialog();
                }
                else if (resetEditDeleteStatus == 3) { // Delete
                    $.ajax({
                        url: '@Url.Action("Delete", "Grade")',
                        type: 'POST',
                        data: JSON.stringify({ "GradeID": dataitem.GradeID }),
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (respnse) {
                            if (respnse.msg.Type == 2) {
                                $('#MessageText').html(respnse.msg.Msg);
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                                $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                            }
                            else {
                                $("#MessageText").html(respnse.msg.Msg);
                                $("#MessageText").css("color", "red");
                            }
                        }
                    });
                    $(".RequiredTextBox").css("border-color", "white");
                    changeStatus = 0;
                    CloseSaveChangesDialog();
                }
                else
                    CloseSaveChangesDialog();
            });

            // Click Save Chages Popup Cancel Button
            $("#btnSaveChangeWindowCancel").click(function () {
                CloseSaveChangesDialog();
            });


            $("#btnReset").click(function () {
                resetEditDeleteStatus = 1; //Reset Button
                // When Chages Data
                if (changeStatus == 1)
                    OpenSaveChangesDialog();
                    // When no Chages Data
                else {
                    ClearOperationalMessage();
                    ResetOnlyMasterPageData();
                    $(".RequiredTextBox").css("border-color", "white");
                    GridReload('PageDetailGrid');
                    $("#IsActive").val("Active");
                }
            });

            function CheckUnSavedMasterData() {
                $(".txtBox").change(function () {
                    changeStatus = 1;
                });
            }

            // **       Page Unloaded **//
            window.onbeforeunload = function (e) {
                if (changeStatus == 1) {
                    e.preventDefault();
                }
            };
            //  **       Page Unloaded **//
        });
        // ** End Start Document .Ready

        // Declare Object
        var GradeUI = { "GradeID": "", "GradeName": "", "Description": "", "IsActive": "" };
        var saveStatus = 1;
        function Save() {

            saveStatus = 1;

            CheckRequiredTextBoxMaxLength('GradeName', 50);

            CheckNormalTextBoxMaxLength('Description', 200);


            if (saveStatus == 1) {
                GradeUI.GradeID = $("#GradeID").val();
                GradeUI.GradeName = $("#GradeName").val();
                GradeUI.Description = $("#Description").val();
                GradeUI.IsActive = $("#IsActive option:selected").val();
                
                if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("Grade", "Grade")',
                    data: JSON.stringify(GradeUI),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (response) {
                        if (response.msg.Type == 2) {
                            changeStatus = 0;
                            $('#GradeID').val(response.GradeID);
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response.msg.Type == 3) {
                            changeStatus = 0;
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response == "ORA-00001") {
                            $("#MessageText").html("Duplicate Record.");
                            $("#MessageText").css("color", "red");
                            changeStatus = 0;
                        }
                        else {
                            changeStatus = 0;
                            $("#MessageText").html(response.Message);
                            $("#MessageText").css("color", "red");
                        }
                    }
                });
                }
                    // No Changes Exiting Data
                else
                {
                    $("#MessageText").html("No Changes to Save.");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                    $("#GradeName").focus();
                }
            }
            
        };

    </script>
