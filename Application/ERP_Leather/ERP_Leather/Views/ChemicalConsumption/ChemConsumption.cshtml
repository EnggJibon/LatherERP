@{
    ViewBag.Title = "Chemical Consumption";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">

    <div class="FormHeader">
        <fieldset id="FormHeaderFieldSet">

            <div id="FormTitlePannel" class="col-lg-4">
                <div id="FormTitle" style="font-size:larger; font-weight:bold;">@ViewBag.formTiltle</div>
            </div>
            <div id="MessageText" class="col-lg-6">

            </div>
            <div id="ButtonPanel" class="col-lg-2">
                <input type="button" id="btnReset" class="Button" value="Reset" style="position:absolute; right:20px;" />
                <input type="button" id="btnDelete" class="Button" value="Delete" style="position:absolute; right:75px;" />
                <input type="button" id="btnSearch" class="Button" value="Search" style="position:absolute; right:135px;" />
                <input type="button" id="btnSave" class="Button" value="Save" onclick="Save()" style="position:absolute; right:200px;" />
            </div>
        </fieldset>
    </div>

</div>

<div class="row">
    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Schedule No.</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleNo" readonly="readonly" placeholder = "Press F9" class="txtBox" name="" tabindex="" style="width:150px;" />
                <input id="ScheduleID" type="hidden" class="txtBox" />
                <input id="WBProductionID" type="hidden" class="txtBox" />
            </div>
            <div class="col-lg-2">
                <label>Schedule of</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleFor" readonly="readonly" value="Wet Blue Production" class="" name="" tabindex="" style="width:150px;" />
            </div>
            <div class="col-lg-2">
                <label>Schedule Month</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleMonth" readonly="readonly" class="txtBox" name="" tabindex="" style="width:150px;" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Schedule Year</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleYear" class="txtBox" readonly="readonly" name="" tabindex="" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>Production Floor</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ProductionFloor" class="txtBox" />
                <input type="text" id="ProductionFloorName" class="txtBox" name="" tabindex="" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>Prepare Date</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="PrepareDate" readonly="readonly" class="txtBox" name="" tabindex="" style="width:150px;" />
            </div>
        </div>
        

    </div>

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Production No</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ScheduleDateID" class="txtBox" />
                <input type="text" id="ProductionNo" class="txtBox" placeholder="Press F9" readonly="readonly" style="width: 150px;" />
            </div>

            <div class="col-lg-2">
                <label>Production Status</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ProductionStatus" readonly="readonly" class="txtBox" style="width:150px;" />
                
            </div>
            <div class="col-lg-2">
                <label>Production PCS</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="SchedulePcs" class="txtBox" style="width:150px;" />
            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Production Side</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleSide" class="txtBox" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Production Weight</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleWeight" class="txtBox" style="width:70px;" />
                <input type="hidden" id="ScheduleWeightUnit" class="txtBox" />
                <input type="text" id="ScheduleWeightUnitName" class="txtBox" readonly="readonly" style="width: 75px;" />
            </div>

            <div class="col-lg-2">
                <label>Remarks</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="Remark" class="txtBox" readonly="readonly" style="width: 150px;" />
            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Start Date</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleStartDate" class="txtBox datePicker" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>
            <div class="col-lg-2">
                <label>End Date</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ScheduleEndDate" class="txtBox datePicker" readonly="readonly" style="width:150px; margin-left:2px;" />
            </div>

            <div class="col-lg-2">
                <label></label>
            </div>
            <div class="col-lg-2">
                <input type="button" id="" value="Execute" />
                <input type="button" id="" value="Conceal" />
            </div>
        </div>
    </div>

    <div class="FormBody">
        <div id="ProductionGrid"></div>
        <input type="hidden" class="txtBox" id="SchedulePurchaseID" />
    </div>


    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Production Category</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ProductionCategory" class="" value="Wet Blue" readonly="readonly" style="width: 150px;" />
            </div>

            <div class="col-lg-2">
                <label>Challan No</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="RecipeChallanNo" class="txtBox" readonly="readonly" name="" tabindex="" style="width:150px; margin-left:2px;" />
                
            </div>
            <div class="col-lg-2">
                <label>Color</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ArticleColorName" class="txtBox" readonly="readonly" name="" tabindex="" style="width:150px; margin-left:2px;" />
            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Production Process</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ProductionProcessName" class="txtBox" readonly="readonly" style="width:150px; margin-left:2px;" />
                <input type="hidden" class="txtBox" id="ProductionProcessID" />
            </div>

            <div class="col-lg-2">
                <label>Article No</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="ArticleID" class="txtBox" />
                <input type="text" id="ArticleNo" class="txtBox ReadOnlyTextbox" name="" tabindex="" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Base Quantity</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="BaseQuantity" class="txtBox RequiredTextBox " name="" tabindex="" readonly="readonly" style="width: 85px;" />
                <input type="hidden" id="BaseUnit" class="txtBox" />
                <input type="text" id="BaseUnitName" class="txtBox RequiredTextBox " name="" tabindex="" readonly="readonly" style="width: 60px;" />
                
            </div>

        </div>
        <div class="row">
            <div class="col-lg-2">
                <label>Recipe Name</label>
            </div>
            <div class="col-lg-2">
                <input type="hidden" id="RecipeID" class="txtBox Recipe" readonly="readonly" style="width:150px;" placeholder="Press F9" />
                <input type="text" id="RecipeName" class="txtBox Recipe" readonly="readonly" style="width:150px;" placeholder="Press F9" />
            </div>
            <div class="col-lg-2">
                <label>Article Name</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="ArticleName" class="txtBox ReadOnlyTextbox" name="" tabindex="" style="width:150px;" />
            </div>

            <div class="col-lg-2">
                <label>Requirement On</label>
            </div>
            <div class="col-lg-2">
                <select id="RequirementOn" style="width:150px;" class="txtBox">
                    <option value="">--Select--</option>
                    <option value="PR">Production</option>
                    <option value="DR">Drum</option>
                </select>
            </div>
        </div>
    </div>

    <div class="FormBody">
        <div id="ProductionItemGrid"></div>
    </div>

    @*<input type="hidden" id="RequisitionID" class="txtBox" />*@

    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Confirm Comment</label>
            </div>
            <div class="col-lg-4">
                <textarea id="ConfirmComment" class="txtBox" name="" tabindex=""></textarea>
                @*<input type="button" id="btnCheck" value="Check" />*@
                <input type="button" id="btnConfirm" value="Confirm" />
            </div>
        </div>
    </div>



</div>


<div id="ScheduleWindow" style="display: none;">
    <div id="ScheduleWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnScheduleWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnScheduleWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="ProductionWindow" style="display: none;">
    <div id="ProductionWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnProductionWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnProductionWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="RecipeWindow" style="display: none;">
    <div id="RecipeWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnRecipeWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnRecipeWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="ChemicalItemWindow" style="display: none;">
    <div id="ChemicalItemWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnChemicalItemWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnChemicalItemWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="SearchWindow" style="display: none;">
    <div id="SearchWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnSearchWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnSearchWindowOK" class="PopUpButton" value="OK" />

</div>

<div id="StockPackSizeWindow" style="display: none;">
    <div id="StockPackSizeWindowGrid" class="PopUpGrid">
    </div>
    <input type="button" id="btnStockPackSizeWindowCancel" class="PopUpButton" value="Cancel" />
    <input type="button" id="btnStockPackSizeWindowOK" class="PopUpButton" value="OK" />
</div>

<div id="SaveChangeWindow" style="display: none;">
    <p><h5>Data will be lost if you continue.</h5></p>
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
</div>

<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>

<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 42%; color: White;">
        Please wait... <img src="../../images/ajax-loading.gif">
    </p>
</div>

<script type="text/javascript">
    var ItemGridchangeStatus = 0;
    var changeStatus = 0; // any change textbox/Dropdown/Grid
    var resetEditStatus = 0;
    var dataitem = {};
    var checkUnsavedData = 0;
    var PageStatus = "";
    var PopUpWindowOPen = 1;

    $(document).ready(function () {

        //-------------------------------------To Make Some Form field read only & vice Versa...................................
        function MakeFormFieldNonEditable()
        {
            $("#ProductionProcessID").attr("disabled", "disabled");
            $("#RequirementOn").attr("disabled", "disabled");
            $("#SchedulePcs").attr("disabled", "disabled");
            $("#ScheduleSide").attr("disabled", "disabled");
            $("#ScheduleWeight").attr("disabled", "disabled");
        }

        function MakeFormFieldEditable() {
            $("#ProductionProcessID").removeAttr("disabled");
            $("#RequirementOn").removeAttr("disabled");

            $("#SchedulePcs").removeAttr("disabled");
            $("#ScheduleSide").removeAttr("disabled");
            $("#ScheduleWeight").removeAttr("disabled");
        };
        //-------------------------------------To Make Some Form field read only & vice Versa...................................

        //--------------------------------------Start of Defining Datasource & Dropdown-----------------------------------------------------------------
        var ddlSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "SizeID",
                    fields: {
                        SizeID: { editable: false },
                        SizeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllPackSizeForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlSize(container, options) {
            $('<input name="SizeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "SizeName",
                        dataValueField: "SizeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlSizeDataSource
                    });
        };

        var ddlUnitForChemicalPackSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemicalPackSize", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemicalPackSize(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalPackSizeDataSource
                    });
        };


        var ddlUnitForChemicalDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnitForChemical", "ChemicalForeignPurchaseOrder")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForChemical(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        scrolling: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                            checkUnsavedData = 1;
                        },
                        dataSource: ddlUnitForChemicalDataSource
                    });
        };


        var ddlItemTypeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemTypeID",
                    fields: {
                        ItemTypeID: { editable: false },
                        ItemTypeName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllItemType", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlItemType(container, options) {
            $('<input name="ItemTypeID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "ItemTypeName",
                        dataValueField: "ItemTypeName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlItemTypeDataSource
                    });
        };

        var ddlUnitForLeatherDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetAllUnit", "Common")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        function ddlUnitForLeather(container, options) {
            $('<input name="UnitID" data-bind="value:' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "UnitName",
                        dataValueField: "UnitName",
                        optionLabel: "Select",
                        autoBind: false,
                        change: function (e) {
                            ItemGridchangeStatus = 1;
                            changeStatus = 1;
                        },
                        dataSource: ddlUnitForLeatherDataSource
                    });
        };
        //--------------------------------------Start of Defining Datasource & Dropdown-----------------------------------------------------------------

        //--------------------------------------Start of defining Datagrid----------------------------------------------------------------
        var ProductionGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "WBProductionPurchaseID",
                    fields: {
                        WBProductionPurchaseID: { editable: false },
                        SchedulePurchaseID: { editable: false },
                        ScheduleDateID: { editable: false },
                        MachineID: { editable: false },
                        MachineNo: { editable: false },
                        SupplierID: { editable: false },
                        SupplierName: { editable: false },
                        PurchaseID: { editable: false },
                        PurchaseNo: { editable: false },
                        ItemTypeID: { editable: false },
                        ItemTypeName: { editable: false },
                        LeatherStatusID: { editable: false },
                        LeatherStatusName: { editable: false },
                        LeatherTypeID: { editable: false },
                        LeatherTypeName: { editable: false },
                        ProductionPcs: { editable: false, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        ProductionSide: { editable: false, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        ProductionWeight: { editable: false, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        WeightUnit: { editable: false },
                        UnitName: { editable: false },
                        Remarks: { editable: false }
                    }
                }
            },
            pageSize: 50
        });

        var ProductionGrid = $("#ProductionGrid").kendoGrid({
            dataSource: ProductionGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            edit: function (e) {
                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            height: 170,
            columns: [
                  //{ field: "WBProductionPurchaseID", title: "Production Purchase ID", width: "60px", sortable: false, filterable: false, attributes: { "class": "RequisitionNo" } },
                  //{ field: "SchedulePurchaseID", title: "Schedule Purchase ID", width: "60px", sortable: false, filterable: false, attributes: { "class": "RequisitionNo" } },
                  { field: "MachineNo", title: "Drum No", width: "60px", sortable: false,  attributes: { "class": "RequisitionNo" } },
                  { field: "SupplierName", title: "Supplier", width: "60px", sortable: false,  attributes: { "class": "RequisitionNo" } },
                  { field: "PurchaseNo", title: "Purchase No.", width: "60px", sortable: false, filterable: false, attributes: { "class": "RequisitionNo" } },
                  { field: "ItemTypeName", title: "Item Type", width: "60px", sortable: false, editor: ddlItemType },
                  { field: "LeatherStatusName", title: "Leather Status", width: "60px" },
                  { field: "ProductionPcs", format: "{0:n2}", title: "PCS", width: "50px" },
                  { field: "ProductionSide", format: "{0:n2}", title: "Side", width: "60px" },
                  { field: "ProductionWeight", format: "{0:n2}", title: "Weight", width: "50px" },
                  { field: "UnitName", title: "Unit", width: "60px", editor: ddlUnitForLeather },
                  { field: "Remarks", title: "Remarks", width: "60px" }
                  //{ command: [{ name: "btnDeleteProduction", text: "Delete", click: DeleteRequisition }], title: "Delete", width: 50 },
            ]
        }).data('kendoGrid');

        var ProductionItemGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "WBProdChemicalID",
                    fields: {
                        WBProdChemicalID: { editable: false },
                        RecipeItemID: { editable: false },
                        RecipeID: { editable: false },
                        ItemID: { editable: true },
                        ItemName: { editable: true, defaultValue: 'Press F9' },
                        RequiredQty: { editable: false, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequiredUnit: { editable: false },
                        RequiredUnitName: { editable: false },
                        StockQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        StockUnitID: { editable: true },
                        StockUnitName: { editable: true },
                        PackSize: { editable: true },
                        PackSizeName: { editable: true, defaultValue: 'Press F9' },
                        SizeUnit: { editable: true },
                        SizeUnitName: { editable: true },
                        PackQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequsitionQty: { editable: true, type: "number", validation: { required: false, min: 0, max: 999999999999 } },
                        RequisitionUnit: { editable: true },
                        RequisitionUnitName: { editable: true, defaultValue: 'KG' },
                        SupplierID: { editable: true },
                        SupplierName: { editable: true }
                    }
                }
            },
            pageSize: 50
        });

        var ProductionItemGrid = $("#ProductionItemGrid").kendoGrid({
            dataSource: ProductionItemGridDataSource,
            pageable: true,
            editable: true,
            edit: function (e) {
                var ddl = e.container.find('[data-role=dropdownlist]').data('kendoDropDownList');
                if (ddl) {
                    ddl.open();
                }
            },
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            toolbar: [{
                text: "Add New Chemical",
                className: "btnProductionItemGrid",
                imageClass: "k-icon k-add"
            }],
            columns: [
                    //{ field: "WBProdChemicalID", title: "WBProdChemicalID", width: "100px" },
                    { field: "ItemName", title: "Chemical<span style='color:red'>*</span>", width: "100px", attributes: { "class": "ChemicalItemName" } },
                    { field: "SupplierName", title: "Supplier", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "StockQty", format: "{0:n2}", title: "Consumable Stock Qty", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "StockUnitName", title: "Stock Unit", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "RequiredQty", format: "{0:n2}", title: "Required Qty", width: "80px", attributes: { style: "background-color: silver" } },
                    { field: "RequiredUnitName", title: "Unit", width: "75px", attributes: { style: "background-color: silver" } },
                    
                    //{ field: "PackSizeName", title: "Pack Size<span style='color:red'>*</span>", width: "70px", attributes: { "class": "StockPackSize" } },
                    //{ field: "SizeUnitName", title: "Unit<span style='color:red'>*</span>", width: "60px" },
                    //{ field: "PackQty", title: "Pack Qty<span style='color:red'>*</span>", width: "70px" },
                    { field: "RequsitionQty", format: "{0:n2}", title: "Use Qty<span style='color:red'>*</span>", width: "80px" },
                    { field: "RequisitionUnitName", title: "Unit<span style='color:red'>*</span>", width: "60px", editor: ddlUnitForChemical },
                    
                    { command: [{ name: "DeltedRow", text: "Delete", click: DeleteItem }], title: "Action", width: 60 }
            ]
        }).data('kendoGrid');

        var SearchGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "WBProductionID",
                    fields: {
                        WBProductionID: { editable: false },
                        ScheduleNo: { editable: false },
                        YearMonID: { editable: false },
                        ScheduleYear: { editable: false },
                        ScheduleMonth: { editable: false },
                        ProductionFloor: { editable: false },
                        ProductionFloorName: { editable: false },
                        ProductionNo: { editable: false },
                        WBProductionStartDate: { editable: false },
                        RecordStatus: { editable: false },
                        ProductionProcessName: { editable: false }
                        
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetSearchInformaiton", "ChemicalConsumption")',
                    type: "GET",
                    dataType: "JSON"
                }
            }
        });

        var searchGrid = $("#SearchWindowGrid").kendoGrid({
            dataSource: SearchGridDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            autoBind: false,
            columns: [
                    { field: "ScheduleNo", title: "Schedule No", width: "60px" },
                    { field: "ScheduleYear", title: "Schedule Year", width: "60px" },
                    { field: "ScheduleMonth", title: "Schedule Month", width: "60px" },
                    { field: "ProductionNo", title: "Production No", width: "60px" },
                    { field: "WBProductionStartDate", title: "Production Start Date", width: "60px" },
                    { field: "ProductionFloorName", title: "Production Floor", width: "60px" },
                    { field: "ProductionProcessName", title: "Production Process", width: "60px" },
                    { field: "RecordStatus", title: "Record Status", width: "60px" }
                    
            ]
        });

        var ScheduleWindowGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ScheduleID",
                    fields: {
                        ScheduleID: { editable: false },
                        ScheduleNo: { editable: false },
                        YearMonID: { editable: false },
                        ScheduleYear: { editable: false },
                        ScheduleMonth: { editable: false },
                        ProductionFloor: { editable: false },
                        ProductionFloorName: { editable: false },
                        PrepareDate: { editable: false },
                        ProductionProcessName: { editable: false }
                    }
                }
            },
            pageSize: 50,
            transport: {
                read: {
                    url: '@Url.Action("GetScheduleInformation", "ChemicalConsumption")',
                    type: "GET",
                    dataType: "JSON"
                }
            }

        });

        var ScheduleWindowGrid = $("#ScheduleWindowGrid").kendoGrid({
            dataSource: ScheduleWindowGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            autoBind: false,
            columns: [
                    { field: "ScheduleNo", title: "Schedule No", width: "60px" },
                    { field: "ScheduleYear", title: "Schedule Year", width: "60px" },
                    { field: "ScheduleMonth", title: "Schedule Month", width: "60px" },
                    { field: "PrepareDate", title: "Prepare Date", width: "60px" },
                    { field: "ProductionFloorName", title: "Production Floor", width: "60px" },
                    { field: "ProductionProcessName", title: "Production Process", width: "60px" }
            ]
        });

        var ProductionGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ScheduleDateID",
                    fields: {
                        ScheduleDateID: { editable: false },
                        ProductionNo: { editable: false },
                        SchedulePcs: { editable: false },
                        ScheduleSide: { editable: false },
                        ScheduleWeight: { editable: false },
                        ScheduleWeightUnit: { editable: false },
                        ScheduleWeightUnitName: { editable: false },
                        ProductionStatus: { editable: false },
                        Remark: { editable: false },
                        ScheduleStartDate: { editable: false },
                        ScheduleEndDate: { editable: false }
                    }
                }
            },
            pageSize: 50

        });

        var ProductionGrid = $("#ProductionWindowGrid").kendoGrid({
            dataSource: ProductionGridDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            autoBind:false,
            columns: [
                  { field: "ProductionNo", title: "Production No", width: "60px" },
                  { field: "ScheduleStartDate", title: "Start Date", width: "80px" },
                  { field: "ScheduleEndDate", title: "End Date", width: "80px" },
                  { field: "SchedulePcs", title: "Production Pcs", width: "60px" },
                  { field: "ScheduleSide", title: "Production Side", width: "60px" },
                  { field: "ScheduleWeight", title: "Production Weight", width: "60px" },
                  { field: "ScheduleWeightUnitName", title: "Unit", width: "60px" },
                  { field: "ProductionStatus", title: "Production Status", width: "60px" },

            ]

        });

        var RecipeGridDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "RecipeID",
                    fields: {
                        RecipeID: { editable: false },
                        RecipeNo: { editable: false },
                        RecipeName: { editable: false },
                        ArticleID: { editable: false },
                        ArticleNo: { editable: false },
                        ArticleName: { editable: false },
                        ArticleColor: { editable: false },
                        ArticleColorName: { editable: false },
                        ArticleChallanNo: { editable: false },
                        BaseQuantity: { editable: false },
                        BaseUnit: { editable: false },
                        BaseUnitName: { editable: false },
                    }
                }
            },
            pageSize: 50
        });

        var RecipeGrid = $("#RecipeWindowGrid").kendoGrid({
            dataSource: RecipeGridDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            //autoBind: false,
            columns: [
                  { field: "RecipeNo", title: "Recipe No", width: "60px" },
                  { field: "RecipeName", title: "Recipe Name", width: "60px" },
                  { field: "ArticleNo", title: "Article No.", width: "60px" },
                  { field: "ArticleName", title: "Article Name", width: "60px" },
                  { field: "ArticleColorName", title: "Article Color", width: "80px" },
                  { field: "ArticleChallanNo", title: "Article Challan No", width: "60px" },
                  { field: "BaseQuantity", title: "Base Quantity", width: "80px" },
                  { field: "BaseUnitName", title: "Base Unit", width: "60px" }
            ]
        });

        var ChemicalItemDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "ItemID",
                    fields: {
                        ItemID: { editable: false },
                        ItemName: { editable: false },
                        SupplierID: { editable: false },
                        SupplierName: { editable: false },
                        StockQty: { editable: false },
                        StockUnit: { editable: false },
                        StockUnitName: { editable: false }
                    }
                }
            },
            pageSize: 50

        });

        var ChemicalItemGrid = $("#ChemicalItemWindowGrid").kendoGrid({
            dataSource: ChemicalItemDataSource,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 300,
            columns: [
                  //{ field: "ItemID", title: "Item ID", width: "60px", filterable: false, sortable: false },
                  { field: "ItemName", title: "Item Name", width: "60px" },
                  { field: "SupplierName", title: "Supplier", width: "60px", filterable: false, sortable: false },
                  { field: "StockQty", title: "Consumable Stock Qty", width: "60px" },
                  { field: "StockUnitName", title: "Unit", width: "60px", filterable: false, sortable: false }
            ]

        });

        var StockPackSizeDataSource = new kendo.data.DataSource({
            schema: {
                model: {
                    id: "PackSize",
                    fields: {
                        PackSize: { editable: false },
                        PackSizeName: { editable: false },
                        SizeUnit: { editable: false },
                        SizeUnitName: { editable: false },
                        SupplierID: { editable: false },
                        SupplierName: { editable: false },
                        PackQty: { editable: false },
                        StockQty: { editable: false }
                    }
                }
            },
            pageSize: 50
        });

        var StockPackSizeGrid = $("#StockPackSizeWindowGrid").kendoGrid({
            dataSource: StockPackSizeDataSource,
            pageable: true,
            groupable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: {
                extra: false,
                operators: {
                    string: {
                        startswith: "Starts with",
                        contains: "Contains"
                    }
                }
            },
            sortable: true,
            groupable: true,
            height: 320,
            //autoBind: false,
            columns: [
                  { field: "PackSizeName", title: "Pack Size", width: "60px" },
                  { field: "SizeUnitName", title: "Size Unit", width: "60px" },
                  { field: "SupplierName", title: "Supplier Name", width: "80px" },
                  { field: "PackQty", title: "Pack Qty", width: "60px" },
                  { field: "StockQty", title: "Maximum Usable Stock Qty", width: "60px" }
            ]
        });

        //--------------------------------------End of defining Datagrid----------------------------------------------------------------


        //----------------------------------------To open all the pop up windows--------------------------------------------------------------------
        function LoadChemicalItemWindowGrid() {
            $.ajax({
                url: '@Url.Action("GetChemicalItemListInProductionFloor", "ChemicalConsumption")',
                data: ({ "_ProductionFloor": $("#ProductionFloor").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ChemicalItemWindowGrid").data("kendoGrid").dataSource.data(response);
                }
            });
        }

        $(document).on('keyup', '.ChemicalItemName', function (e) {
            
            if (e.which == 120) {
                    LoadChemicalItemWindowGrid();
                    SelectedItemOfListOfValue('ChemicalItemWindowGrid');
                    ChemicalItemWindow.open(); //Open Popup
                    ChemicalItemWindow.center();
                }
        });

        function GetStockInformationForItem() {
            var grid = $("#ProductionItemGrid").data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row


            $.ajax({
                url: '@Url.Action("GetStockPackSizeInfo", "IssueToProduction")',
                type: 'GET',
                data: { "_StoreID": $("#ProductionFloor").val(), "_ItemID": selectedItem.ItemID },
                success: function (response) {
                    $("#StockPackSizeWindowGrid").data('kendoGrid').dataSource.data(response);
                } //End of success call
            });
        }

        $(document).on('keyup', '.StockPackSize', function (e) {
            if (e.which == 120) {
                GetStockInformationForItem();
                SelectedItemOfListOfValue('StockPackSizeWindowGrid');
                StockPackSizeWindow.open(); //Open Popup
                StockPackSizeWindow.center();
                //MakeIssueToProductionGridEditable();
            }

        });

        function LoadProductionWindowGrid() {
            $.ajax({
                url: '@Url.Action("GetProductionInformation", "ChemicalConsumption")',
                data: ({ "_ScheduleID": $("#ScheduleID").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ProductionWindowGrid").data("kendoGrid").dataSource.data(response);
                }
            });
        }

        function GetRecipeForFixedProcess() {
            $.ajax({
                url: '@Url.Action("GetRecipeForFixedProcess", "ChemicalConsumption")',
                type: 'GET',
                data: { "_RecipeFor": $("#ProductionProcessID").val() },
                success: function (response) {

                    $("#RecipeWindowGrid").data('kendoGrid').dataSource.data(response);
                } //End of success call
            });
        }

        $(document.body).keyup(function (e) {
            //if (PopUpWindowOPen == 1) {

            if ($("#ScheduleNo").is(":focus")) {
                if (PopUpWindowOPen == 1)
                {
                    if (e.keyCode == 120) {
                        SelectedItemOfListOfValue('ScheduleWindowGrid');
                        ScheduleWindow.open();
                        ScheduleWindow.center();
                    }
                }
                else
                {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }                 
                }

            else if ($("#ProductionNo").is(":focus")) {
                if (PopUpWindowOPen == 1)
                {
                    if (e.keyCode == 120) {
                        if ($("#ScheduleNo").val() != "") {
                            LoadProductionWindowGrid();
                            SelectedItemOfListOfValue('ProductionWindowGrid');
                            ProductionWindow.open();
                            ProductionWindow.center();
                        }
                        else {
                            $('#MessageText').html("Please Select Schedule No ");
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        }
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                }

            else if ($(".Recipe").is(":focus")) {
                if (PopUpWindowOPen == 1)
                {
                    if (e.which == 120) {
                        if ($("#ProductionProcessID").val() != "" && $("#ProductionFloor").val() != "") {
                            GetRecipeForFixedProcess();
                            SelectedItemOfListOfValue('RecipeWindowGrid');
                            RecipeWindow.open();
                            RecipeWindow.center();
                        }
                        else {
                            $('#MessageText').html("Please Select Production Process & Production Floor");
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        }
                    }
                }
                else {
                    $('#MessageText').html("Record can't be changed at this stage.");
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                }
        });
        //----------------------------------------End of opening all the pop up windows--------------------------------------------------------------------

        //---------------------------------------------Start of defining popup Window-----------------------------------------------
        var searchWindow = $('#SearchWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "Search List",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');


        var ScheduleWindow = $('#ScheduleWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Schedule",
            position: { top: 100, left: 0 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ChemicalItemWindow = $('#ChemicalItemWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Chemical",
            position: { top: 0, left: 0 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var ProductionWindow = $('#ProductionWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List Of Production",
            position: { top: 100, left: 300 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var RecipeWindow = $('#RecipeWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "List of Recipe",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        var StockPackSizeWindow = $('#StockPackSizeWindow').kendoWindow({
            actions: ["Minimize", "Maximize", "Close"],
            visible: false,
            width: "auto",
            height: "auto",
            title: "Stock Information",
            position: { top: 50, left: 5 },
            modal: true,
            draggable: true
        }).data('kendoWindow');

        //---------------------------------------------End of defining popup Window-----------------------------------------------


        //-------------------------------------------------Common Function--------------------------------------------------------

        //To select the first row as default & to clear the filter while loading the grid
        function SelectedItemOfListOfValue(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            //Reload Grid
            grid.dataSource.read();
            //Clear Filter
            $('#' + GridName).data("kendoGrid").dataSource.filter([]);
            //Select First Row
            $('#' + GridName).data().kendoGrid.bind('dataBound', function (e) {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
        }

        //To Bring Data from List of Value Grid to Main Page
        function ListOfValueGridEvent(GridName) {
            var grid = $('#' + GridName).data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row
            changeStatus = 1;
            $.each(selectedItem, function (key, value) {
                if (value != null && value != 0)
                    $('#' + key).val(value);
            });
        }



        ClearOperationalMessage();
        ClearRequiredTextBoxRedColor();
        CheckUnSavedOnlyMasterData();


        // create DatePicker from input HTML element
        $(".datePicker").kendoDatePicker({
            format: "dd/MM/yyyy",
            value: new Date(),
            max: new Date()
        });

        // Display Date into kendo Grid Row
        function dateTimeEditor(container, options) {
            $('<input data-text-field="' + options.field + '" data-value-field="' + options.field + '" data-bind="value:' + options.field + '" data-format="' + options.format + '"/>')
                    .appendTo(container)
                    .kendoDatePicker({
                        value: new Date(),
                        max: new Date()
                        //change: function () {
                        //    alert("test");
                        //}
                    });
        }

        //-------------------------------------------------Common Function--------------------------------------------------------



        //-----------------------------------------------Handling all the pop up window events------------------------------------------

        //To bring data from search window to main page
        function SearchWindowEvents() {
            var grid = $("#SearchWindowGrid").data("kendoGrid");
            var selectedItem = (grid.dataItem(grid.select())); //Selected Row

            $.ajax({
                url: '@Url.Action("GetDetailsSearchInformaiton", "ChemicalConsumption")',
                data: ({ "_WBProductionID": selectedItem.WBProductionID }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                beforeSend: function () {
                    $("#divLoading").show();
                },
                complete: function () {
                    $("#divLoading").hide();
                },
                success: function (response) {
                    if (response.FormInfo != null) {
                        $.each(response.FormInfo, function (key, value) {
                            if (value != null && value != 0)
                                $('#' + key).val(value);
                        });
                    }
                    PopUpWindowOPen = 0;
                    MakeFormFieldNonEditable();
                    PageStatus = response.FormInfo.RecordStatus;
                    CheckRecordStatusForButton(PageStatus);
                    $("#ProductionGrid").data("kendoGrid").dataSource.data(response.LeatherList);
                    if (response.FormInfo.RequirementOn != "DR")
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response.ChemicalListForShow);

                   
                }
            });
        }
        $('#btnSearchWindowOK').click(function () {
            SearchWindowEvents();

            searchWindow.close();
            //MakeRequisitionGridNonEditable();
        });
        $('#btnSearchWindowCancel').click(function () {
            searchWindow.close();
        });
        $("#SearchWindow").dblclick(function () {
            SearchWindowEvents();

            searchWindow.close();
            //MakeRequisitionGridNonEditable();
        });
        $("#SearchWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                SearchWindowEvents();

                searchWindow.close();
                //MakeRequisitionGridNonEditable();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                searchWindow.close();
            }
            event.stopPropagation();
        });

        // Handling button click for Schedule window grid
        function ScheduleWindowEvent() {
            var WindowGrid = $("#ScheduleWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            $("#ScheduleID").val(WindowGridItem.ScheduleID);
            $("#ScheduleNo").val(WindowGridItem.ScheduleNo);
            $("#ScheduleMonth").val(WindowGridItem.ScheduleMonth);
            $("#ScheduleYear").val(WindowGridItem.ScheduleYear);
            $("#ProductionFloor").val(WindowGridItem.ProductionFloor);
            $("#ProductionFloorName").val(WindowGridItem.ProductionFloorName);
            $("#PrepareDate").val(WindowGridItem.PrepareDate);
            $("#ProductionProcessID").val(WindowGridItem.ProductionProcessID);
            $("#ProductionProcessName").val(WindowGridItem.ProductionProcessName);

            changeStatus = 1;
            //checkUnsavedData = 1;
        };
        $('#btnScheduleWindowOK').click(function () {
            ScheduleWindowEvent();
            ScheduleWindow.close();
        });
        $('#btnScheduleWindowCancel').click(function () {
            ScheduleWindow.close();
        });
        $("#ScheduleWindowGrid").dblclick(function () {
            ScheduleWindowEvent();
            ScheduleWindow.close();
        });
        $("#ScheduleWindowGrid").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ScheduleWindowEvent();
                ScheduleWindow.close();

            }
                // Close Window with escape key
            else if (keycode == '27') {
                ScheduleWindow.close();
            }
            event.stopPropagation();
        });


        //Handling button click for Location window grid
        function ProductionWindowEvent() {
            
            var WindowGrid = $("#ProductionWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            $("#ProductionNo").val(WindowGridItem.ProductionNo);
            $("#ScheduleStartDate").val(WindowGridItem.ScheduleStartDate);
            $("#ScheduleEndDate").val(WindowGridItem.ScheduleEndDate);
            $("#SchedulePcs").val(WindowGridItem.SchedulePcs);
            $("#ScheduleSide").val(WindowGridItem.ScheduleSide);
            $("#ScheduleWeight").val(WindowGridItem.ScheduleWeight);
            $("#ScheduleWeightUnit").val(WindowGridItem.ScheduleWeightUnit);
            $("#ScheduleWeightUnitName").val(WindowGridItem.ScheduleWeightUnitName);
            $("#ProductionStatus").val(WindowGridItem.ProductionStatus);
            $("#ScheduleDateID").val(WindowGridItem.ScheduleDateID);
            $("#Remark").val(WindowGridItem.Remark);
            $.ajax({
                url: '@Url.Action("GetProductionDetails", "ChemicalConsumption")',
                data: ({ "_ScheduleDateID": $("#ScheduleDateID").val() }),
                type: 'GET',
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    $("#ProductionGrid").data("kendoGrid").dataSource.data(response);
                }
            });
            changeStatus = 1;
        };

        $('#btnProductionWindowOK').click(function () {
            ProductionWindowEvent();
            ProductionWindow.close();
        });
        $('#btnProductionWindowCancel').click(function () {
            ProductionWindow.close();
        });
        $("#ProductionWindow").dblclick(function () {
            ProductionWindowEvent();
            ProductionWindow.close();
        });
        $("#ProductionWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ProductionWindowEvent();
                ProductionWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ProductionWindow.close();
            }
            event.stopPropagation();
        });


        $("#RequirementOn").change(function () {
            if ($("#RequirementOn").val() == "PR") {
                //var Factor = $("#ScheduleWeight").val() / $("#BaseQuantity").val();
                $.ajax({
                    url: '@Url.Action("GetRecipeItemListForFixedRecipe", "ChemicalConsumption")',
                    data: ({ "_RecipeID": $("#RecipeID").val(), "_StoreID": $("#ProductionFloor").val(), "_Weight": $("#ScheduleWeight").val(), "_Area": 0 }),
                    type: 'GET',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                        ItemGridchangeStatus = 1;
                        changeStatus = 1;
                    }
                });
            }
            else if ($("#RequirementOn").val() == "DR") {
                var Grid = $("#ProductionGrid").data("kendoGrid");
                var GridRow = Grid.select();
                var GridItem = Grid.dataItem(GridRow);

                //var Factor = GridItem.ProductionWeight / $("#BaseQuantity").val();
                $.ajax({
                    url: '@Url.Action("GetRecipeItemListForFixedRecipe", "ChemicalConsumption")',
                    data: ({ "_RecipeID": $("#RecipeID").val(), "_StoreID": $("#ProductionFloor").val(), "_Weight": GridItem.ProductionWeight, "_Area": 0 }),
                    type: 'GET',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                        ItemGridchangeStatus = 1;
                        changeStatus = 1;
                    }
                });
            }
        })

        function RecipeWindowEvent() {
            var WindowGrid = $("#RecipeWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            //var dataRows = PageGrid.items();
            //var rowIndex = dataRows.index(PageGrid.select());

            $("#RecipeID").val(WindowGridItem.RecipeID);
            $("#RecipeName").val(WindowGridItem.RecipeName);
            $("#ArticleID").val(WindowGridItem.ArticleID);
            $("#ArticleNo").val(WindowGridItem.ArticleNo);
            $("#ArticleName").val(WindowGridItem.ArticleName);
            $("#ArticleColor").val(WindowGridItem.ArticleColor);
            $("#ArticleColorName").val(WindowGridItem.ArticleColorName);
            $("#RecipeChallanNo").val(WindowGridItem.ArticleChallanNo);

            $("#BaseQuantity").val(WindowGridItem.BaseQuantity);
            $("#BaseUnit").val(WindowGridItem.BaseUnit);
            $("#BaseUnitName").val(WindowGridItem.BaseUnitName);

            changeStatus = 1;

            $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);

            //PageGrid.editCell($("#RequisitionGrid tr:eq(" + (rowIndex + 1) + ") td:eq(1)"));

            //$("#RequisitionGrid tr:eq(" + (rowIndex + 1) + ")").addClass('k-state-selected');
            //if (rowIndex > 0)
            //    $("#RequisitionGrid tr:eq(1)").removeClass('k-state-selected');


        };

        $('#btnRecipeWindowOK').click(function () {
            RecipeWindowEvent();
            RecipeWindow.close();
        });
        $('#btnRecipeWindowCancel').click(function () {
            RecipeWindow.close();
        });
        $("#RecipeWindow").dblclick(function () {
            RecipeWindowEvent();
            RecipeWindow.close();
        });
        $("#RecipeWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                RecipeWindowEvent();
                RecipeWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                RecipeWindow.close();
            }
            event.stopPropagation();
        });


        //Handling button click for Source window grid
        function ChemicalItemWindowEvent() {
            var test=1;


            var WindowGrid = $("#ChemicalItemWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            var ChemicalGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
            var ChemicalGridData = ChemicalGridDataSource.data();

            for (i = ChemicalGridData.length - 1; i >= 0; i--) {
                if (ChemicalGridData[i].ItemID == WindowGridItem.ItemID && ChemicalGridData[i].SupplierID == WindowGridItem.SupplierID && ChemicalGridData[i].UnitID == WindowGridItem.UnitID)
                    test=0;
            }
            if (test == 1) {
                var PageGrid = $("#ProductionItemGrid").data("kendoGrid");
                var PageGridItem = PageGrid.dataItem(PageGrid.select());

                PageGridItem.set("ItemID", WindowGridItem.ItemID);
                PageGridItem.set("ItemName", WindowGridItem.ItemName);
                PageGridItem.set("SupplierID", WindowGridItem.SupplierID);
                PageGridItem.set("SupplierName", WindowGridItem.SupplierName);
                PageGridItem.set("StockQty", WindowGridItem.StockQty);
                PageGridItem.set("StockUnitID", WindowGridItem.StockUnitID);
                PageGridItem.set("StockUnitName", WindowGridItem.StockUnitName);
            }
            else
            {
                $('#MessageText').html("Same Item Can't be Added Twice");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
            }

            changeStatus = 1;
            checkUnsavedData = 1;
            ItemGridchangeStatus = 1;

        };
        $('#btnChemicalItemWindowOK').click(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $('#btnChemicalItemWindowCancel').click(function () {
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").dblclick(function () {
            ChemicalItemWindowEvent();
            ChemicalItemWindow.close();
        });
        $("#ChemicalItemWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                ChemicalItemWindowEvent();
                ChemicalItemWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                ChemicalItemWindow.close();
            }
            event.stopPropagation();
        });


        function StockPackSizeWindowEvent() {
            var WindowGrid = $("#StockPackSizeWindowGrid").data("kendoGrid");
            var WindowGridRow = WindowGrid.select();
            var WindowGridItem = WindowGrid.dataItem(WindowGridRow);

            var PageGrid = $("#ProductionItemGrid").data("kendoGrid");
            var PageGridItem = PageGrid.dataItem(PageGrid.select());

            var IssueQty = Math.ceil(PageGridItem.RequiredQty / WindowGridItem.PackSizeName);

            PageGridItem.set("PackSize", WindowGridItem.PackSize);
            PageGridItem.set("PackSizeName", WindowGridItem.PackSizeName);
            PageGridItem.set("SizeUnit", WindowGridItem.SizeUnit);
            PageGridItem.set("SizeUnitName", WindowGridItem.SizeUnitName);
            PageGridItem.set("PackQty", IssueQty);
            PageGridItem.set("SupplierID", WindowGridItem.SupplierID);
            PageGridItem.set("SupplierName", WindowGridItem.SupplierName);

            //MakeIssueToProductionGridNonEditable();
            changeStatus = 1;
            checkUnsavedData = 1;
        };
        $('#btnStockPackSizeWindowOK').click(function () {
            StockPackSizeWindowEvent();
            StockPackSizeWindow.close();
        });
        $('#btnStockPackSizeWindowCancel').click(function () {
            StockPackSizeWindow.close();
        });
        $("#StockPackSizeWindow").dblclick(function () {
            StockPackSizeWindowEvent();
            StockPackSizeWindow.close();
        });
        $("#StockPackSizeWindow").keyup(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                StockPackSizeWindowEvent();
                StockPackSizeWindow.close();
            }
                // Close Window with escape key
            else if (keycode == '27') {
                StockPackSizeWindow.close();
            }
            event.stopPropagation();
        });
        //-----------------------------------------------End of Handling all the pop up window events------------------------------------------

        //------------------------------------Start of Handling of all the button event----------------------------------------
        $("#btnReset").click(function () {
            resetEditStatus = 1; // 1 for reset

            if (changeStatus == 0) {
                PageStatus = "NCF";
                CheckRecordStatusForButton(PageStatus);
                ClearOperationalMessage();
                ResetOnlyMasterPageData();
                $(".RequiredTextBox").css("border-color", "white");
                ItemGridchangeStatus = 0;
                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                ItemGridchangeStatus = 0;
                checkUnsavedData = 0;
                PopUpWindowOPen = 1;
                MakeFormFieldEditable();
            }
            else {
                OpenSaveChangesDialog();
            }
        });

        $("#btnSearch").click(function () {
            resetEditStatus = 2; // 2 for Search

            if (changeStatus == 0) {
                SelectedItemOfListOfValue('SearchWindowGrid');
                searchWindow.open();
            }
            else {
                OpenSaveChangesDialog();
            }
        });

        $("#btnSaveChangeWindowOk").click(function () {
            if (resetEditStatus == 1) //For reset
            {
                PageStatus = "NCF";
                CheckRecordStatusForButton(PageStatus);
                ClearOperationalMessage();
                ResetOnlyMasterPageData();
                $(".RequiredTextBox").css("border-color", "white");
                ItemGridchangeStatus = 0;
                $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                CloseSaveChangesDialog();
                changeStatus = 0;
                ItemGridchangeStatus = 0;
                checkUnsavedData = 0;
                PopUpWindowOPen = 1;
                MakeFormFieldEditable();
            }
            else if (resetEditStatus == 2) // For Search
            {
                CloseSaveChangesDialog();
                SelectedItemOfListOfValue('SearchWindowGrid');
                searchWindow.open();
            }
            else if (resetEditStatus == 3) // For Requisition Item Delete
            {
                DeleteFrom = 1;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }
            else if (resetEditStatus == 5) // For Purchase Delete
            {
                DeleteFrom = 3;
                CloseSaveChangesDialog();
                OpenConfirmationDialog();
            }
        });

        $("#btnSaveChangeWindowCancel").click(function () {
            CloseSaveChangesDialog();
        });

        $("#btnCheck").click(function () {

            $.ajax({
                url: '@Url.Action("CheckChemicalConsumtion", "ChemicalConsumption")',
                type: 'GET',
                data: { "_WBProductionID": $("#WBProductionID").val(), "_ConfirmComment": $("#ConfirmComment").val() },
                success: function (response) {

                    if (response.Msg == "Success") {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html("Checked Successfully");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CHK";
                        CheckRecordStatusForButton(PageStatus);


                    } else if (response.Msg == "Fail") {
                        $('#MessageText').html("Confirmation Failed");
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });

        $("#btnConfirm").click(function () {

            $.ajax({
                url: '@Url.Action("ConfirmChemicalConsumption", "ChemicalConsumption")',
                type: 'GET',
                data: { "_WBProductionID": $("#WBProductionID").val(), "_ConfirmComment": $("#ConfirmComment").val() },
                beforeSend: function () {
                    $("#divLoading").show();
                },
                complete: function () {
                    $("#divLoading").hide();
                },
                success: function (response) {

                    if (response.ReturnId == 1) {
                        //ResetOnlyMasterPageData();
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#RecipeItemGrid").data('kendoGrid').dataSource.data([]);
                        changeStatus = 0;
                        PageStatus = "CNF";
                        CheckRecordStatusForButton(PageStatus);
                    } else if (response.ReturnId == 0) {
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                        //$("#AdjustmentGrid").data('kendoGrid').dataSource.data([]);
                    }

                } //End of success call
            });
        });


        @*function ConcealRequisition(event) {

            var CurrentRequisition = RequisitionGrid.dataItem($(event.currentTarget).closest("tr"));



            $.ajax({
                url: '@Url.Action("ConsealRequisition", "ChemicalForeignPurchaseOrder")',
                type: 'GET',
                data: { "RequisitionID": CurrentRequisition.RequisitionID },
                success: function (response) {
                    if (response.Msg == "Success") {
                        $('#MessageText').html("Consealed Successfully");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        //$("#RequisitionGrid").data("kendoGrid").dataSource.remove(dataitem);
                    }
                    else if (response.Msg == "Fail") {
                        $('#MessageText').html("Failed To Conseal");
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                    }

                } //End of success call
            });
        };*@
        //------------------------------------End of Handling of all the button event----------------------------------------


        //------------------------------To Add new row to any grid----------------------------------------------------
        $("#ProductionItemGrid").on('input', function () {
            ItemGridchangeStatus = 1;
            changeStatus = 1;
            checkUnsavedData = 1;
        });
        $("#ProductionGrid").on('input', function () {
            changeStatus = 1;
        });

        function MakeProductionItemGridEditable() {
            var grid = $("#ProductionItemGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["ItemID"].editable = true;
            grid.dataSource.at(0).fields["ItemName"].editable = true;

            //grid.dataSource.at(0).fields["SupplierID"].editable = true;
            //grid.dataSource.at(0).fields["SupplierName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackSize"].editable = true;
            //grid.dataSource.at(0).fields["IssuePackSizeName"].editable = true;

            //grid.dataSource.at(0).fields["IssueSizeUnit"].editable = true;
            //grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackQty"].editable = true;
        };
        function MakeProductionItemGridNonEditable() {
            var grid = $("#ProductionItemGrid").data("kendoGrid");

            grid.dataSource.at(0).fields["ItemID"].editable = false;
            grid.dataSource.at(0).fields["ItemName"].editable = false;

            //grid.dataSource.at(0).fields["SupplierID"].editable = true;
            //grid.dataSource.at(0).fields["SupplierName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackSize"].editable = true;
            //grid.dataSource.at(0).fields["IssuePackSizeName"].editable = true;

            //grid.dataSource.at(0).fields["IssueSizeUnit"].editable = true;
            //grid.dataSource.at(0).fields["IssueSizeUnitName"].editable = true;

            //grid.dataSource.at(0).fields["IssuePackQty"].editable = true;
        };

        $("#ProductionItemGrid").keyup(function (e) {

            if (e.keyCode == 13) {
                var ChildGrid = $("#ProductionItemGrid").data("kendoGrid");
                $("#ProductionItemGrid").data().kendoGrid.bind('dataBound', function () {
                    this.element.find('tbody tr:first').addClass('k-state-selected');
                });
                ChildGrid.addRow();
                MakeProductionItemGridEditable();
            }
        });

        $(".btnProductionItemGrid").click(function (e) {
            var ChildGrid = $("#ProductionItemGrid").data("kendoGrid");
            $("#ProductionItemGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            ChildGrid.addRow();
            MakeProductionItemGridEditable();
            e.preventDefault();
        });
        //------------------------------End of Adding new row to any grid----------------------------------------------------

        //To face child data into another grid for a grid row on click
        $("#ProductionGrid").on("click", "tr", function (e) {
            if (checkUnsavedData == 0)
            {
                var parentGrid = $("#ProductionGrid").data("kendoGrid");
                var parentGridRow = parentGrid.select();
                var parentGridItem = parentGrid.dataItem(parentGridRow);
                $("#SchedulePurchaseID").val(parentGridItem.SchedulePurchaseID);
            }
            

            if ($("#RequirementOn").val() == "DR")
            {
                if (checkUnsavedData == 0) {
                    var parentGrid = $("#ProductionGrid").data("kendoGrid");
                    var parentGridRow = parentGrid.select();
                    var parentGridItem = parentGrid.dataItem(parentGridRow);

                    if (parentGridItem.WBProductionPurchaseID != "") {
                        $.ajax({
                            url: '@Url.Action("GetChemicalItemListForFixedLeather", "ChemicalConsumption")',
                            type: 'GET',
                            data: { "_WBProductionPurchaseID": parentGridItem.WBProductionPurchaseID, "_WBProductionID": $("#WBProductionID").val(), "_StoreID": $("#ProductionFloor").val() },
                            beforeSend: function () {
                                $("#divLoading").show();
                            },
                            complete: function () {
                                $("#divLoading").hide();
                            },
                            success: function (response) {

                                if (response != null) {

                                    $("#ProductionItemGrid").data("kendoGrid").dataSource.data(response);
                                    //changeStatus = 0;
                                }

                            } //End of Success Call
                        });
                    }
                    else {
                        $("#ProductionItemGrid").data('kendoGrid').dataSource.data([]);
                    }
                }
                else if (checkUnsavedData == 1) {
                    alert("You have unsaved Data");
                    $('#MessageText').html("You have unsaved Data");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
            }

            
        });
        //End of facing child data into another grid for a grid row on click

        //--------------------------------Handling Delete Event-------------------------------------------------------------

        var DeleteFrom = 0;
        
        function DeleteItem(event) {
            if (changeStatus == 0) {
                dataitem = ProductionItemGrid.dataItem($(event.currentTarget).closest("tr"));
                DeleteFrom = 1;
                OpenConfirmationDialog();
            }
            else {
                dataitem = ProductionItemGrid.dataItem($(event.currentTarget).closest("tr"));
                resetEditStatus = 3;
                OpenSaveChangesDialog();
            }

        };

        $("#btnDelete").click(function () {
            if (changeStatus == 0) {
                //dataitem = itemGrid.dataItem($(event.currentTarget).closest("tr"));
                DeleteFrom = 3;
                OpenConfirmationDialog();
            }
            else {
                //dataitem = itemGrid.dataItem($(event.currentTarget).closest("tr"));
                resetEditStatus = 5;
                OpenSaveChangesDialog();
            }
        });



        $('#btnConfirmationOK').click(function () {
            if (DeleteFrom == 1) // Item Delete
            {
                if (dataitem.WBProdChemicalID == 0) {
                    $("#ProductionItemGrid").data("kendoGrid").dataSource.remove(dataitem);
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteProductionItem", "ChemicalConsumption")',
                        type: 'GET',
                        data: { "_WBProdChemicalID": dataitem.WBProdChemicalID, "_PageStatus": PageStatus },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                                $("#ProductionItemGrid").data("kendoGrid").dataSource.remove(dataitem);
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }
           
            else if (DeleteFrom == 3) //Order Delete
            {
                var ProductionItemGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
                var ProductionItemGridData = ProductionItemGridDataSource.data();
                if (ProductionItemGridData.length > 0) {
                    $('#MessageText').html("Chemical Item Found");
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                }
                else {
                    $.ajax({
                        url: '@Url.Action("DeleteChemicalConsumption", "ChemicalConsumption")',
                        type: 'GET',
                        data: { "_WBProductionID": $("#WBProductionID").val(), "_PageStatus": PageStatus },
                        success: function (response) {

                            if (response.Msg == "Success") {
                                ResetOnlyMasterPageData();
                                $('#MessageText').html("Delete Successful");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                                $("#ProductionGrid").data('kendoGrid').dataSource.data([]);
                            }
                            else if (response.Msg == "Fail") {
                                $('#MessageText').html("Delete Failed");
                                $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }
                            else if (response.Msg == "CNF") {
                                $('#MessageText').html("Confirmed record can not be deleted.");
                                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                            }

                        } //End of success call
                    });
                }
            }
            CloseConfirmationDialog();
        });


        //Handling No button click for grid row deletion
        $('#btnConfirmationCancel').click(function () {
            dataitem = {};
            CloseConfirmationDialog();
        });
        //---------------------------------End of handling Delete Event-----------------------------------------------------

    });//End of Document.Ready()


    //-----------------------------------To Save Data------------------------------------------------------------------------------------
    var LeatherList = {
        "WBProductionPurchaseID": "", "SchedulePurchaseID": "", "MachineID": "", "MachineNo": "",
        "SupplierID": "", "PurchaseID": "", "ItemTypeName": "", "LeatherTypeName": "", "LeatherStatusName": "", "WBProductionPcs": "", "WBProductionSide": "",
        "WBProductionWeight": "", "UnitName": "" };

    var ChemicalList = {
        "WBProdChemicalID": "", "WBProductionPurchaseID": "", "WBProductionID": "", "SchedulePurchaseID": "", "RequisitionID": "", "RecipeID": "", "ItemID": "",
        "CalculationBase": "", "RequiredQty": "", "RequiredUnitName": "", "UsePackSizeName": "", "UseSizeUnitName": "", "UsePackQty": "", "UseQty": "", "UseUnitName": "", "SupplierID": "", "ItemSource": ""
    };
    var FinalObject = {
        "WBProductionID": "", "WBProductionNo": "", "ProductionNo": "", "ProductionFloor": "", "ScheduleDateID": "", "WBProductionWeight": "",
        "WBProductionStartDate": "", "WBProductionEndDate": "", "WBProductionPcs": "", "WBProductionSide": "",
        "WBWeightUnit": "", "RecipeID": "", "ParentID": "", "ArticleID": "", "ArticleNo": "", "RecipeChallanNo": "", "ProductionProcessID": "", "ConfirmeNote": "",
        "LeatherList": [], "ChemicalList": []
    };

    var saveStatus = 1;
    function Save() {
        saveStatus = 1;
        CheckRequiredTextBoxMaxLength('ScheduleNo', 50);
        CheckRequiredTextBoxMaxLength('ProductionNo', 50);

        //CheckRequiredTextBoxMaxLength('RecipeID', 10);
        //CheckRequiredTextBoxMaxLength('Address', 200);
        //CheckRequiredTextBoxMaxLength('PurchaseType', 15);
        //CheckRequiredTextBoxMaxLength('PurchaseCategory', 15);

        var ProductionGridDataSource = $("#ProductionGrid").data("kendoGrid").dataSource;
        var ProductionGridData = ProductionGridDataSource.data();


        var ProductionItemGridDataSource = $("#ProductionItemGrid").data("kendoGrid").dataSource;
        var ProductionItemGridData = ProductionItemGridDataSource.data();


        if (ProductionGridData.length == 0)
            saveStatus = 0;

        if (ProductionItemGridData.length == 0)
            saveStatus = 0;

        if (saveStatus == 1) {
            FinalObject.WBProductionID = $("#WBProductionID").val();
            FinalObject.WBProductionNo = $("#WBProductionNo").val();
            FinalObject.ProductionNo = $("#ProductionNo").val();
            FinalObject.ProductionFloor = $("#ProductionFloor").val();
            FinalObject.ScheduleDateID = $("#ScheduleDateID").val();
            FinalObject.WBProductionStartDate = $("#ScheduleStartDate").val();
            FinalObject.WBProductionEndDate = $("#ScheduleEndDate").val();
            FinalObject.WBProductionPcs = $("#SchedulePcs").val();
            FinalObject.WBProductionSide = $("#ScheduleSide").val();
            FinalObject.WBProductionWeight = $("#ScheduleWeight").val();
            FinalObject.WBWeightUnit = $("#ScheduleWeightUnit").val();
            FinalObject.RecipeID = $("#RecipeID").val();
            FinalObject.ArticleID = $("#ArticleID").val();
            FinalObject.ArticleNo = $("#ArticleNo").val();
            FinalObject.RecipeChallanNo = $("#RecipeChallanNo").val();
            FinalObject.ProductionProcessID = $("#ProductionProcessID").val();
            FinalObject.ConfirmeNote = $("#ConfirmeNote").val();
            FinalObject.ParentID = $("#SchedulePurchaseID").val();
            
            for (i = ProductionGridData.length - 1; i >= 0; i--) {
                //if (ProductionGridData[i].dirty) {

                LeatherList.WBProductionPurchaseID = ProductionGridData[i].WBProductionPurchaseID;
                LeatherList.SchedulePurchaseID = ProductionGridData[i].SchedulePurchaseID;

                LeatherList.MachineID = ProductionGridData[i].MachineID;
                LeatherList.MachineNo = ProductionGridData[i].MachineNo;

                LeatherList.SupplierID = ProductionGridData[i].SupplierID;
                LeatherList.PurchaseID = ProductionGridData[i].PurchaseID;

                LeatherList.ItemTypeName = ProductionGridData[i].ItemTypeName;
                LeatherList.LeatherTypeName = ProductionGridData[i].LeatherTypeName;

                LeatherList.LeatherStatusName = ProductionGridData[i].LeatherStatusName;
                LeatherList.WBProductionPcs = ProductionGridData[i].ProductionPcs;

                LeatherList.WBProductionSide = ProductionGridData[i].ProductionSide;
                LeatherList.WBProductionWeight = ProductionGridData[i].ProductionWeight;
                LeatherList.UnitName = ProductionGridData[i].UnitName;

                    FinalObject.LeatherList.push(LeatherList);
                    LeatherList = {
                        "WBProductionPurchaseID": "", "SchedulePurchaseID": "", "MachineID": "", "MachineNo": "",
                        "SupplierID": "", "PurchaseID": "", "ItemTypeName": "", "LeatherTypeName": "", "LeatherStatusName": "", "WBProductionPcs": "", "WBProductionSide": "",
                        "WBProductionWeight": "", "UnitName": ""
                    };
                //}
            }



            for (var i = ProductionItemGridData.length - 1; i >= 0; i--) {
                ChemicalList.WBProdChemicalID = ProductionItemGridData[i].WBProdChemicalID
                //ChemicalList.SchedulePurchaseID = $("#SchedulePurchaseID").val();
                ChemicalList.RecipeID = $("#RecipeID").val();
                ChemicalList.ItemID = ProductionItemGridData[i].ItemID;
                ChemicalList.CalculationBase = $("#RequirementOn").val();
                ChemicalList.RequiredQty = ProductionItemGridData[i].RequiredQty;
                ChemicalList.RequiredUnitName = ProductionItemGridData[i].RequiredUnitName;


                ChemicalList.UsePackSizeName = ProductionItemGridData[i].PackSizeName;
                ChemicalList.UseSizeUnitName = ProductionItemGridData[i].SizeUnitName;


                ChemicalList.UsePackQty = ProductionItemGridData[i].PackQty;
                ChemicalList.UseQty = ProductionItemGridData[i].RequsitionQty;

                ChemicalList.UseUnitName = ProductionItemGridData[i].RequisitionUnitName;
                ChemicalList.SupplierID = ProductionItemGridData[i].SupplierID;
                ChemicalList.ItemSource = ProductionItemGridData[i].ItemSource;
                
                FinalObject.ChemicalList.push(ChemicalList);
                ChemicalList = {
                    "WBProdChemicalID": "", "WBProductionPurchaseID": "", "WBProductionID": "", "SchedulePurchaseID": "", "RequisitionID": "", "RecipeID": "", "ItemID": "",
                    "CalculationBase": "", "RequiredQty": "", "RequiredUnitName": "", "UsePackSizeName": "", "UseSizeUnitName": "", "UsePackQty": "", "UseQty": "", "UseUnitName": "", "SupplierID": "", "ItemSource": ""
                };
            }
            if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("ChemConsumption", "ChemicalConsumption")',
                    data: JSON.stringify(FinalObject),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    beforeSend: function () {
                        $("#divLoading").show();
                    },
                    complete: function () {
                        $("#divLoading").hide();
                    },
                    success: function (response) {
                        ItemGridchangeStatus = 0;
                        if (response.Msg.Type == 2) {
                            
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });

                            $("#WBProductionID").val(response.WBProductionID);
                            $("#ProductionItemGrid").data('kendoGrid').dataSource.data(response.ChemicalList);
                            $("#ProductionGrid").data('kendoGrid').dataSource.data(response.LeatherList);
                            changeStatus = 0;
                            PageStatus = "NCF";
                            checkUnsavedData = 0;
                            PopUpWindowOPen = 0;
                            
                            $("#ProductionProcessID").attr("disabled", "disabled");
                            $("#RequirementOn").attr("disabled", "disabled");
                            $("#SchedulePcs").attr("disabled", "disabled");
                            $("#ScheduleSide").attr("disabled", "disabled");
                            $("#ScheduleWeight").attr("disabled", "disabled");

                            
                        }
                        else if (response.Msg.Type == 3) {
                            ItemGridchangeStatus = 0;
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });


                            $("#ProductionItemGrid").data('kendoGrid').dataSource.data(response.ChemicalList);
                            $("#ProductionGrid").data('kendoGrid').dataSource.data(response.LeatherList);
                            changeStatus = 0;
                            PageStatus = "NCF";
                            checkUnsavedData = 0;

                        }
                        else {
                            $('#MessageText').html(response.Msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        }
                    } //End of success call
                }); //End of ajax call
            }
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
            }

        }
        else {
            $("#MessageText").html("Please Enter the Required Data Properly.");
            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
        }

        FinalObject = {
            "WBProductionID": "", "WBProductionNo": "", "ProductionNo": "", "ProductionFloor": "", "ScheduleDateID": "", "WBProductionWeight": "",
            "WBProductionStartDate": "", "WBProductionEndDate": "", "WBProductionPcs": "", "WBProductionSide": "",
            "WBWeightUnit": "", "RecipeID": "", "ArticleID": "", "ArticleNo": "", "RecipeChallanNo": "", "ProductionProcessID": "", "ConfirmeNote": "",
            "LeatherList": [], "ChemicalList": []
        };
    };
    //-----------------------------------End of Saving Data------------------------------------------------------------------------------------
</script>