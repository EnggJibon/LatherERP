@model ERP.EntitiesModel.AppSetupModel.SysUnit

@{
    ViewBag.Title = @ViewBag.formTiltle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<title>@ViewBag.formTiltle</title>

<div class="row">
    <div class="FormHeader">
        <fieldset id="FormHeaderFieldSet">
            <div id="FormTitlePannel" class="col-lg-4">
                <div id="FormTitle" style="font-size:larger; font-weight:bold;">@ViewBag.formTiltle</div>
            </div>
            <div id="MessageText" class="col-lg-6">
            </div>
            <div id="ButtonPanel" class="col-lg-2">
                <input type="button" id="btnReset" class="Button" value="Reset" style="position:absolute; right:20px;" />
                <input type="button" id="btnSubmit" class="Button" value="Save" onclick="Save()" style="position: absolute; right: 75px;" />
            </div>
        </fieldset>
    </div>
</div>

<div class="row">
    <div class="FormBody">
        <div class="row">
            <div class="col-lg-2">
                <label>Unit Code</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="UnitID" readonly="readonly" class="txtBox ReadOnlyTextbox" name="UnitID" />
            </div>
            <div class="col-lg-2">
                <label>Unit Name</label>
            </div>
            <div class="col-lg-2">
                <input type="text" id="UnitName" class="txtBox RequiredTextBox SetFocus" name="UnitName" tabindex="1" />
            </div>
            <div class="col-lg-2">
                <label>Unit Category</label>
            </div>
            <div class="col-lg-2">
                <select id="UnitCategory" class="txtBox" tabindex="2">
                    <option value="Select">-- Select --</option>
                    <option value="Leather">Leather</option>
                    <option value="Chemical">Chemical</option>
                    <option value="ChemicalPack">ChemicalPack</option>
                    <option value="Thickness">Thickness</option>
                    @*<option value="Size">Size</option>*@
                    <option value="Common">Common</option>

                </select>
            </div>
        </div>
        <div class="row">

            <div class="col-lg-2">
                <label>Is Active</label>
            </div>
            <div class="col-lg-2">
                <select id="IsActive" class="txtBox">
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="FormBody">
        <div id="PageDetailGrid" class="MainGrid" tabindex="5"></div>
    </div>
</div>


<div id="DeleteConfirmWindow" style="display: none;">
    <div class="row" style=" width:245px;">
        <p style="margin-left: 20px;">Are you sure you want to delete?</p>
    </div>
    <div class="row" style="width: 245px;">
        <input type="button" style="height: 25px; width: 60px; margin-left: 120px;" id="btnConfirmationOK" value="OK" />
        <input type="button" style="height: 25px; width: 60px; " id="btnConfirmationCancel" value="Cancel" />
    </div>
</div>

<div id="SaveChangeWindow" style="display: none;">
    <div class="row">
        <label style="float: left;margin-left: 20px;">Data will be lost if you continue.</label>
    </div>
    <div class="row">
        <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowNo" value="OK" />
        <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
    </div>
</div>

<script type="text/javascript">
    // To Declare Global Variable
    var changeStatus = 0;
    var resetEditDeleteStatus = 0;
    var dataitem = {};
    //// Start  $(document).ready(function ()
    $(document).ready(function () {
        $('#UnitName').focusout(function () {
            nameCheck('UnitName');
        });
        //To Define Data Source for Kendo Grid
        var dataSource = new kendo.data.DataSource({
            batch: true,
            schema: {
                model: {
                    id: "UnitID",
                    fields: {
                        UnitID: { editable: false },
                        UnitName: { editable: false },
                        UnitCategory: { editable: false },
                        ContactPerson: { editable: false },
                        ContactNumber: { editable: false },
                        IsActive: { editable: false }
                    }
                }
            },
            pageSize: 10,
            transport: {
                read: {
                    url: '@Url.Action("GetUnit", "Unit")', // at first data show
                    type: "GET"
                }
            }
        });

        //To Define Columns for Source Kendo Grid
        var grid = $('#PageDetailGrid').kendoGrid({
            dataSource: dataSource,
            width: 430,
            pageable: true,
            editable: true,
            selectable: "row",
            navigatable: true,
            filterable: true,
            sortable: true,
            columns: [
                { field: "UnitID", title: "Unit Code", width: 100, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { field: "UnitName", title: "Unit Name", width: 200, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { field: "UnitCategory", title: "Unit Category", width: 200, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { field: "IsActive", title: "Active Status", width: 110, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { command: [{ name: "Edit", text: "Edit", imageClass: "k-icon k-edit", click: handleEdit }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Edit", width: "65px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
                { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: handleDelete }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete", width: "100px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
            ]
        }).data('kendoGrid');
        
        var confirmWindow = $('#DeleteConfirmWindow').kendoWindow({
            width: "250px",
            padding: "0px 0px 0px 0px",
            title: "Confirmation!",
            visible: false,
            resizable: false,

        }).data('kendoWindow');
        //Handling Delete event for PageDeailsGrid row
        function handleDelete(event) {
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            if (changeStatus == 0) {
                confirmWindow.open();
                confirmWindow.center();
            }
            else {
                resetEditDeleteStatus = 3; //Delete Button
                OpenSaveChangesDialog();
            }
        };

        //Handling Yes button click for grid row deletion
        $('#btnConfirmationOK').click(function () {
            $.ajax({
                url: '@Url.Action("DeleteUnit", "Unit")',
                //url: '/BillPayment/DeletedBillRefGridData',
                type: 'POST',
                data: JSON.stringify({ "sourceId": dataitem.UnitID }),
                //data: { "periodItemId": dataitem.PeriodItemID },
                contentType: 'application/json;',
                dataType: 'json',
                success: function (response) {
                    if (response.Type == 2) {
                        $('#MessageText').html(response.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                    }
                    else {
                        $("#MessageText").html(response.Msg);
                        $("#MessageText").css("color", "red");
                    }
                }
            });
            $(".RequiredTextBox").css("border-color", "white");
            confirmWindow.close();
        });

        //Handling No button click for grid row deletion
        $('#btnConfirmationCancel').click(function () {
            dataitem = {};
            CloseConfirmationDialog();
        });

        //To clear operational/error message
        ClearOperationalMessage();

        //For removing operational & required message after triggering other event
        ClearRequiredTextBoxRedColor();

        // To check unsaved data in master or details
        CheckUnSavedMasterData();

        // Focus UnitName textbox
        $(".SetFocus").focus();
        //// Declare Numeric Class in SlNo Textbox
        //$(".numaric").numeric();

        // Edit Button in Grid
        function handleEdit(event) {
            // For Grid Edit Button
            resetEditDeleteStatus = 2;
            // When Changes Data
            if (changeStatus == 1) {
                dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                OpenSaveChangesDialog();
            }
                // When No Changes Data
            else {
                //ClearRequiredTextBoxRedColor();
                $(".RequiredTextBox").css("border-color", "white");
                dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
                SetMasterData(dataitem);
                //$(".RequiredTextBox").css("border-color", "white");
                //changeStatus = 0;
            }
        };

        // Click Save Chages Popup No Button
        $("#btnSaveChangeWindowNo").click(function () {
            if (resetEditDeleteStatus == 1) { // Reset
                ResetOnlyMasterPageData();
                //ClearDetailGridFilterAndPaging('PageDetailGrid');
                $(".RequiredTextBox").css("border-color", "white");
                GridReload('PageDetailGrid');
                $("#IsActive").val("Active");
                changeStatus = 0;
                CloseSaveChangesDialog();
            }
            else if (resetEditDeleteStatus == 2) { // Edit
                //$(".RequiredTextBox").css("border-color", "white");
                $(".RequiredTextBox").css("border-color", "white");
                SetMasterData(dataitem);
                changeStatus = 0;
                CloseSaveChangesDialog();
            }
            else if (resetEditDeleteStatus == 3) { // Delete
                $.ajax({
                    url: '@Url.Action("DeleteUnit", "Unit")',
                    //url: '/BillPayment/DeletedBillRefGridData',
                    type: 'POST',
                    data: JSON.stringify({ "sourceId": $("#UnitID").val() }),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (respnse) {
                        if (respnse.msg.Type == 2) {
                            $('#MessageText').html(respnse.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                            $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        }
                        else {
                            $("#MessageText").html(respnse.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    }
                });
                $(".RequiredTextBox").css("border-color", "white");
                changeStatus = 0;
                CloseSaveChangesDialog();
            }
            else
                CloseSaveChangesDialog();
        });

        // Click Save Chages Popup Cancel Button
        $("#btnSaveChangeWindowCancel").click(function () {
            CloseSaveChangesDialog();
        });

        // **       Page Unloaded **//
        window.onbeforeunload = function (e) {
            if (changeStatus == 1) {
                e.preventDefault();
            }
        };
        //  **       Page Unloaded **//
    });
    // ** End Start Document .Ready

    // Declare Object
    var modelSysSource = { "UnitID": "", "UnitName": "", "UnitCategory": "", "IsActive": "" };
    var saveStatus = 1;
    // Save Or Update Data
    function Save() {

        saveStatus = 1;
        // Check Empty or Maximum Length in UnitName
        CheckRequiredTextBoxMaxLength('UnitName', 100);

        // Check Maximum Length in UnitCategory
        CheckNormalTextBoxMaxLength('UnitCategory', 200);

        // Check Save Proper Data
        if (saveStatus == 1) {
            modelSysSource.UnitID = $("#UnitID").val();
            modelSysSource.UnitName = $("#UnitName").val();
            modelSysSource.UnitCategory = $("#UnitCategory option:selected").val();
            modelSysSource.IsActive = $("#IsActive option:selected").val();
            //modelSysSource.CrudStatus = $("#CrudStatus").val();
            if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("Unit", "Unit")',
                    data: JSON.stringify(modelSysSource),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (response) {
                        if (response.msg.Type == 2) {
                            changeStatus = 0;
                            $('#UnitID').val(response.UnitID);
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response.msg.Type == 3) {
                            changeStatus = 0;
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response == "ORA-00001") {
                            $("#MessageText").html("Duplicate Record.");
                            $("#MessageText").css("color", "red");
                            changeStatus = 0;
                        }
                        else {
                            changeStatus = 0;
                            $("#MessageText").html(response.Message);
                            $("#MessageText").css("color", "red");
                        }
                    }
                });
            }
                // No Changes Exiting Data
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                $("#UnitName").focus();
            }
        }
    };
    $("#btnReset").click(function () {
        resetEditDeleteStatus = 1; //Reset Button
        // When Chages Data
        if (changeStatus == 1)
            OpenSaveChangesDialog();
            // When no Chages Data
        else {
            ClearOperationalMessage();
            ResetOnlyMasterPageData();
            $(".RequiredTextBox").css("border-color", "white");
            GridReload('PageDetailGrid');
            $("#IsActive").val("Active");
            $("#UnitCategory").val("Select");
        }
    });

    function CheckUnSavedMasterData() {
        $(".txtBox").change(function () {
            changeStatus = 1;
        });
    }
</script>