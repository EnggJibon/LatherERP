@{
    ViewBag.Title = "Comodity Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/bootstrap.js"></script>

<div>
    @Html.Partial("~/Views/Common/_FormHeader.cshtml")
</div>

<div class="row">
   
    <div class="FormBody">
        <input type="hidden" id="ComodityID" name="ComodityID" readonly="readonly" style="" />
        <div class="row">
            <div class="col-lg-4">
                <label>Comodity Code</label><span style="color:red">*</span>
                <input type="text" id="ComodityCode" name="ComodityCode" style="width:260PX" />
            </div>
            <div class="col-lg-4">
                <label>Comodity Name</label><span style="color:red">*</span>
                <input type="text" id="ComodityName" name="ComodityName" style="width:260PX" />
            </div>
            <div class="col-lg-4">
                <label>Status</label>
                <select id="IsActive" class="txtBox" tabindex="5" style="width:260PX;text-align:center">
                    <option value="Active">Active</option>
                    <option value="Inactive">Inactive</option>
                </select>
            </div>
        </div>
    </div>
</div>
<div class="row">
   
        <div class="FormBody">
            <div id="PageDetailGrid" class="MainGrid" tabindex="5"></div>
        </div>
    
</div>

<div id="SaveChangeWindow" style="display: none;">
    <p><h5>Data will be lost if you continue.</h5></p>
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowOk" value="OK" />
    <input type="button" class="ThreeButtonWindow" id="btnSaveChangeWindowCancel" value="Cancel" />
</div>

<script type="text/javascript">


    //*************************************Declare Global Variable for Comodity **************************************
    var changeStatus = 0;
    var resetEditDeleteStatus = 0;
    var dataitem = {};
    $('#btnSearch').attr('disabled', true);//btnDelete
    $('#btnDelete').attr('disabled', true);//
    //************************************ Start  $(document).ready(function ()***************************************
    $(document).ready(function () {
        //To Define Data Comodity for Kendo Grid
        var dataSource = new kendo.data.DataSource({
            batch: true,
            schema: {
                model: {
                    id: "ComodityID",
                    fields: {
                        ComodityID: { editable: false },
                        ComodityCode: { editable: false },
                        ComodityName: { editable: false },
                        IsActive: { editable: false }
                    }
                }
            },
            pageSize: 10,
            transport: {
                read: {
                    url: "@Url.Action("GetAllComodityData", "Comodity")", // at first data show
                type: "GET"
            }
        }
        });

    //To Define Columns for Comodity Kendo Grid
    var grid = $('#PageDetailGrid').kendoGrid({
        dataSource: dataSource,
        width: 430,
        pageable: true,
        editable: true,
        selectable: "row",
        navigatable: true,
        filterable: true,
        sortable: true,
        columns: [
            { field: "ComodityID", hidden: false, width: 100, filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { field: "ComodityCode", title: "Comodity No", width: 100, filterable: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { field: "ComodityName", title: "Comodity Name", width: 200, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { field: "IsActive", title: "Status", width: 110, filterable: false, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { command: [{ name: "Edit", text: "Edit", imageClass: "k-icon k-edit", click: handleEdit }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Edit", width: "80px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } },
            { command: [{ name: "DeltedRow", text: "Delete", click: DeleteItem }], title: "Delete", width: 70, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
           // { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: handleDelete }], title: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete", width: "80px", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;" } }
        ]
    }).data('kendoGrid');

    //Handling Delete event for PageDeailsGrid row
    ////function handleDelete(event) {
    ////    dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
    ////    if (changeStatus == 0) {
    ////        OpenConfirmationDialog();
    ////    }
    ////    else {
    ////        resetEditDeleteStatus = 3; //Delete Button
    ////        OpenSaveChangesDialog();
    ////    }
    ////};

    //Handling Yes button click for grid row deletion
    @*$('#btnConfirmationOK').click(function () {
        $.ajax({
            url: '@Url.Action("DeleteComodityFromGrid", "Comodity")',
            type: 'POST',
            data: JSON.stringify({ "sourceId": dataitem.ComodityID }),
            contentType: 'application/json;',
            dataType: 'json',
            success: function (respnse) {
                if (respnse.msg.Type == 2) {
                    ClearOperationalMessage();
                    ResetOnlyMasterPageData();
                    $('#MessageText').html(respnse.msg.Msg);
                    $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                    $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                    $(".RequiredTextBox").css("border-color", "");
                    $("#IsActive").val("Active");
                    $(".SetFocus").focus();
                }
                else {
                    $("#MessageText").html(respnse.msg.Msg);
                    $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                }
            }
        });
        $(".RequiredTextBox").css("border-color", "");
        CloseConfirmationDialog();
    });*@

    //Handling No button click for grid row deletion
    //$('#btnConfirmationCancel').click(function () {
    //    dataitem = {};
    //    CloseConfirmationDialog();
    //});



    var DeleteFrom = 0;

    function DeleteItem(event) {
        

        if (changeStatus == 0) {
            DeleteFrom = 1;
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            OpenConfirmationDialog();
        }
        else {
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            resetEditStatus = 3;
            OpenSaveChangesDialog();
        }
    };


   //Handling Yes button click for grid row deletion
    $('#btnConfirmationOK').click(function () {
        var grid = $("#PageDetailGrid").data("kendoGrid");
        var selectedItem = (grid.dataItem(grid.select()));
    
        
       
        if (selectedItem.ComodityID != "") {
            var grid1 = $("#PageDetailGrid").data("kendoGrid");
            dataitem = (grid1.dataItem(grid1.select()));
            $.ajax({
                url: '@Url.Action("DeleteComodityFromGrid", "Comodity")',
                type: 'POST',
                data: JSON.stringify({ "ComodityID": dataitem.ComodityID }),
                contentType: 'application/json;',
                dataType: 'json',
                success: function (respnse) {
                    console.log(dataitem);
                    if (respnse.Type == 0) {
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                    }

                    if (respnse.Type == 2) {
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        $('#MessageText').html(respnse.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });


                    } else {
                        $("#MessageText").html(respnse.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });

                    }

                }
            });
        }
        else {
            $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
        }
        CloseConfirmationDialog();
    });


        //Handling No button click for grid row deletion
    $('#btnConfirmationCancel').click(function () {
        dataitem = {};
        CloseConfirmationDialog();
    });





















    //To clear operational/error message
    ClearOperationalMessage();

    //For removing operational & required message after triggering other event
    ClearRequiredTextBoxRedColor();

    // To check unsaved data in master or details
    CheckUnSavedMasterData();

    // Focus ComodityName textbox
    $(".SetFocus").focus();

    // Edit Button in Grid
    function handleEdit(event) {
        // For Grid Edit Button
        resetEditDeleteStatus = 2;
        // When Changes Data
        if (changeStatus == 1) {
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            OpenSaveChangesDialog();
        }
            // When No Changes Data
        else {
            $(".RequiredTextBox").css("border-color", "");
            dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
            SetMasterData(dataitem);
        }
    };

    // Click Save Chages Popup No Button
    $("#btnSaveChangeWindowOk").click(function () {
        if (resetEditDeleteStatus == 1) { // Reset
            ResetOnlyMasterPageData();
            //ClearDetailGridFilterAndPaging('PageDetailGrid');
            $(".RequiredTextBox").css("border-color", "");
            GridReload('PageDetailGrid');
            $("#IsActive").val("Active");
            changeStatus = 0;
            CloseSaveChangesDialog();
        }
        else if (resetEditDeleteStatus == 2) { // Edit
            $(".RequiredTextBox").css("border-color", "");
            SetMasterData(dataitem);
            changeStatus = 0;
            CloseSaveChangesDialog();
        }
        else if (resetEditDeleteStatus == 3) { // Delete
            $.ajax({
                url: '@Url.Action("Delete", "Comodity")',
                type: 'POST',
                data: JSON.stringify({ "sourceId": dataitem.ComodityID }),
                contentType: 'application/json;',
                dataType: 'json',
                success: function (respnse) {
                    if (respnse.msg.Type == 2) {
                        $('#MessageText').html(respnse.msg.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        ClearOperationalMessage();
                        ResetOnlyMasterPageData();
                        $(".RequiredTextBox").css("border-color", "");
                        $("#IsActive").val("Active");
                        $(".SetFocus").focus();
                    }
                    else {
                        $("#MessageText").html(respnse.msg.Msg);
                        $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                    }
                }
            });
            $(".RequiredTextBox").css("border-color", "");
            changeStatus = 1;//changeStatus = 0; I change here
            CloseSaveChangesDialog();
        }
        else
            CloseSaveChangesDialog();
    });

    // Click Save Chages Popup Cancel Button
    $("#btnSaveChangeWindowCancel").click(function () {
        CloseSaveChangesDialog();
    });

    // **       Page Unloaded **//
    window.onbeforeunload = function (e) {
        if (changeStatus == 1) {
            e.preventDefault();
        }
    };
    //  **       Page Unloaded **//
    });
    // ** End Start Document .Ready



    // Declare View Model Object
    var modelSysComodity = { "ComodityID": "", "ComodityCode": "", "ComodityName": "", "IsActive": ""};
    var saveStatus = 1;
    // Save Or Update Data
    function Save() {

        saveStatus = 1;
        // Check Empty or Maximum Length in ComodityName
        CheckRequiredTextBoxMaxLength('ComodityName', 100);


        // Check Save Proper Data
        if (saveStatus == 1) {
            modelSysComodity.ComodityID = $("#ComodityID").val();
            modelSysComodity.ComodityCode = $("#ComodityCode").val();
            modelSysComodity.ComodityName = $("#ComodityName").val();
            modelSysComodity.IsActive = $("#IsActive option:selected").val();
            


            if (modelSysComodity.ComodityID == "") {

                // INSERT DATA
                $("#divLoading").show()

                $.ajax({
                    type: "POST",

                    url: '@Url.Action("Comodity", "Comodity")',
                    data: JSON.stringify(modelSysComodity),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        //console.log(data);
                        if (data.msg.Type == 2) {
                            //$("#divLoading").hide();
                            $("#ComodityID").val(data.ComodityID);
                            $("#ComodityCode").val(data.ComodityCode);
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(data.msg.Msg);
                            $("#MessageText").css({ 'text-align': "center", 'color': "green", 'font-weight': "bold", 'font-size': "17px" });
                            //Reset();
                        }
                        else {
                            $("#MessageText").html(data.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    },
                    error: function (respnse) {
                        // alert("Failed: " + respnse.status + ": " + respnse.statusText);
                    },

                    complete: function (data) {
                        $("#divLoading").hide();
                    }
                });
            }
            else {
                // UPDATE DATA
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Comodity", "Comodity")',
                    data: JSON.stringify(modelSysComodity),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.msg.Type == 2) {

                            $("#ComodityID").val(data.ComodityID);
                            $("#ComodityCode").val(data.ComodityCode);
                            $('#MessageText').html(data.msg.Msg);
                            $("#MessageText").css({ 'text-align': "center", 'color': "green", 'font-weight': "bold", 'font-size': "17px" });
                            GridReload('PageDetailGrid');

                        }
                        else {
                            $("#MessageText").html(data.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    },
                    error: function (respnse) {
                        // alert("Failed: " + respnse.status + ": " + respnse.statusText);
                    },
                    failure: function (respnse) {

                    }
                });
            }
            @*if (changeStatus == 1) {
                $.ajax({
                    url: '@Url.Action("Comodity", "Comodity")',
                    data: JSON.stringify(modelSysComodity),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (response) {
                        if (response.msg.Type == 2) {
                            changeStatus = 0;
                            $('#ComodityID').val(response.ComodityID);
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else if (response.msg.Type == 3) {
                            changeStatus = 0;
                            GridReload('PageDetailGrid');
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                        else {
                            changeStatus = 0;
                            $('#MessageText').html(response.msg.Msg);
                            $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        }
                    }
                });
            }
                // No Changes Exiting Data
            else {
                $("#MessageText").html("No Changes to Save.");
                $("#MessageText").css({ 'color': 'red', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                $("#ComodityCode").focus();
            }*@
        }
    }

    //########################################################## RESET FUNCTION ###############################################################//
    function Reset()
    {
        GridReload('PageDetailGrid');
        $('.Dropdown').val('');
        $('.FormBody input[type=text]').val('');
        $('.FormBody input[type=text]').val('');
        $('.txtBox').val('');
        $('.FormBody input[type=hidden]').val('');
        $('.FormBody input[type=number]').val('');
        $('.FormBody input[type=button]').attr('disabled', false);
        $('#MessageText').html('');
        $('.FormBody .datePicker').val(getISODateTime(new Date()));
        $('#btnSubmit').attr('disabled', false);
        $('#btnDelete').attr('disabled', true);
        $('.FormBody').find('input, textarea, button, select').attr('disabled', false);
        $('input:checkbox[name=checkbox]').removeAttr('checked');
    }
    //####################################################### END OF RESET FUNCTION #############################################################//
    //############################################################### DELETE WET BLUE ITEM #############################################################

    //############################################################### END OF DELETE WET BLUE ITEM #######################################################


</script>