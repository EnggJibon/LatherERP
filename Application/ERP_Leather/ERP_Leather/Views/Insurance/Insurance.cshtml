
@{
    ViewBag.Title = "Insurance Setup";
    ViewBag.SearchTitle = "Insurance No.";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("~/Views/Common/_FormHeader.cshtml")

<div class="row">
    <input id="BankID" type="hidden" class="txtBox" />
    <input id="BranchID" type="hidden" class="txtBox" />
    <input id="BankID" type="hidden" class="txtBox" />
    <div class="FormBody">    
            <div class="row">
                <div class="col-lg-2">
                    <label>Insurance Comapny Code<span style="color: red">*</span></label>
                </div>
                <div class="col-lg-4">
                    <input type="text" id="BankCode" class="txtBox SetFocus" name="BankCode" tabindex="1" placeholder="Auto" readonly style="width: 270px; margin-left: 0px;" />
                </div>


                <div class="col-lg-2">
                    <label>Insurance Comapny Name<span style="color: red">*</span></label>
                </div>
                <div class="col-lg-4">
                    <input type="text" id="BankName" class="txtBox" name="BankName" tabindex="2" style="width: 270px; margin-left: 0px;" />
                </div>
            </div>

            <div class="row">

                <div class="col-lg-2">
                    <label>Insurance Comapny Category</label>
                </div>
                <div class="col-lg-4">
                    <div id="divBankCategory">
                        <select id="BankCategory" class="Dropdown" tabindex="4" style="width: 270px; margin-left: 0px;">
                            <option value="INC">Insurance</option>
                        </select>
                    </div>
                </div>


                <div class="col-lg-2">
                    <label>Insurance Comapny Type</label>
                </div>
                <div class="col-lg-4">
                    <div id="divBankType">
                        <select id="BankType" class="Dropdown" tabindex="4" style="width: 270px; margin-left: 0px;">
                            <option value="" style="display: none;">--Select--</option>
                            <option value="LOC">Local</option>
                            <option value="FRN">Foreign </option>
                        </select>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-lg-2">
                    <label>Status</label>
                </div>
                <div class="col-lg-4">
                    <select id="IsActive" class="Dropdown" tabindex="5" style="width: 270px; margin-left: 0px;">
                        <option value="Active">Active</option>
                        <option value="Inactive">Inactive</option>
                    </select>
                </div>

            </div>
    </div>

    <div class="FormBody">
        <div class="row">
                <div id="PageDetailGrid" class="MainGrid"></div> 
        </div>
    </div>

</div>



<div id="DeleteCnFBillListConfirmWindow" style="display: none;">
    <input type="button" style="height: 25px; width: 60px; margin-left: 50px; float: left;" id="btnDeleteCnFBillListOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 50px; float: left;" id="btnDeleteCnFBillListCancel" value="Cancel" />
</div>
<div id="DeleteConfirmWindow" style="display: none;">
    <p><h5>Are you sure to delete?</h5></p>
    <input type="button" style="height: 25px; width: 60px; margin-left: 10px; float: left;" id="btnConfirmationOK" value="OK" />
    <input type="button" style="height: 25px; width: 60px; margin-left: 30px; float: left;" id="btnConfirmationCancel" value="Cancel" />
</div>


<script type="text/javascript">

    var changeStatus = 0; // any change textbox/Dropdown/Grid
    var resetEditDeleteStatus = 0;
    var dataitem = {};
    var saveStatus = 1;


    //************************** DROP DOWN FIELD FOR KENDO GRID ************************************//

    var activeAgentDataSource = [{ text: "Active", value: "Active" }, { text: "Inactive", value: "Inactive" }];

    function ddlActive(container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                optionLabel: "Select",
                autoBind: false,
                change: function () {
                    changeStatus = 1;
                },
                dataSource: activeAgentDataSource
            });
    };

    var insuranceCategoryDataSource = [{ text: "Insurance", value: "INC" }];

    function ddlInsuranceCategory(container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                optionLabel: "Select",
                autoBind: false,
                change: function () {
                    changeStatus = 1;
                },
                dataSource: insuranceCategoryDataSource
            });
    };

    var insuranceTypeDataSource = [{ text: "Local", value: "LOC" }, { text: "Foreign", value: "FRN" }];

    function ddlInsuranceType(container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                optionLabel: "Select",
                autoBind: false,
                change: function () {
                    changeStatus = 1;
                },
                dataSource: insuranceTypeDataSource
            });
    };

    //************************** END OF DROP DOWN  ************************************//


    //************************** DEFINE DATA FOR INSURANCE IN KENDO GRID ************************************//

    var branchGridDataSource = new kendo.data.DataSource({
        schema: {
            model: {
                id: "BranchID",
                fields: {
                    BranchID: { editable: true },
                    BanchCode: { editable: true },
                    BranchName: { editable: true },
                    BankID: { editable: true },
                    BankCode: { editable: true },
                    BankName: { editable: true },
                    Address1: { editable: true },
                    Address2: { editable: true },
                    Address3: { editable: true },
                    LCBalance: { editable: true },
                    IsActive: { editable: true }
                }
            }
        },
        pageSize: 50
    });
    var grid = $("#PageDetailGrid").kendoGrid({
        dataSource: branchGridDataSource,
        pageable: true,
        edit: function (e) {

        },
        editable: true,
        selectable: "row",
        scrollable: true,
        navigatable: true,
        filterable: true,
        sortable: true,
        height: 200,
        pageSize: 10,
        transport: {
            read: {
                url: '@Url.Action("GetBranchList", "Insurance")',
                type: "GET",
                dataType: "JSON"
            }
        },
        toolbar: [
            {
                text: "Add Insurance", className: "btnAddInsurance", imageClass: "k-icon k-add"
            }
        ],
        columns:
        [
            { field: "BanchCode",   title: "Banch Code",          width: 125 },
            { field: "BranchName",   title: "Branch Name",          width: 170 },
            //{ field: "BankCategory", title: "Insurance Category",   width: 150,     editor: ddlInsuranceCategory },
            //{ field: "BankType",     title: "Insurance Type",       width: 120,     editor: ddlInsuranceType },
            //{ field: "LCBalance",    title: "LC Balance",           width: 120 },
            { field: "Address1",     title: "Address1",             width: 100 },
            { field: "Address2",     title: "Address2",             width: 100 },
            { field: "Address3",     title: "Address3",             width: 100 },
            { field: "IsActive",     title: "Status",               width: 100,     editor: ddlActive },

            { command: [{ name: "DeltedRow", text: "Delete", click: handleDelete }], title: "Delete", width: "80px" }
        ]
    });



    //************************* INSURANCE KENDO GRID RELATED FUNCTION *****************************//

    //***** ADD ROW IN INSURANCE GRID *****//

    $(document).ready(function () {

        function AddInsurance() {
            var grid = $("#PageDetailGrid").data("kendoGrid");
            $("#PageDetailGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
            });
            grid.addRow();

            var cell = $('#PageDetailGrid').find('tr.k-state-selected td:eq(0)');
            $('#PageDetailGrid').data('kendoGrid').editCell(cell);
        }
        $(".btnAddInsurance").click(function (e) {
            AddInsurance();
        });

        $('#PageDetailGrid').keyup(function (e) {
            if (e.keyCode == 13) {
                AddInsurance();
            }
        });
    });

    //***** END OF ADD ROW IN INSURANCE GRID *****//



    //*****  DELETE ROW FROM INSURANCE GRID *****//


    //Handling Delete event for PageDeailsGrid row
    function handleDelete(event) {
        var gridBank = $("#PageDetailGrid").data("kendoGrid");
        dataitem = (gridBank.dataItem(gridBank.select()));
        //dataitem = grid.dataItem($(event.currentTarget).closest("tr"));
        if (changeStatus == 0) {
            OpenConfirmationDialog();
        }
        else {
            resetEditDeleteStatus = 3; //Delete Button
            OpenSaveChangesDialog();
        }
    };



    //Handling Yes button click for grid row deletion
    $('#btnConfirmationOK').click(function () {
        if (dataitem.BranchID == "") {
            $.ajax({
                url: '@Url.Action("DelBranch","Insurance")',
                type: 'POST',
                data: JSON.stringify({ "branchId": dataitem.BranchID }),
                contentType: 'application/json;',
                dataType: 'json',
                success: function (respnse) {
                    if (respnse.msg.Type == 2) {
                        ClearOperationalMessage();
                        ResetOnlyMasterPageData();
                        $('#MessageText').html(respnse.msg.Msg);
                        $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'left' });
                        $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
                        $(".txtBox").css("border-color", "");
                        $("#IsActive").val("Active");
                        $(".SetFocus").focus();
                    } else {
                        $("#MessageText").html(respnse.msg.Msg);
                        $("#MessageText").css("color", "red");
                    }
                }
            });
        } else {
            $("#PageDetailGrid").data("kendoGrid").dataSource.remove(dataitem);
        }

        $(".txtBox").css("border-color", "");
        CloseConfirmationDialog();
    });



    //Handling No button click for grid row deletion
    $('#btnConfirmationCancel').click(function () {
        dataitem = {};
        CloseConfirmationDialog();
    });

    //***** END OF DELETE ROW FROM INSURANCE GRID *****//



    //************** TO CLEAR OPERATIONAL ERROR MESSAGE FROM SCREEN ****************//
    ClearOperationalMessage();



    //************** FOR REMPVING OPERATIONAL & REQUIRED MESSAGE AFTER TRIGGERING OTHER EVENT ****************//
    ClearRequiredTextBoxRedColor();



    //************** TO CHECK UNSAVED DATA IN MASTER & DETAILS ****************//
    CheckUnSavedMasterData();



    //************** Focus BranchName textbox ****************//
    $(".SetFocus").focus();

    //************************************ END OF INSURANCE KENDO GRID RELATED FUNCTION ***********************************//

    //*************************************** END OF INSURANCE KENDO GRID *************************************************//




    //************************************************* GENERAL FUNCTION *****************************************************//

    //********************** SAVE/UPDATE FUNCTION *******************//

    var objInsurance =
        {
            "BankID": "",
            "BankCode": "",
            "BankName": "",
            "BankCategory": "",
            "BankType": "",
            "IsActive": "",
            "Branches": []
        };

    var objbranchInsurance =
        {
            "BranchID": "",
            "BanchCode": "",
            "BankID": "",
            "BranchName": "",
            "Address1": "",
            "Address2": "",
            "Address3": "",
            "LCBalance": "",
            "IsActive": ""


        };


    function Save()
    {


        if (saveStatus == 1)
        {


            // Check Maximum Length in BankName
            CheckRequiredTextBoxMaxLength('BankName', 100);



            objInsurance.BankID = $("#BankID").val();
            objInsurance.BankCode = $("#BankCode").val();
            objInsurance.BankName = $("#BankName").val();
            objInsurance.BankType = $("#BankType").val();
            objInsurance.BankCategory = "INC";
            objInsurance.IsActive = $("#IsActive").val();

            var branchGrid = $("#PageDetailGrid").data("kendoGrid").dataSource;
            var branchGridData = branchGrid.data();
            for (var i = 0; i < branchGridData.length; i++) {
                if (branchGridData[i].dirty) {
                    objbranchInsurance.BankID = '';
                    objbranchInsurance.BranchID = branchGridData[i].BranchID;
                    objbranchInsurance.BanchCode = branchGridData[i].BanchCode;
                    objbranchInsurance.BranchName = branchGridData[i].BranchName;
                    objbranchInsurance.Address1 = branchGridData[i].Address1;
                    objbranchInsurance.Address2 = branchGridData[i].Address2;
                    objbranchInsurance.Address2 = branchGridData[i].Address3;
                    objbranchInsurance.LCBalance = branchGridData[i].LCBalance;
                    objbranchInsurance.IsActive = branchGridData[i].IsActive;

                    objInsurance.Branches.push(objbranchInsurance);
                    objbranchInsurance =
                            {
                                "BranchID": "",
                                "BanchCode": "",
                                "BankID": "",
                                "BranchName": "",
                                "Address1": "",
                                "Address2": "",
                                "Address3": "",
                                "LCBalance": "",
                                "IsActive": ""
                            };
                }
            }

            if (objInsurance.BankID == "") {

                // INSERT DATA
                $("#divLoading").show()

                $.ajax({
                    type: "POST",

                    url: '@Url.Action("Insurance", "Insurance")',
                    data: JSON.stringify(objInsurance),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        //console.log(data);
                        if (data.msg.Type == 2) {
                            //$("#divLoading").hide();
                            $("#BankID").val(data.BankID);
                            $("#BankCode").val(data.BankCode);
                            $('#MessageText').html(data.msg.Msg);
                            $("#MessageText").css({ 'text-align': "center", 'color': "green", 'font-weight': "bold", 'font-size': "17px" });
                            //Reset();
                        }
                        else {
                            $("#MessageText").html(data.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    },
                    error: function (respnse) {
                        // alert("Failed: " + respnse.status + ": " + respnse.statusText);
                    },

                    complete: function (data) {
                        $("#divLoading").hide();
                    }
                });
            }
            else {
                // UPDATE DATA
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Update", "Insurance")',
                    data: JSON.stringify(objInsurance),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.msg.Type == 2) {

                            $("#BankID").val(data.ReturnId);
                            $("#BankCode").val(data.ReturnCode);
                            $('#MessageText').html(data.msg.Msg);
                            $("#MessageText").css({ 'text-align': "center", 'color': "green", 'font-weight': "bold", 'font-size': "17px" });

                        }
                        else {
                            $("#MessageText").html(data.msg.Msg);
                            $("#MessageText").css("color", "red");
                        }
                    },
                    error: function (respnse) {
                        // alert("Failed: " + respnse.status + ": " + respnse.statusText);
                    },
                    failure: function (respnse) {

                    }
                });
            }

        }
    }

    //********************** END OF SAVE/UPDATE FUNCTION *******************//



    //********************** SEARCH START FUNCTION *******************//




    $("#btnSearch").click(function () {
        SearchResult("GetInsuranceInfo", "Insurance");

    });

    $("#btnSearchGridSearch").click(function () {
        GetSearchResult("SearchInsuranceInfoByBankCode", "Insurance");
    });

    AutoComplete("GetAutoCompleteData", "Insurance");




    function ListOfValueSearchGridEvent(gridName) {
        Reset();

        var grid = $('#' + gridName).data("kendoGrid");
        var selectedItem = (grid.dataItem(grid.select()));
        $.each(selectedItem, function (key, value) {
            if (value != null && value != 0)
                $('#' + key).val(value);
        });

        $("#BankID").val(selectedItem.BankID);
        $("#BankCode").val(selectedItem.BankCode);
        $("#BankName").val(selectedItem.BankName);
        $("#divBankCategory").find('.select').val(selectedItem.BankCategory);
        $("#divBankType").find('.select').val(selectedItem.BankType);
        $("#IsActive").val(selectedItem.IsActive);
        $.ajax({
            url: '@Url.Action("GetInsuranceInfoByBankID", "Insurance")',
            type: 'GET',
            data: { bankId: selectedItem.BankID },
            success: function (data) {
                console.log(data);
                $("#PageDetailGrid").data("kendoGrid").dataSource.data(data.Branches);
            },
            error: function (xhr, status, error) {
                alert(xhr.responseText);
            },
            complete: function (data) {
                $("#divLoading").hide();
            }
        });
    }

    //********************** END OF SEARCH FUNCTION *******************//



    //********************** DELETE FUNCTION *******************//

    // Delete CnF Bill ID with data from Database.

    var CnFBillDeleteWindow = $('#DeleteCnFBillListConfirmWindow').kendoWindow({
        width: "300px",
        padding: "0px 0px 0px 100px",
        title: "Do You Want To Delete This Record?",
        visible: false,
        modal: true,
        draggable: true
        //position: { top: 300, left: 400 }
    }).data('kendoWindow');

    $("#btnDelete").click(function () {
        if ($("#BankID").val() != "") {
            gridToDelete = "all";
            CnFBillDeleteWindow.open();
            CnFBillDeleteWindow.center();
        } else if ($("#BankID").val() == "" && changeStatus == 1) {
            $('#MessageText').html("The record you are trying to delete is not in the database.");
            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
        } else {

        }
    });


    $('#btnDeleteCnFBillListOK').click(function () {
        if (gridToDelete == "all") {
            if ($("#BankID").val() != "") {
                var bankID = $("#BankID").val();
                $.ajax({
                    url: '@Url.Action("Delete", "Insurance")',
                    type: 'GET',
                    data: ({ "bankID": bankID }),
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (response) {
                        if (response.Type == 4) {
                            $('#MessageText').html(response.Msg);
                            $("#MessageText").css({ 'color': 'green', 'font-size': 'larger', 'font-weight': 'bold', 'text-align': 'center' });
                        } else {
                            $("#MessageText").html(response.Msg);
                            $("#MessageText").css("color", "red");
                        }
                        CnFBillDeleteWindow.close();
                    }
                });
            }
            gridToDelete = "";
            CnFBillDeleteWindow.close();
        }
    });
    $("#btnDeleteCnFBillListCancel").click(function () {
        CnFBillDeleteWindow.close();
    });

    //********************** END OF DELETE FUNCTION *******************//





    //********************** RESET FUNCTION *******************//

    function Reset() {
        $("#PageDetailGrid").data("kendoGrid").dataSource.data('');
        $('.FormBody input[type=text]').val('');
        $('.Dropdown').val('');
        $('.FormBody input[type=hidden]').val('');
        $('.FormBody input[type=number]').val('');
        $('.FormBody input[type=button]').attr('disabled', false);
        $('#MessageText').html('');
        $('.FormBody .datePicker').val(getISODateTime(new Date()));
        $('#btnSubmit').attr('disabled', false);
        $('#btnDelete').attr('disabled', false);
        $('.FormBody').find('input, textarea, button, select').attr('disabled', false);
    }

    //********************** END OF RESET FUNCTION *******************//
    //************************************************* END OF GENERAL FUNCTION *****************************************************//
</script>